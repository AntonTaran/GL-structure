!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,o){!function(e,t){if(!k[e]||!b[e])return;for(var o in b[e]=!1,t)Object.prototype.hasOwnProperty.call(t,o)&&(m[o]=t[o]);0==--h&&0===v&&E()}(e,o),t&&t(e,o)};var o,n=!0,i="75859d6715d2eda688bf",a=1e4,l={},s=[],r=[];function c(e){var t=T[e];if(!t)return _;var n=function(n){return t.hot.active?(T[n]?-1===T[n].parents.indexOf(e)&&T[n].parents.push(e):(s=[e],o=n),-1===t.children.indexOf(n)&&t.children.push(n)):(console.warn("[HMR] unexpected require("+n+") from disposed module "+e),s=[]),_(n)},i=function(e){return{configurable:!0,enumerable:!0,get:function(){return _[e]},set:function(t){_[e]=t}}};for(var a in _)Object.prototype.hasOwnProperty.call(_,a)&&"e"!==a&&"t"!==a&&Object.defineProperty(n,a,i(a));return n.e=function(e){return"ready"===p&&g("prepare"),v++,_.e(e).then(t,function(e){throw t(),e});function t(){v--,"prepare"===p&&(y[e]||I(e),0===v&&0===h&&E())}},n.t=function(e,t){return 1&t&&(e=n(e)),_.t(e,-2&t)},n}var d=[],p="idle";function g(e){p=e;for(var t=0;t<d.length;t++)d[t].call(null,e)}var u,m,f,h=0,v=0,y={},b={},k={};function M(e){return+e+""===e?+e:e}function O(e){if("idle"!==p)throw new Error("check() is only allowed in idle status");return n=e,g("check"),(t=a,t=t||1e4,new Promise(function(e,o){if("undefined"==typeof XMLHttpRequest)return o(new Error("No browser support"));try{var n=new XMLHttpRequest,a=_.p+""+i+".hot-update.json";n.open("GET",a,!0),n.timeout=t,n.send(null)}catch(e){return o(e)}n.onreadystatechange=function(){if(4===n.readyState)if(0===n.status)o(new Error("Manifest request to "+a+" timed out."));else if(404===n.status)e();else if(200!==n.status&&304!==n.status)o(new Error("Manifest request to "+a+" failed."));else{try{var t=JSON.parse(n.responseText)}catch(e){return void o(e)}e(t)}}})).then(function(e){if(!e)return g("idle"),null;b={},y={},k=e.c,f=e.h,g("prepare");var t=new Promise(function(e,t){u={resolve:e,reject:t}});m={};return I(0),"prepare"===p&&0===v&&0===h&&E(),t});var t}function I(e){k[e]?(b[e]=!0,h++,function(e){var t=document.getElementsByTagName("head")[0],o=document.createElement("script");o.charset="utf-8",o.src=_.p+""+e+"."+i+".hot-update.js",t.appendChild(o)}(e)):y[e]=!0}function E(){g("ready");var e=u;if(u=null,e)if(n)Promise.resolve().then(function(){return L(n)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var o in m)Object.prototype.hasOwnProperty.call(m,o)&&t.push(M(o));e.resolve(t)}}function L(t){if("ready"!==p)throw new Error("apply() is only allowed in ready status");var o,n,a,r,c;function d(e){for(var t=[e],o={},n=t.slice().map(function(e){return{chain:[e],id:e}});n.length>0;){var i=n.pop(),a=i.id,l=i.chain;if((r=T[a])&&!r.hot._selfAccepted){if(r.hot._selfDeclined)return{type:"self-declined",chain:l,moduleId:a};if(r.hot._main)return{type:"unaccepted",chain:l,moduleId:a};for(var s=0;s<r.parents.length;s++){var c=r.parents[s],d=T[c];if(d){if(d.hot._declinedDependencies[a])return{type:"declined",chain:l.concat([c]),moduleId:a,parentId:c};-1===t.indexOf(c)&&(d.hot._acceptedDependencies[a]?(o[c]||(o[c]=[]),u(o[c],[a])):(delete o[c],t.push(c),n.push({chain:l.concat([c]),id:c})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:o}}function u(e,t){for(var o=0;o<t.length;o++){var n=t[o];-1===e.indexOf(n)&&e.push(n)}}t=t||{};var h={},v=[],y={},b=function(){console.warn("[HMR] unexpected require("+I.moduleId+") to disposed module")};for(var O in m)if(Object.prototype.hasOwnProperty.call(m,O)){var I;c=M(O);var E=!1,L=!1,A=!1,S="";switch((I=m[O]?d(c):{type:"disposed",moduleId:O}).chain&&(S="\nUpdate propagation: "+I.chain.join(" -> ")),I.type){case"self-declined":t.onDeclined&&t.onDeclined(I),t.ignoreDeclined||(E=new Error("Aborted because of self decline: "+I.moduleId+S));break;case"declined":t.onDeclined&&t.onDeclined(I),t.ignoreDeclined||(E=new Error("Aborted because of declined dependency: "+I.moduleId+" in "+I.parentId+S));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(I),t.ignoreUnaccepted||(E=new Error("Aborted because "+c+" is not accepted"+S));break;case"accepted":t.onAccepted&&t.onAccepted(I),L=!0;break;case"disposed":t.onDisposed&&t.onDisposed(I),A=!0;break;default:throw new Error("Unexception type "+I.type)}if(E)return g("abort"),Promise.reject(E);if(L)for(c in y[c]=m[c],u(v,I.outdatedModules),I.outdatedDependencies)Object.prototype.hasOwnProperty.call(I.outdatedDependencies,c)&&(h[c]||(h[c]=[]),u(h[c],I.outdatedDependencies[c]));A&&(u(v,[I.moduleId]),y[c]=b)}var D,j=[];for(n=0;n<v.length;n++)c=v[n],T[c]&&T[c].hot._selfAccepted&&j.push({module:c,errorHandler:T[c].hot._selfAccepted});g("dispose"),Object.keys(k).forEach(function(e){!1===k[e]&&function(e){delete installedChunks[e]}(e)});for(var C,w,N=v.slice();N.length>0;)if(c=N.pop(),r=T[c]){var x={},H=r.hot._disposeHandlers;for(a=0;a<H.length;a++)(o=H[a])(x);for(l[c]=x,r.hot.active=!1,delete T[c],delete h[c],a=0;a<r.children.length;a++){var R=T[r.children[a]];R&&((D=R.parents.indexOf(c))>=0&&R.parents.splice(D,1))}}for(c in h)if(Object.prototype.hasOwnProperty.call(h,c)&&(r=T[c]))for(w=h[c],a=0;a<w.length;a++)C=w[a],(D=r.children.indexOf(C))>=0&&r.children.splice(D,1);for(c in g("apply"),i=f,y)Object.prototype.hasOwnProperty.call(y,c)&&(e[c]=y[c]);var P=null;for(c in h)if(Object.prototype.hasOwnProperty.call(h,c)&&(r=T[c])){w=h[c];var z=[];for(n=0;n<w.length;n++)if(C=w[n],o=r.hot._acceptedDependencies[C]){if(-1!==z.indexOf(o))continue;z.push(o)}for(n=0;n<z.length;n++){o=z[n];try{o(w)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:c,dependencyId:w[n],error:e}),t.ignoreErrored||P||(P=e)}}}for(n=0;n<j.length;n++){var B=j[n];c=B.module,s=[c];try{_(c)}catch(e){if("function"==typeof B.errorHandler)try{B.errorHandler(e)}catch(o){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:c,error:o,originalError:e}),t.ignoreErrored||P||(P=o),P||(P=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:c,error:e}),t.ignoreErrored||P||(P=e)}}return P?(g("fail"),Promise.reject(P)):(g("idle"),new Promise(function(e){e(v)}))}var T={};function _(t){if(T[t])return T[t].exports;var n=T[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:o!==e,active:!0,accept:function(e,o){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var n=0;n<e.length;n++)t._acceptedDependencies[e[n]]=o||function(){};else t._acceptedDependencies[e]=o||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var o=0;o<e.length;o++)t._declinedDependencies[e[o]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var o=t._disposeHandlers.indexOf(e);o>=0&&t._disposeHandlers.splice(o,1)},check:O,apply:L,status:function(e){if(!e)return p;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var t=d.indexOf(e);t>=0&&d.splice(t,1)},data:l[e]};return o=void 0,t}(t),parents:(r=s,s=[],r),children:[]};return e[t].call(n.exports,n,n.exports,c(t)),n.l=!0,n.exports}_.m=e,_.c=T,_.d=function(e,t,o){_.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},_.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},_.t=function(e,t){if(1&t&&(e=_(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(_.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)_.d(o,n,function(t){return e[t]}.bind(null,n));return o},_.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return _.d(t,"a",t),t},_.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},_.p="/build/",_.h=function(){return i},c(0)(_.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t,o){"use strict";function n(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}o.r(t),o.d(t,"chart_config",function(){return l});var i,a,l=[{container:"#collapsable-example",animateOnInit:!0,callback:{onToggleCollapseFinished:function(e){}},node:{collapsable:!0},levelSeparation:30,siblingSeparation:10,subTeeSeparation:15,nodeAlign:"LEFT",connectors:{type:"step",style:{stroke:"grey","stroke-width":4}},animation:{nodeAnimation:"linear ",nodeSpeed:500,connectorsAnimation:"linear",connectorsSpeed:100}},i={image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"Director",projects:[{name:"Hilti",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"}},{parent:i,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"Manager",projects:[{name:"Medavant",url:"#"},{name:"Some else",url:"#"}]},text:{name:"Iulia Izonina",nodeAlign:"BOTTOM"}},{parent:i,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[{name:"Sofos",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Igor Rudko",nodeAlign:"BOTTOM"},stackChildren:!0},a={parent:i,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[{name:"Sofos",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"},stackChildren:!0},{parent:a,image:"./src/assets/im age/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"},stackChildren:!0}];l.map(function(e,t){return e.HTMLid=t});var s=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,o,i;return t=e,(o=[{key:"next",value:function(e){this.state=e}},{key:"subscribe",value:function(e){return this.state}}])&&n(t.prototype,o),i&&n(t,i),e}());s.subscribe(function(e){console.log(e)}),s.next(5),s.next(20),s.next(44)},function(e,t,o){"use strict";o.r(t);o(3);function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function a(e,t,o){return t&&i(e.prototype,t),o&&i(e,o),e}var l=[{name:"Nataliya Siromakha",par:"root",children:[],image:"https://glo-assets.globallogic.com/system/data/55495/profile/NS.jpg?1514899516",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,EngineeringDirector,EngineeringDirector,Engineering",profileLink:"https://glo.globallogic.com/users/profile/nataliya.siromakha",projects:"MTC WFA TestSOP, Sophos"},text:{name:"Nataliya Siromakha"}},{name:"Yevgenii Kolometskyi",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/3549/profile/51725.jpg?1312378925",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Senior Manager,Engineering",projects:"LeCroy, Sophos"},text:{name:"Yevgenii Kolometskyi",nodeAlign:"BOTTOM"}},{name:"Igor Rudko",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/31317/profile/Igor_Rudko_(1).jpg?1450094171",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"LeCroy, Sophos"},text:{name:"Igor Rudko",nodeAlign:"BOTTOM"}},{name:"Denys Bratchuk",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/70612/profile/denys-smile.jpg?1542817746",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"ABC-Expense report solution"},text:{name:"Denys Bratchuk",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[]},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[{name:"Aero Development",url:"#"},{name:" Rimage",url:"#"}]},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[{name:"Aero Development",url:"#"},{name:" Rimage",url:"#"}]},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Aero Development"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}}],s=(document.getElementsByTagName("svg"),document.querySelector("#collapsable-example")),r=document.querySelector(".close-btn"),c=(document.querySelector(".container"),document.querySelector(".modal-overlay"));var d={chart:{container:"#collapsable-example",animateOnInit:!0,callback:{onToggleCollapseFinished:function(e){}},node:{collapsable:!0},levelSeparation:30,siblingSeparation:30,subTeeSeparation:30,nodeAlign:"TOP",connectors:{type:"step",style:{stroke:"#72849a","stroke-width":2}},animation:{nodeAnimation:"linear ",nodeSpeed:500,connectorsAnimation:"linear",connectorsSpeed:100}},nodeStructure:function(){l.map(function(e,t){return e.HTMLid=t+1});for(var e=[],t=0;t<l.length;t++){for(var o=l[t],n=t;n<l.length;n++){var i=l[n];o.name===i.par&&(o.children.push(i),p(i))}e.push(o)}return e.map(function(e){e.children.length||(e.collapsed=!1)}),e[0]}()};function p(e){e.children.length}(g=0,function(){return g+=.1})();var g,u=new(function(){function e(t){n(this,e),this.modalInfo=t,this.addCancelBtnEventListener(),document.body.addEventListener("click",function(e){console.log(screen),console.log(window.scroll()),console.log(window.scroll),console.log(window.outerHeight),console.log(window.pageYOffset),console.log(event.offsetY),console.log(event),console.log(window)})}return a(e,[{key:"addCancelBtnEventListener",value:function(){var e=this;this.modalInfo.MODAL_CANCEL_BTN.addEventListener("click",function(){e.closeModal()})}},{key:"onPersonTileClick",value:function(e,t){this.openModal(t),this.updateModalContent(e),this.setProfileLinkToModalBtn(e)}},{key:"setModalPosition",value:function(e){this.modalInfo.MODAL_HTML[0].style.top=(window.innerHeight-350)/2+"px"}},{key:"openModal",value:function(e){this.setModalPosition(e),this.modalInfo.MODAL_HTML[0].classList.add("additional-info-modal--open"),this.modalInfo.MODAL_OVERLAY[0].classList.add("modal-overlay--open")}},{key:"updateModalContent",value:function(e){this.modalInfo.MODAL_INFO_AVATAR[0].innerHTML="<img src=".concat(e.image," alt=").concat(e.text.name,">"),this.modalInfo.MODAL_INFO_NAME[0].innerHTML=e.text.name,this.modalInfo.MODAL_INFO_POST[0].innerHTML=e.additionalInfo.post,this.modalInfo.MODAL_INFO_PROJECTS[0].innerHTML=e.additionalInfo.projects}},{key:"closeModal",value:function(){this.modalInfo.MODAL_HTML[0].classList.remove("additional-info-modal--open"),this.modalInfo.MODAL_OVERLAY[0].classList.remove("modal-overlay--open"),this.modalInfo.MODAL_HTML[0].removeAttribute("style"),this.modalInfo.MODAL_HTML[0].removeAttribute("style")}},{key:"setProfileLinkToModalBtn",value:function(e){this.modalInfo.MODAL_VIEW_PROFILE[0].href=e.additionalInfo.profileLink}}]),e}())({MODAL_HTML:document.getElementsByClassName("additional-info-modal"),MODAL_INFO_AVATAR:document.getElementsByClassName("image-holder"),MODAL_INFO_NAME:document.getElementsByClassName("person-name"),MODAL_INFO_POST:document.getElementsByClassName("person-post"),MODAL_INFO_PROJECTS:document.getElementsByClassName("person-projects"),MODAL_OVERLAY:document.getElementsByClassName("modal-overlay"),MODAL_CANCEL_BTN:document.querySelector(".modal-cancel-btn"),MODAL_VIEW_PROFILE:document.getElementsByClassName("modal-link-btn")});new(function(){function e(t){n(this,e),this.controls=t,this.addControlEventListener(),this.fullScreenMode=!1,this.addDocumentEventListener()}return a(e,[{key:"addControlEventListener",value:function(){var e=this;this.controls.ZOOM_CONTROLS.addEventListener("click",function(t){e.onControlClick(t.target)})}},{key:"addDocumentEventListener",value:function(){document.addEventListener("fullscreenchange",this.onToggleScreenMode),document.addEventListener("webkitfullscreenchange",this.onToggleScreenMode),document.addEventListener("mozfullscreenchange",this.onToggleScreenMode),document.addEventListener("MSFullscreenChange",this.onToggleScreenMode)}},{key:"onControlClick",value:function(e){-1!==Array.from(e.classList).indexOf("decrease-zoom")&&this.controls.ZOOM_VALUE>5&&(this.decreaseZoom(),this.controls.ZOOM_VALUE<=5?this.disableControl("decrease-zoom"):this.enableControl("increase-zoom")),-1!==Array.from(e.classList).indexOf("increase-zoom")&&this.controls.ZOOM_VALUE<=15&&(this.increaseZoom(),this.controls.ZOOM_VALUE>=15?this.disableControl("increase-zoom"):this.enableControl("decrease-zoom")),-1!==Array.from(e.classList).indexOf("fullscreen-mode")&&this.openFullScreen()}},{key:"increaseZoom",value:function(){s.style.transform="scale(".concat(++this.controls.ZOOM_VALUE/10,")")}},{key:"decreaseZoom",value:function(){s.style.transform="scale(".concat(--this.controls.ZOOM_VALUE/10,")")}},{key:"disableControl",value:function(e){switch(e){case"decrease-zoom":this.controls.DECREASE_CONTROL.classList.add("zoom-control--disabled");break;case"increase-zoom":this.controls.INCREASE_CONTROL.classList.add("zoom-control--disabled")}}},{key:"enableControl",value:function(e){switch(e){case"decrease-zoom":this.controls.DECREASE_CONTROL.classList.remove("zoom-control--disabled");break;case"increase-zoom":this.controls.INCREASE_CONTROL.classList.remove("zoom-control--disabled")}}},{key:"openFullScreen",value:function(){var e=document.querySelector(".container");e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullScreen?(e.webkitRequestFullScreen(),console.log(e.webkitRequestFullScreen)):e.msRequestFullscreen&&e.msRequestFullscreen(),this.fullScreenMode||(document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.msExitFullscreen&&document.msExitFullscreen())}},{key:"onToggleScreenMode",value:function(){this.fullScreenMode=!this.fullScreenMode}}]),e}())({ZOOM_CONTROLS:document.querySelector(".zoom-controls"),DECREASE_CONTROL:document.querySelector(".decrease-zoom"),INCREASE_CONTROL:document.querySelector(".increase-zoom"),ZOOM_VALUE:10});s.addEventListener("click",function(e){-1!==Array.from(e.target.classList).indexOf("node")&&function(e){var t=l.find(function(t){return t.HTMLid==e.target.id});u.onPersonTileClick(t,e)}(e)}),r.addEventListener("click",function(e){u.closeModal(e)}),c.addEventListener("click",function(e){u.closeModal(e)}),new Treant(d);var m=[{title:"Inna Dukhota",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",subtitle:"Talent Aquisition Group ",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota"},{title:"Anna Veselova",avatar:"https://glo-assets.globallogic.com/system/data/65815/profile/IMG_7129.JPG?1534766416",subtitle:"Resourcing ",profileLink:"https://glo.globallogic.com/users/profile/anna.veselova"},{title:"Ellina Medynska ",avatar:"https://glo-assets.globallogic.com/system/data/48745/profile/IMG_9350.jpg?1498201664",subtitle:"PR & Marketing",profileLink:"https://glo.globallogic.com/users/profile/ellina.medynska"},{title:"Sergii Shmatko",avatar:"https://glo-assets.globallogic.com/system/data/60956/profile/Serhii_Shmatko.jpg?1526999529",subtitle:"IT Infrastructure",profileLink:"https://glo.globallogic.com/users/profile/serhii.shmatko"},{title:"Vladyslav Domin",avatar:"https://glo-assets.globallogic.com/system/data/51449/profile/Vladyslav_Domin.jpg?1504697687",subtitle:"Employee Services ",profileLink:"https://glo.globallogic.com/users/profile/vladyslav.domin"},{title:"Nataliya Osipenko",avatar:"https://glo-assets.globallogic.com/system/data/41292/profile/IMG_9556.jpg?1478695541",subtitle:"Process Management (PMG)",profileLink:"https://glo.globallogic.com/users/profile/nataliia.osypenko"},{title:"TBD",avatar:"",subtitle:"Business Partner ",profileLink:""}];new(function(){function e(t){n(this,e),this.divisionsInfo=t,this.setDataTile()}return a(e,[{key:"setDataTile",value:function(){var e=this;m.forEach(function(t){var o=document.createElement("div");o.className="divisions_heads tile-wrapper",o.innerHTML='\n         <a href="'.concat(t.profileLink,'" target="_blank" class="tile tile--small tile--framed division-head-tile">\n           <div class="tile-image-holder division-head__image-holder">\n                ').concat(e.onCheckImage(t),'\n             </div>\n            <p class="tile-name">').concat(t.title,'</p>\n            <p class="tile-desc">').concat(t.subtitle,"</p>\n         </a>"),e.divisionsInfo.SECTION_CONTAINER[0].appendChild(o)})}},{key:"onCheckImage",value:function(e){return e.avatar?"<img src=".concat(e.avatar," alt=").concat(e.name,">"):"<img src='https://glo-assets.globallogic.com/system/data/1555/orange_theme/profile/avatar.jpg?1312376270' alt=".concat(e.name,">")}}]),e}())({SECTION_CONTAINER:document.getElementsByClassName("division-heads")});var f=function(){function e(t){n(this,e),this.info=t,this.setDataTile()}return a(e,[{key:"setDataTile",value:function(){var t=this;this.info.data.forEach(function(o){var n=document.createElement("div");n.className=t.info.classEl,n.innerHTML='\n        <a href="'.concat(o.profileLink,'" target="_blank" class="tile tile--big">\n          <div class="tile-image-holder united-tiles-section__image-holder">\n             ').concat(e.onCheckImage(o),'\n          </div>\n          <p class="tile-desc">').concat(o.subtitle,'</p>\n          <p class="tile-name">').concat(o.title,"</p>\n        </a>"),t.info.SECTION_CONTAINER[0].appendChild(n)})}}],[{key:"onCheckImage",value:function(e){return e.avatar?"<img src=".concat(e.avatar," alt=").concat(e.name,">"):"<img src='https://glo-assets.globallogic.com/system/data/1555/orange_theme/profile/avatar.jpg?1312376270' alt=".concat(e.name,">")}}]),e}();new f({SECTION_CONTAINER:document.getElementsByClassName("strategic-focus-area__tiles-holder"),classEl:"tile-wrapper",data:[{title:"Iuliia Izonina",position:"Director, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",profileLink:"https://glo.globallogic.com/users/profile/iuliia.izonina",subtitle:"Center Scalability "},{title:"Oleksandr Lanin",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70991/profile/alexlain-gl-2018.jpg?1543590636",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.lanin",subtitle:"Business Development "},{title:"Nataliya Siromakha",position:"Kharkiv Location Head",avatar:"https://glo-assets.globallogic.com/system/data/55495/profile/NS.jpg?1514899516",profileLink:"https://glo.globallogic.com/users/profile/nataliya.siromakha",subtitle:"Practices Development "},{title:"Ellina Medynska ",position:"Senior Specialist, Marketing",avatar:"https://glo-assets.globallogic.com/system/data/48745/profile/IMG_9350.jpg?1498201664",profileLink:"https://glo.globallogic.com/users/profile/ellina.medynska",subtitle:"PR & Marketing"},{title:"Inna Dukhota",position:"Senior Manager, People Development ",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota",subtitle:"TAG Efficiency"},{title:"axcacs",position:"Senior Manager, People Development ",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota",subtitle:"TAG Efficiency"}]}),new f({SECTION_CONTAINER:document.getElementsByClassName("technology-leads__tiles-holder"),classEl:"tile-wrapper",data:[{title:"Oleksandr Lanin",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70991/profile/alexlain-gl-2018.jpg?1543590636",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.lanin",subtitle:".NET "},{title:"Olena Yelisheva",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/12765/profile/IMG_0684_21.jpg?1364295028",profileLink:"https://glo.globallogic.com/users/profile/olena.ielysheva",subtitle:"QA Automation "},{title:"Oleksandr Rybtsov",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70168/profile/Picture.png?1542113014",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.rybtsov",subtitle:"Java "},{title:"Denys Bratchuk",position:"Director, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70612/profile/denys-smile.jpg?1542817746",profileLink:"https://glo.globallogic.com/users/profile/denys.bratchuk",subtitle:"JavaScript "},{title:"Oleksandr Svideniuk",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/55556/profile/ava_2017.jpg?1514971986",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.svideniuk",subtitle:"C++"}]}),new f({SECTION_CONTAINER:document.getElementsByClassName("practices-leads__tiles-holder"),classEl:"tile-wrapper",data:[{title:"Andrii Gnennyi",position:"Principal, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/40620/profile/AGN_Square.jpg?1477057620",profileLink:"https://glo.globallogic.com/users/profile/andriy.gnennyy",subtitle:"Cloud"},{title:"Andrii Antilikatorov",position:"Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/16714/profile/Antilikatorov.png?1392109625",profileLink:"https://glo.globallogic.com/users/profile/Andrii.Antilikatorov",subtitle:"Machine Learning/AI"},{title:"Igor Manzhos",position:"Senior Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/67610/profile/viber_image.jpg?1537615575",profileLink:"https://glo.globallogic.com/users/profile/igor.manzhos",subtitle:"Machine Learning/AI"},{title:"Yevhen Napriaglo",position:"Senior Solution Architect, Technology",avatar:"https://glo-assets.globallogic.com/system/data/56844/profile/1.png?1517996955",profileLink:"https://glo.globallogic.com/users/profile/yevhen.napriahlo",subtitle:"Architecture/Digital Transformation"},{title:"Yevgenii Kolometskyi",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3549/profile/51725.jpg?1312378925",profileLink:"https://glo.globallogic.com/users/profile/y.kolometskyi",subtitle:"Automotive/Embedded"},{title:"Oleksandr Adamov",position:"Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/57013/profile/me_no_ransomware.jpg?1518506599",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.adamov",subtitle:"Security "},{title:"Vitaliy Tilinskiy",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/54574/profile/Vitaliy.jpg?1512511121",profileLink:"https://glo.globallogic.com/users/profile/vitaliy.tilinskiy",subtitle:"DevOps"},{title:"Oleksandra Skybina",position:"Associate Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3626/profile/52101.jpg?1312378980",profileLink:"https://glo.globallogic.com/users/profile/Oleksandra.Skybina",subtitle:"Agile"},{title:"Dmytro Dvornichenko",position:"Senior Designer, Usability & Design",avatar:"https://glo-assets.globallogic.com/system/data/60298/profile/379788_2699761009461_1378935210_n.jpg?1525948393",profileLink:"https://glo.globallogic.com/users/profile/dmytro.dvornichenko",subtitle:"UX/UI"},{title:"Oleksandr Furdylo",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3401/profile/51782.jpg?1312378817",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.furdylo",subtitle:"Mobility "}]})},function(e,t,o){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbW9kdWxlcy9jaGFydC1jb25maWcuanMiLCJ3ZWJwYWNrOi8vLy4vbW9kdWxlcy9pbmRleC5qcyJdLCJuYW1lcyI6WyJwYXJlbnRIb3RVcGRhdGVDYWxsYmFjayIsIndpbmRvdyIsImNodW5rSWQiLCJtb3JlTW9kdWxlcyIsImhvdEF2YWlsYWJsZUZpbGVzTWFwIiwiaG90UmVxdWVzdGVkRmlsZXNNYXAiLCJtb2R1bGVJZCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImhvdFVwZGF0ZSIsImhvdFdhaXRpbmdGaWxlcyIsImhvdENodW5rc0xvYWRpbmciLCJob3RVcGRhdGVEb3dubG9hZGVkIiwiaG90QWRkVXBkYXRlQ2h1bmsiLCJob3RDdXJyZW50Q2hpbGRNb2R1bGUiLCJob3RBcHBseU9uVXBkYXRlIiwiaG90Q3VycmVudEhhc2giLCJob3RSZXF1ZXN0VGltZW91dCIsImhvdEN1cnJlbnRNb2R1bGVEYXRhIiwiaG90Q3VycmVudFBhcmVudHMiLCJob3RDdXJyZW50UGFyZW50c1RlbXAiLCJob3RDcmVhdGVSZXF1aXJlIiwibWUiLCJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImZuIiwicmVxdWVzdCIsImhvdCIsImFjdGl2ZSIsInBhcmVudHMiLCJpbmRleE9mIiwicHVzaCIsImNoaWxkcmVuIiwiY29uc29sZSIsIndhcm4iLCJPYmplY3RGYWN0b3J5IiwibmFtZSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJzZXQiLCJ2YWx1ZSIsImRlZmluZVByb3BlcnR5IiwiZSIsImhvdFN0YXR1cyIsImhvdFNldFN0YXR1cyIsInRoZW4iLCJmaW5pc2hDaHVua0xvYWRpbmciLCJlcnIiLCJob3RXYWl0aW5nRmlsZXNNYXAiLCJob3RFbnN1cmVVcGRhdGVDaHVuayIsInQiLCJtb2RlIiwiaG90U3RhdHVzSGFuZGxlcnMiLCJuZXdTdGF0dXMiLCJpIiwibGVuZ3RoIiwiaG90RGVmZXJyZWQiLCJob3RVcGRhdGVOZXdIYXNoIiwidG9Nb2R1bGVJZCIsImlkIiwiaG90Q2hlY2siLCJhcHBseSIsIkVycm9yIiwicmVxdWVzdFRpbWVvdXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIlhNTEh0dHBSZXF1ZXN0IiwicmVxdWVzdFBhdGgiLCJwIiwib3BlbiIsInRpbWVvdXQiLCJzZW5kIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInVwZGF0ZSIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsImMiLCJoIiwicHJvbWlzZSIsImhlYWQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsImNoYXJzZXQiLCJzcmMiLCJhcHBlbmRDaGlsZCIsImhvdERvd25sb2FkVXBkYXRlQ2h1bmsiLCJkZWZlcnJlZCIsImhvdEFwcGx5IiwicmVzdWx0Iiwib3V0ZGF0ZWRNb2R1bGVzIiwib3B0aW9ucyIsImNiIiwiaiIsIm1vZHVsZSIsImdldEFmZmVjdGVkU3R1ZmYiLCJ1cGRhdGVNb2R1bGVJZCIsIm91dGRhdGVkRGVwZW5kZW5jaWVzIiwicXVldWUiLCJzbGljZSIsIm1hcCIsImNoYWluIiwicXVldWVJdGVtIiwicG9wIiwiX3NlbGZBY2NlcHRlZCIsIl9zZWxmRGVjbGluZWQiLCJ0eXBlIiwiX21haW4iLCJwYXJlbnRJZCIsInBhcmVudCIsIl9kZWNsaW5lZERlcGVuZGVuY2llcyIsImNvbmNhdCIsIl9hY2NlcHRlZERlcGVuZGVuY2llcyIsImFkZEFsbFRvU2V0IiwiYSIsImIiLCJpdGVtIiwiYXBwbGllZFVwZGF0ZSIsIndhcm5VbmV4cGVjdGVkUmVxdWlyZSIsImFib3J0RXJyb3IiLCJkb0FwcGx5IiwiZG9EaXNwb3NlIiwiY2hhaW5JbmZvIiwiam9pbiIsIm9uRGVjbGluZWQiLCJpZ25vcmVEZWNsaW5lZCIsIm9uVW5hY2NlcHRlZCIsImlnbm9yZVVuYWNjZXB0ZWQiLCJvbkFjY2VwdGVkIiwib25EaXNwb3NlZCIsImlkeCIsIm91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyIsImVycm9ySGFuZGxlciIsImtleXMiLCJmb3JFYWNoIiwiaW5zdGFsbGVkQ2h1bmtzIiwiaG90RGlzcG9zZUNodW5rIiwiZGVwZW5kZW5jeSIsIm1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzIiwiZGF0YSIsImRpc3Bvc2VIYW5kbGVycyIsIl9kaXNwb3NlSGFuZGxlcnMiLCJjaGlsZCIsInNwbGljZSIsIm1vZHVsZXMiLCJlcnJvciIsImNhbGxiYWNrcyIsIm9uRXJyb3JlZCIsImRlcGVuZGVuY3lJZCIsImlnbm9yZUVycm9yZWQiLCJlcnIyIiwib3JpZ2luYWxFcnJvciIsImV4cG9ydHMiLCJsIiwiYWNjZXB0IiwiZGVwIiwiY2FsbGJhY2siLCJ1bmRlZmluZWQiLCJkZWNsaW5lIiwiZGlzcG9zZSIsImFkZERpc3Bvc2VIYW5kbGVyIiwicmVtb3ZlRGlzcG9zZUhhbmRsZXIiLCJjaGVjayIsImFkZFN0YXR1c0hhbmRsZXIiLCJyZW1vdmVTdGF0dXNIYW5kbGVyIiwiaG90Q3JlYXRlTW9kdWxlIiwibSIsImQiLCJnZXR0ZXIiLCJvIiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInMiLCJwYXJlbnRfbiIsImNoXzMiLCJjaGFydF9jb25maWciLCJjb250YWluZXIiLCJhbmltYXRlT25Jbml0Iiwib25Ub2dnbGVDb2xsYXBzZUZpbmlzaGVkIiwibm9kZSIsImNvbGxhcHNhYmxlIiwibGV2ZWxTZXBhcmF0aW9uIiwic2libGluZ1NlcGFyYXRpb24iLCJzdWJUZWVTZXBhcmF0aW9uIiwibm9kZUFsaWduIiwiY29ubmVjdG9ycyIsInN0eWxlIiwic3Ryb2tlIiwic3Ryb2tlLXdpZHRoIiwiYW5pbWF0aW9uIiwibm9kZUFuaW1hdGlvbiIsIm5vZGVTcGVlZCIsImNvbm5lY3RvcnNBbmltYXRpb24iLCJjb25uZWN0b3JzU3BlZWQiLCJpbWFnZSIsIkhUTUxjbGFzcyIsImFkZGl0aW9uYWxJbmZvIiwicG9zdCIsInByb2plY3RzIiwidXJsIiwidGV4dCIsInN0YWNrQ2hpbGRyZW4iLCJlbCIsImluZCIsIkhUTUxpZCIsIm9ic2VydmFibGUiLCJ0aGlzIiwic3RhdGUiLCJzdWJzY3JpYmUiLCJsb2ciLCJuZXh0IiwicGVyc29ucyIsInBhciIsImNvbGxhcHNlZCIsInByb2ZpbGVMaW5rIiwid3JhcHBlciIsInF1ZXJ5U2VsZWN0b3IiLCJjbG9zZUJ1dHRvbiIsIm1vZGFsT3ZlcmxheSIsImNoYXJ0Iiwibm9kZVN0cnVjdHVyZSIsInNvcnRlZE5vZGVzIiwiZWxlbWVudCIsImVsZW1lbnQyIiwic2hvd0hpZGVDb2xsYXBzZWQiLCJjb21iaW5lTmVzdGVkTm9kZXMiLCJzY2FsZSIsIm1vZGFsIiwiTW9kYWwiLCJtb2RhbEluZm8iLCJfY2xhc3NDYWxsQ2hlY2siLCJhZGRDYW5jZWxCdG5FdmVudExpc3RlbmVyIiwiYm9keSIsImFkZEV2ZW50TGlzdGVuZXIiLCJzY3JlZW4iLCJzY3JvbGwiLCJvdXRlckhlaWdodCIsInBhZ2VZT2Zmc2V0IiwiZXZlbnQiLCJvZmZzZXRZIiwiX3RoaXMiLCJNT0RBTF9DQU5DRUxfQlROIiwiY2xvc2VNb2RhbCIsInNlbGVjdGVkRWxlbWVudCIsIm9wZW5Nb2RhbCIsInVwZGF0ZU1vZGFsQ29udGVudCIsInNldFByb2ZpbGVMaW5rVG9Nb2RhbEJ0biIsIk1PREFMX0hUTUwiLCJ0b3AiLCJpbm5lckhlaWdodCIsInNldE1vZGFsUG9zaXRpb24iLCJjbGFzc0xpc3QiLCJhZGQiLCJNT0RBTF9PVkVSTEFZIiwiTU9EQUxfSU5GT19BVkFUQVIiLCJpbm5lckhUTUwiLCJNT0RBTF9JTkZPX05BTUUiLCJNT0RBTF9JTkZPX1BPU1QiLCJNT0RBTF9JTkZPX1BST0pFQ1RTIiwicmVtb3ZlIiwicmVtb3ZlQXR0cmlidXRlIiwiTU9EQUxfVklFV19QUk9GSUxFIiwiaHJlZiIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJab29tIiwiY29udHJvbHMiLCJhZGRDb250cm9sRXZlbnRMaXN0ZW5lciIsImZ1bGxTY3JlZW5Nb2RlIiwiYWRkRG9jdW1lbnRFdmVudExpc3RlbmVyIiwiX3RoaXMyIiwiWk9PTV9DT05UUk9MUyIsIm9uQ29udHJvbENsaWNrIiwidGFyZ2V0Iiwib25Ub2dnbGVTY3JlZW5Nb2RlIiwiY29udHJvbEluZm8iLCJBcnJheSIsImZyb20iLCJaT09NX1ZBTFVFIiwiZGVjcmVhc2Vab29tIiwiZGlzYWJsZUNvbnRyb2wiLCJlbmFibGVDb250cm9sIiwiaW5jcmVhc2Vab29tIiwib3BlbkZ1bGxTY3JlZW4iLCJ0cmFuc2Zvcm0iLCJkaXNhYmxlZEJ0biIsIkRFQ1JFQVNFX0NPTlRST0wiLCJJTkNSRUFTRV9DT05UUk9MIiwiZW5hYmxlZEJ0biIsImVsZW0iLCJyZXF1ZXN0RnVsbHNjcmVlbiIsIm1velJlcXVlc3RGdWxsU2NyZWVuIiwid2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4iLCJtc1JlcXVlc3RGdWxsc2NyZWVuIiwiZXhpdEZ1bGxzY3JlZW4iLCJ3ZWJraXRFeGl0RnVsbHNjcmVlbiIsIm1vekNhbmNlbEZ1bGxTY3JlZW4iLCJtc0V4aXRGdWxsc2NyZWVuIiwiZmluZCIsIm9uUGVyc29uVGlsZUNsaWNrIiwiZ2V0QWRkaXRpb25hbEluZm8iLCJUcmVhbnQiLCJoZWFkc09mRGl2aXNpb25zIiwidGl0bGUiLCJhdmF0YXIiLCJzdWJ0aXRsZSIsIkZ1bmN0aW9uYWxEaXZpc2lvbnNIZWFkcyIsImRpdmlzaW9uc0luZm8iLCJzZXREYXRhVGlsZSIsIl90aGlzMyIsInRpbGUiLCJjbGFzc05hbWUiLCJvbkNoZWNrSW1hZ2UiLCJTRUNUSU9OX0NPTlRBSU5FUiIsIkNvbW1vbkNsYXNzIiwiaW5mbyIsIl90aGlzNCIsImNsYXNzRWwiLCJwb3NpdGlvbiJdLCJtYXBwaW5ncyI6ImFBR0EsSUFB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QUFZLFVBRWQsQ0FDRUYsTUFBUyxxQkFDVGUsU0FBWSxpQ0FDWmQsT0FBVSxtRkFDVnpGLFlBQWUsK0RBQ2YwRixTQUFZLFNBRWQsQ0FDRUYsTUFBUyxzQkFDVGUsU0FBWSxzQ0FDWmQsT0FBVSxnSEFDVnpGLFlBQWUsZ0VBQ2YwRixTQUFZLFNBRWQsQ0FDRUYsTUFBUyxvQkFDVGUsU0FBWSwrQkFDWmQsT0FBVSxtRkFDVnpGLFlBQWUsOERBQ2YwRixTQUFZIiwiZmlsZSI6ImluZGV4LmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdGZ1bmN0aW9uIGhvdERpc3Bvc2VDaHVuayhjaHVua0lkKSB7XG4gXHRcdGRlbGV0ZSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF07XG4gXHR9XG4gXHR2YXIgcGFyZW50SG90VXBkYXRlQ2FsbGJhY2sgPSB3aW5kb3dbXCJ3ZWJwYWNrSG90VXBkYXRlXCJdO1xuIFx0d2luZG93W1wid2VicGFja0hvdFVwZGF0ZVwiXSA9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gd2VicGFja0hvdFVwZGF0ZUNhbGxiYWNrKGNodW5rSWQsIG1vcmVNb2R1bGVzKSB7XG4gXHRcdGhvdEFkZFVwZGF0ZUNodW5rKGNodW5rSWQsIG1vcmVNb2R1bGVzKTtcbiBcdFx0aWYgKHBhcmVudEhvdFVwZGF0ZUNhbGxiYWNrKSBwYXJlbnRIb3RVcGRhdGVDYWxsYmFjayhjaHVua0lkLCBtb3JlTW9kdWxlcyk7XG4gXHR9IDtcblxuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiBob3REb3dubG9hZFVwZGF0ZUNodW5rKGNodW5rSWQpIHtcbiBcdFx0dmFyIGhlYWQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF07XG4gXHRcdHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuIFx0XHRzY3JpcHQuY2hhcnNldCA9IFwidXRmLThcIjtcbiBcdFx0c2NyaXB0LnNyYyA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIFwiXCIgKyBjaHVua0lkICsgXCIuXCIgKyBob3RDdXJyZW50SGFzaCArIFwiLmhvdC11cGRhdGUuanNcIjtcbiBcdFx0aWYgKG51bGwpIHNjcmlwdC5jcm9zc09yaWdpbiA9IG51bGw7XG4gXHRcdGhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiBcdH1cblxuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiBob3REb3dubG9hZE1hbmlmZXN0KHJlcXVlc3RUaW1lb3V0KSB7XG4gXHRcdHJlcXVlc3RUaW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQgfHwgMTAwMDA7XG4gXHRcdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiBcdFx0XHRpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gXHRcdFx0XHRyZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihcIk5vIGJyb3dzZXIgc3VwcG9ydFwiKSk7XG4gXHRcdFx0fVxuIFx0XHRcdHRyeSB7XG4gXHRcdFx0XHR2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuIFx0XHRcdFx0dmFyIHJlcXVlc3RQYXRoID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgXCJcIiArIGhvdEN1cnJlbnRIYXNoICsgXCIuaG90LXVwZGF0ZS5qc29uXCI7XG4gXHRcdFx0XHRyZXF1ZXN0Lm9wZW4oXCJHRVRcIiwgcmVxdWVzdFBhdGgsIHRydWUpO1xuIFx0XHRcdFx0cmVxdWVzdC50aW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQ7XG4gXHRcdFx0XHRyZXF1ZXN0LnNlbmQobnVsbCk7XG4gXHRcdFx0fSBjYXRjaCAoZXJyKSB7XG4gXHRcdFx0XHRyZXR1cm4gcmVqZWN0KGVycik7XG4gXHRcdFx0fVxuIFx0XHRcdHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gXHRcdFx0XHRpZiAocmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSByZXR1cm47XG4gXHRcdFx0XHRpZiAocmVxdWVzdC5zdGF0dXMgPT09IDApIHtcbiBcdFx0XHRcdFx0Ly8gdGltZW91dFxuIFx0XHRcdFx0XHRyZWplY3QoXG4gXHRcdFx0XHRcdFx0bmV3IEVycm9yKFwiTWFuaWZlc3QgcmVxdWVzdCB0byBcIiArIHJlcXVlc3RQYXRoICsgXCIgdGltZWQgb3V0LlwiKVxuIFx0XHRcdFx0XHQpO1xuIFx0XHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gNDA0KSB7XG4gXHRcdFx0XHRcdC8vIG5vIHVwZGF0ZSBhdmFpbGFibGVcbiBcdFx0XHRcdFx0cmVzb2x2ZSgpO1xuIFx0XHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LnN0YXR1cyAhPT0gMjAwICYmIHJlcXVlc3Quc3RhdHVzICE9PSAzMDQpIHtcbiBcdFx0XHRcdFx0Ly8gb3RoZXIgZmFpbHVyZVxuIFx0XHRcdFx0XHRyZWplY3QobmV3IEVycm9yKFwiTWFuaWZlc3QgcmVxdWVzdCB0byBcIiArIHJlcXVlc3RQYXRoICsgXCIgZmFpbGVkLlwiKSk7XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHQvLyBzdWNjZXNzXG4gXHRcdFx0XHRcdHRyeSB7XG4gXHRcdFx0XHRcdFx0dmFyIHVwZGF0ZSA9IEpTT04ucGFyc2UocmVxdWVzdC5yZXNwb25zZVRleHQpO1xuIFx0XHRcdFx0XHR9IGNhdGNoIChlKSB7XG4gXHRcdFx0XHRcdFx0cmVqZWN0KGUpO1xuIFx0XHRcdFx0XHRcdHJldHVybjtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRyZXNvbHZlKHVwZGF0ZSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fTtcbiBcdFx0fSk7XG4gXHR9XG5cbiBcdHZhciBob3RBcHBseU9uVXBkYXRlID0gdHJ1ZTtcbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0dmFyIGhvdEN1cnJlbnRIYXNoID0gXCI3NTg1OWQ2NzE1ZDJlZGE2ODhiZlwiO1xuIFx0dmFyIGhvdFJlcXVlc3RUaW1lb3V0ID0gMTAwMDA7XG4gXHR2YXIgaG90Q3VycmVudE1vZHVsZURhdGEgPSB7fTtcbiBcdHZhciBob3RDdXJyZW50Q2hpbGRNb2R1bGU7XG4gXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdHZhciBob3RDdXJyZW50UGFyZW50cyA9IFtdO1xuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHR2YXIgaG90Q3VycmVudFBhcmVudHNUZW1wID0gW107XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90Q3JlYXRlUmVxdWlyZShtb2R1bGVJZCkge1xuIFx0XHR2YXIgbWUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0aWYgKCFtZSkgcmV0dXJuIF9fd2VicGFja19yZXF1aXJlX187XG4gXHRcdHZhciBmbiA9IGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiBcdFx0XHRpZiAobWUuaG90LmFjdGl2ZSkge1xuIFx0XHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0pIHtcbiBcdFx0XHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0ucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKSA9PT0gLTEpIHtcbiBcdFx0XHRcdFx0XHRpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHMucHVzaChtb2R1bGVJZCk7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcbiBcdFx0XHRcdFx0aG90Q3VycmVudENoaWxkTW9kdWxlID0gcmVxdWVzdDtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChtZS5jaGlsZHJlbi5pbmRleE9mKHJlcXVlc3QpID09PSAtMSkge1xuIFx0XHRcdFx0XHRtZS5jaGlsZHJlbi5wdXNoKHJlcXVlc3QpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRjb25zb2xlLndhcm4oXG4gXHRcdFx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICtcbiBcdFx0XHRcdFx0XHRyZXF1ZXN0ICtcbiBcdFx0XHRcdFx0XHRcIikgZnJvbSBkaXNwb3NlZCBtb2R1bGUgXCIgK1xuIFx0XHRcdFx0XHRcdG1vZHVsZUlkXG4gXHRcdFx0XHQpO1xuIFx0XHRcdFx0aG90Q3VycmVudFBhcmVudHMgPSBbXTtcbiBcdFx0XHR9XG4gXHRcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18ocmVxdWVzdCk7XG4gXHRcdH07XG4gXHRcdHZhciBPYmplY3RGYWN0b3J5ID0gZnVuY3Rpb24gT2JqZWN0RmFjdG9yeShuYW1lKSB7XG4gXHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4gXHRcdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuIFx0XHRcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfX1tuYW1lXTtcbiBcdFx0XHRcdH0sXG4gXHRcdFx0XHRzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX19bbmFtZV0gPSB2YWx1ZTtcbiBcdFx0XHRcdH1cbiBcdFx0XHR9O1xuIFx0XHR9O1xuIFx0XHRmb3IgKHZhciBuYW1lIGluIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiBcdFx0XHRpZiAoXG4gXHRcdFx0XHRPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX193ZWJwYWNrX3JlcXVpcmVfXywgbmFtZSkgJiZcbiBcdFx0XHRcdG5hbWUgIT09IFwiZVwiICYmXG4gXHRcdFx0XHRuYW1lICE9PSBcInRcIlxuIFx0XHRcdCkge1xuIFx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGZuLCBuYW1lLCBPYmplY3RGYWN0b3J5KG5hbWUpKTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0Zm4uZSA9IGZ1bmN0aW9uKGNodW5rSWQpIHtcbiBcdFx0XHRpZiAoaG90U3RhdHVzID09PSBcInJlYWR5XCIpIGhvdFNldFN0YXR1cyhcInByZXBhcmVcIik7XG4gXHRcdFx0aG90Q2h1bmtzTG9hZGluZysrO1xuIFx0XHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLmUoY2h1bmtJZCkudGhlbihmaW5pc2hDaHVua0xvYWRpbmcsIGZ1bmN0aW9uKGVycikge1xuIFx0XHRcdFx0ZmluaXNoQ2h1bmtMb2FkaW5nKCk7XG4gXHRcdFx0XHR0aHJvdyBlcnI7XG4gXHRcdFx0fSk7XG5cbiBcdFx0XHRmdW5jdGlvbiBmaW5pc2hDaHVua0xvYWRpbmcoKSB7XG4gXHRcdFx0XHRob3RDaHVua3NMb2FkaW5nLS07XG4gXHRcdFx0XHRpZiAoaG90U3RhdHVzID09PSBcInByZXBhcmVcIikge1xuIFx0XHRcdFx0XHRpZiAoIWhvdFdhaXRpbmdGaWxlc01hcFtjaHVua0lkXSkge1xuIFx0XHRcdFx0XHRcdGhvdEVuc3VyZVVwZGF0ZUNodW5rKGNodW5rSWQpO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGlmIChob3RDaHVua3NMb2FkaW5nID09PSAwICYmIGhvdFdhaXRpbmdGaWxlcyA9PT0gMCkge1xuIFx0XHRcdFx0XHRcdGhvdFVwZGF0ZURvd25sb2FkZWQoKTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fTtcbiBcdFx0Zm4udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdFx0aWYgKG1vZGUgJiAxKSB2YWx1ZSA9IGZuKHZhbHVlKTtcbiBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy50KHZhbHVlLCBtb2RlICYgfjEpO1xuIFx0XHR9O1xuIFx0XHRyZXR1cm4gZm47XG4gXHR9XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90Q3JlYXRlTW9kdWxlKG1vZHVsZUlkKSB7XG4gXHRcdHZhciBob3QgPSB7XG4gXHRcdFx0Ly8gcHJpdmF0ZSBzdHVmZlxuIFx0XHRcdF9hY2NlcHRlZERlcGVuZGVuY2llczoge30sXG4gXHRcdFx0X2RlY2xpbmVkRGVwZW5kZW5jaWVzOiB7fSxcbiBcdFx0XHRfc2VsZkFjY2VwdGVkOiBmYWxzZSxcbiBcdFx0XHRfc2VsZkRlY2xpbmVkOiBmYWxzZSxcbiBcdFx0XHRfZGlzcG9zZUhhbmRsZXJzOiBbXSxcbiBcdFx0XHRfbWFpbjogaG90Q3VycmVudENoaWxkTW9kdWxlICE9PSBtb2R1bGVJZCxcblxuIFx0XHRcdC8vIE1vZHVsZSBBUElcbiBcdFx0XHRhY3RpdmU6IHRydWUsXG4gXHRcdFx0YWNjZXB0OiBmdW5jdGlvbihkZXAsIGNhbGxiYWNrKSB7XG4gXHRcdFx0XHRpZiAoZGVwID09PSB1bmRlZmluZWQpIGhvdC5fc2VsZkFjY2VwdGVkID0gdHJ1ZTtcbiBcdFx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwiZnVuY3Rpb25cIikgaG90Ll9zZWxmQWNjZXB0ZWQgPSBkZXA7XG4gXHRcdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiKVxuIFx0XHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKylcbiBcdFx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbigpIHt9O1xuIFx0XHRcdFx0ZWxzZSBob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcF0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbigpIHt9O1xuIFx0XHRcdH0sXG4gXHRcdFx0ZGVjbGluZTogZnVuY3Rpb24oZGVwKSB7XG4gXHRcdFx0XHRpZiAoZGVwID09PSB1bmRlZmluZWQpIGhvdC5fc2VsZkRlY2xpbmVkID0gdHJ1ZTtcbiBcdFx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIpXG4gXHRcdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKVxuIFx0XHRcdFx0XHRcdGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IHRydWU7XG4gXHRcdFx0XHRlbHNlIGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwXSA9IHRydWU7XG4gXHRcdFx0fSxcbiBcdFx0XHRkaXNwb3NlOiBmdW5jdGlvbihjYWxsYmFjaykge1xuIFx0XHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XG4gXHRcdFx0fSxcbiBcdFx0XHRhZGREaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiBcdFx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuIFx0XHRcdH0sXG4gXHRcdFx0cmVtb3ZlRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gXHRcdFx0XHR2YXIgaWR4ID0gaG90Ll9kaXNwb3NlSGFuZGxlcnMuaW5kZXhPZihjYWxsYmFjayk7XG4gXHRcdFx0XHRpZiAoaWR4ID49IDApIGhvdC5fZGlzcG9zZUhhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xuIFx0XHRcdH0sXG5cbiBcdFx0XHQvLyBNYW5hZ2VtZW50IEFQSVxuIFx0XHRcdGNoZWNrOiBob3RDaGVjayxcbiBcdFx0XHRhcHBseTogaG90QXBwbHksXG4gXHRcdFx0c3RhdHVzOiBmdW5jdGlvbihsKSB7XG4gXHRcdFx0XHRpZiAoIWwpIHJldHVybiBob3RTdGF0dXM7XG4gXHRcdFx0XHRob3RTdGF0dXNIYW5kbGVycy5wdXNoKGwpO1xuIFx0XHRcdH0sXG4gXHRcdFx0YWRkU3RhdHVzSGFuZGxlcjogZnVuY3Rpb24obCkge1xuIFx0XHRcdFx0aG90U3RhdHVzSGFuZGxlcnMucHVzaChsKTtcbiBcdFx0XHR9LFxuIFx0XHRcdHJlbW92ZVN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uKGwpIHtcbiBcdFx0XHRcdHZhciBpZHggPSBob3RTdGF0dXNIYW5kbGVycy5pbmRleE9mKGwpO1xuIFx0XHRcdFx0aWYgKGlkeCA+PSAwKSBob3RTdGF0dXNIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcbiBcdFx0XHR9LFxuXG4gXHRcdFx0Ly9pbmhlcml0IGZyb20gcHJldmlvdXMgZGlzcG9zZSBjYWxsXG4gXHRcdFx0ZGF0YTogaG90Q3VycmVudE1vZHVsZURhdGFbbW9kdWxlSWRdXG4gXHRcdH07XG4gXHRcdGhvdEN1cnJlbnRDaGlsZE1vZHVsZSA9IHVuZGVmaW5lZDtcbiBcdFx0cmV0dXJuIGhvdDtcbiBcdH1cblxuIFx0dmFyIGhvdFN0YXR1c0hhbmRsZXJzID0gW107XG4gXHR2YXIgaG90U3RhdHVzID0gXCJpZGxlXCI7XG5cbiBcdGZ1bmN0aW9uIGhvdFNldFN0YXR1cyhuZXdTdGF0dXMpIHtcbiBcdFx0aG90U3RhdHVzID0gbmV3U3RhdHVzO1xuIFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGhvdFN0YXR1c0hhbmRsZXJzLmxlbmd0aDsgaSsrKVxuIFx0XHRcdGhvdFN0YXR1c0hhbmRsZXJzW2ldLmNhbGwobnVsbCwgbmV3U3RhdHVzKTtcbiBcdH1cblxuIFx0Ly8gd2hpbGUgZG93bmxvYWRpbmdcbiBcdHZhciBob3RXYWl0aW5nRmlsZXMgPSAwO1xuIFx0dmFyIGhvdENodW5rc0xvYWRpbmcgPSAwO1xuIFx0dmFyIGhvdFdhaXRpbmdGaWxlc01hcCA9IHt9O1xuIFx0dmFyIGhvdFJlcXVlc3RlZEZpbGVzTWFwID0ge307XG4gXHR2YXIgaG90QXZhaWxhYmxlRmlsZXNNYXAgPSB7fTtcbiBcdHZhciBob3REZWZlcnJlZDtcblxuIFx0Ly8gVGhlIHVwZGF0ZSBpbmZvXG4gXHR2YXIgaG90VXBkYXRlLCBob3RVcGRhdGVOZXdIYXNoO1xuXG4gXHRmdW5jdGlvbiB0b01vZHVsZUlkKGlkKSB7XG4gXHRcdHZhciBpc051bWJlciA9ICtpZCArIFwiXCIgPT09IGlkO1xuIFx0XHRyZXR1cm4gaXNOdW1iZXIgPyAraWQgOiBpZDtcbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90Q2hlY2soYXBwbHkpIHtcbiBcdFx0aWYgKGhvdFN0YXR1cyAhPT0gXCJpZGxlXCIpIHtcbiBcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJjaGVjaygpIGlzIG9ubHkgYWxsb3dlZCBpbiBpZGxlIHN0YXR1c1wiKTtcbiBcdFx0fVxuIFx0XHRob3RBcHBseU9uVXBkYXRlID0gYXBwbHk7XG4gXHRcdGhvdFNldFN0YXR1cyhcImNoZWNrXCIpO1xuIFx0XHRyZXR1cm4gaG90RG93bmxvYWRNYW5pZmVzdChob3RSZXF1ZXN0VGltZW91dCkudGhlbihmdW5jdGlvbih1cGRhdGUpIHtcbiBcdFx0XHRpZiAoIXVwZGF0ZSkge1xuIFx0XHRcdFx0aG90U2V0U3RhdHVzKFwiaWRsZVwiKTtcbiBcdFx0XHRcdHJldHVybiBudWxsO1xuIFx0XHRcdH1cbiBcdFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcCA9IHt9O1xuIFx0XHRcdGhvdFdhaXRpbmdGaWxlc01hcCA9IHt9O1xuIFx0XHRcdGhvdEF2YWlsYWJsZUZpbGVzTWFwID0gdXBkYXRlLmM7XG4gXHRcdFx0aG90VXBkYXRlTmV3SGFzaCA9IHVwZGF0ZS5oO1xuXG4gXHRcdFx0aG90U2V0U3RhdHVzKFwicHJlcGFyZVwiKTtcbiBcdFx0XHR2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuIFx0XHRcdFx0aG90RGVmZXJyZWQgPSB7XG4gXHRcdFx0XHRcdHJlc29sdmU6IHJlc29sdmUsXG4gXHRcdFx0XHRcdHJlamVjdDogcmVqZWN0XG4gXHRcdFx0XHR9O1xuIFx0XHRcdH0pO1xuIFx0XHRcdGhvdFVwZGF0ZSA9IHt9O1xuIFx0XHRcdHZhciBjaHVua0lkID0gMDtcbiBcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbG9uZS1ibG9ja3NcbiBcdFx0XHR7XG4gXHRcdFx0XHQvKmdsb2JhbHMgY2h1bmtJZCAqL1xuIFx0XHRcdFx0aG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCk7XG4gXHRcdFx0fVxuIFx0XHRcdGlmIChcbiBcdFx0XHRcdGhvdFN0YXR1cyA9PT0gXCJwcmVwYXJlXCIgJiZcbiBcdFx0XHRcdGhvdENodW5rc0xvYWRpbmcgPT09IDAgJiZcbiBcdFx0XHRcdGhvdFdhaXRpbmdGaWxlcyA9PT0gMFxuIFx0XHRcdCkge1xuIFx0XHRcdFx0aG90VXBkYXRlRG93bmxvYWRlZCgpO1xuIFx0XHRcdH1cbiBcdFx0XHRyZXR1cm4gcHJvbWlzZTtcbiBcdFx0fSk7XG4gXHR9XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90QWRkVXBkYXRlQ2h1bmsoY2h1bmtJZCwgbW9yZU1vZHVsZXMpIHtcbiBcdFx0aWYgKCFob3RBdmFpbGFibGVGaWxlc01hcFtjaHVua0lkXSB8fCAhaG90UmVxdWVzdGVkRmlsZXNNYXBbY2h1bmtJZF0pXG4gXHRcdFx0cmV0dXJuO1xuIFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSA9IGZhbHNlO1xuIFx0XHRmb3IgKHZhciBtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuIFx0XHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0aG90VXBkYXRlW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0aWYgKC0taG90V2FpdGluZ0ZpbGVzID09PSAwICYmIGhvdENodW5rc0xvYWRpbmcgPT09IDApIHtcbiBcdFx0XHRob3RVcGRhdGVEb3dubG9hZGVkKCk7XG4gXHRcdH1cbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCkge1xuIFx0XHRpZiAoIWhvdEF2YWlsYWJsZUZpbGVzTWFwW2NodW5rSWRdKSB7XG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzTWFwW2NodW5rSWRdID0gdHJ1ZTtcbiBcdFx0fSBlbHNlIHtcbiBcdFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSA9IHRydWU7XG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzKys7XG4gXHRcdFx0aG90RG93bmxvYWRVcGRhdGVDaHVuayhjaHVua0lkKTtcbiBcdFx0fVxuIFx0fVxuXG4gXHRmdW5jdGlvbiBob3RVcGRhdGVEb3dubG9hZGVkKCkge1xuIFx0XHRob3RTZXRTdGF0dXMoXCJyZWFkeVwiKTtcbiBcdFx0dmFyIGRlZmVycmVkID0gaG90RGVmZXJyZWQ7XG4gXHRcdGhvdERlZmVycmVkID0gbnVsbDtcbiBcdFx0aWYgKCFkZWZlcnJlZCkgcmV0dXJuO1xuIFx0XHRpZiAoaG90QXBwbHlPblVwZGF0ZSkge1xuIFx0XHRcdC8vIFdyYXAgZGVmZXJyZWQgb2JqZWN0IGluIFByb21pc2UgdG8gbWFyayBpdCBhcyBhIHdlbGwtaGFuZGxlZCBQcm9taXNlIHRvXG4gXHRcdFx0Ly8gYXZvaWQgdHJpZ2dlcmluZyB1bmNhdWdodCBleGNlcHRpb24gd2FybmluZyBpbiBDaHJvbWUuXG4gXHRcdFx0Ly8gU2VlIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ2NTY2NlxuIFx0XHRcdFByb21pc2UucmVzb2x2ZSgpXG4gXHRcdFx0XHQudGhlbihmdW5jdGlvbigpIHtcbiBcdFx0XHRcdFx0cmV0dXJuIGhvdEFwcGx5KGhvdEFwcGx5T25VcGRhdGUpO1xuIFx0XHRcdFx0fSlcbiBcdFx0XHRcdC50aGVuKFxuIFx0XHRcdFx0XHRmdW5jdGlvbihyZXN1bHQpIHtcbiBcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKHJlc3VsdCk7XG4gXHRcdFx0XHRcdH0sXG4gXHRcdFx0XHRcdGZ1bmN0aW9uKGVycikge1xuIFx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdChlcnIpO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHQpO1xuIFx0XHR9IGVsc2Uge1xuIFx0XHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcbiBcdFx0XHRmb3IgKHZhciBpZCBpbiBob3RVcGRhdGUpIHtcbiBcdFx0XHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaG90VXBkYXRlLCBpZCkpIHtcbiBcdFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2godG9Nb2R1bGVJZChpZCkpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XG4gXHRcdH1cbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90QXBwbHkob3B0aW9ucykge1xuIFx0XHRpZiAoaG90U3RhdHVzICE9PSBcInJlYWR5XCIpXG4gXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiYXBwbHkoKSBpcyBvbmx5IGFsbG93ZWQgaW4gcmVhZHkgc3RhdHVzXCIpO1xuIFx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuIFx0XHR2YXIgY2I7XG4gXHRcdHZhciBpO1xuIFx0XHR2YXIgajtcbiBcdFx0dmFyIG1vZHVsZTtcbiBcdFx0dmFyIG1vZHVsZUlkO1xuXG4gXHRcdGZ1bmN0aW9uIGdldEFmZmVjdGVkU3R1ZmYodXBkYXRlTW9kdWxlSWQpIHtcbiBcdFx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW3VwZGF0ZU1vZHVsZUlkXTtcbiBcdFx0XHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcblxuIFx0XHRcdHZhciBxdWV1ZSA9IG91dGRhdGVkTW9kdWxlcy5zbGljZSgpLm1hcChmdW5jdGlvbihpZCkge1xuIFx0XHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdFx0Y2hhaW46IFtpZF0sXG4gXHRcdFx0XHRcdGlkOiBpZFxuIFx0XHRcdFx0fTtcbiBcdFx0XHR9KTtcbiBcdFx0XHR3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xuIFx0XHRcdFx0dmFyIHF1ZXVlSXRlbSA9IHF1ZXVlLnBvcCgpO1xuIFx0XHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWVJdGVtLmlkO1xuIFx0XHRcdFx0dmFyIGNoYWluID0gcXVldWVJdGVtLmNoYWluO1xuIFx0XHRcdFx0bW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRpZiAoIW1vZHVsZSB8fCBtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWQpIGNvbnRpbnVlO1xuIFx0XHRcdFx0aWYgKG1vZHVsZS5ob3QuX3NlbGZEZWNsaW5lZCkge1xuIFx0XHRcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1kZWNsaW5lZFwiLFxuIFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbixcbiBcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcbiBcdFx0XHRcdFx0fTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChtb2R1bGUuaG90Ll9tYWluKSB7XG4gXHRcdFx0XHRcdHJldHVybiB7XG4gXHRcdFx0XHRcdFx0dHlwZTogXCJ1bmFjY2VwdGVkXCIsXG4gXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxuIFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuIFx0XHRcdFx0XHR9O1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtb2R1bGUucGFyZW50cy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdFx0XHR2YXIgcGFyZW50SWQgPSBtb2R1bGUucGFyZW50c1tpXTtcbiBcdFx0XHRcdFx0dmFyIHBhcmVudCA9IGluc3RhbGxlZE1vZHVsZXNbcGFyZW50SWRdO1xuIFx0XHRcdFx0XHRpZiAoIXBhcmVudCkgY29udGludWU7XG4gXHRcdFx0XHRcdGlmIChwYXJlbnQuaG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0XHRcdFx0dHlwZTogXCJkZWNsaW5lZFwiLFxuIFx0XHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcbiBcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcbiBcdFx0XHRcdFx0XHRcdHBhcmVudElkOiBwYXJlbnRJZFxuIFx0XHRcdFx0XHRcdH07XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0aWYgKG91dGRhdGVkTW9kdWxlcy5pbmRleE9mKHBhcmVudElkKSAhPT0gLTEpIGNvbnRpbnVlO1xuIFx0XHRcdFx0XHRpZiAocGFyZW50LmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0pXG4gXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0gPSBbXTtcbiBcdFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0sIFttb2R1bGVJZF0pO1xuIFx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF07XG4gXHRcdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKHBhcmVudElkKTtcbiBcdFx0XHRcdFx0cXVldWUucHVzaCh7XG4gXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcbiBcdFx0XHRcdFx0XHRpZDogcGFyZW50SWRcbiBcdFx0XHRcdFx0fSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuXG4gXHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdHR5cGU6IFwiYWNjZXB0ZWRcIixcbiBcdFx0XHRcdG1vZHVsZUlkOiB1cGRhdGVNb2R1bGVJZCxcbiBcdFx0XHRcdG91dGRhdGVkTW9kdWxlczogb3V0ZGF0ZWRNb2R1bGVzLFxuIFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXM6IG91dGRhdGVkRGVwZW5kZW5jaWVzXG4gXHRcdFx0fTtcbiBcdFx0fVxuXG4gXHRcdGZ1bmN0aW9uIGFkZEFsbFRvU2V0KGEsIGIpIHtcbiBcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdHZhciBpdGVtID0gYltpXTtcbiBcdFx0XHRcdGlmIChhLmluZGV4T2YoaXRlbSkgPT09IC0xKSBhLnB1c2goaXRlbSk7XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gYXQgYmVnaW4gYWxsIHVwZGF0ZXMgbW9kdWxlcyBhcmUgb3V0ZGF0ZWRcbiBcdFx0Ly8gdGhlIFwib3V0ZGF0ZWRcIiBzdGF0dXMgY2FuIHByb3BhZ2F0ZSB0byBwYXJlbnRzIGlmIHRoZXkgZG9uJ3QgYWNjZXB0IHRoZSBjaGlsZHJlblxuIFx0XHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcbiBcdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuIFx0XHR2YXIgYXBwbGllZFVwZGF0ZSA9IHt9O1xuXG4gXHRcdHZhciB3YXJuVW5leHBlY3RlZFJlcXVpcmUgPSBmdW5jdGlvbiB3YXJuVW5leHBlY3RlZFJlcXVpcmUoKSB7XG4gXHRcdFx0Y29uc29sZS53YXJuKFxuIFx0XHRcdFx0XCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgKyByZXN1bHQubW9kdWxlSWQgKyBcIikgdG8gZGlzcG9zZWQgbW9kdWxlXCJcbiBcdFx0XHQpO1xuIFx0XHR9O1xuXG4gXHRcdGZvciAodmFyIGlkIGluIGhvdFVwZGF0ZSkge1xuIFx0XHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaG90VXBkYXRlLCBpZCkpIHtcbiBcdFx0XHRcdG1vZHVsZUlkID0gdG9Nb2R1bGVJZChpZCk7XG4gXHRcdFx0XHQvKiogQHR5cGUge1RPRE99ICovXG4gXHRcdFx0XHR2YXIgcmVzdWx0O1xuIFx0XHRcdFx0aWYgKGhvdFVwZGF0ZVtpZF0pIHtcbiBcdFx0XHRcdFx0cmVzdWx0ID0gZ2V0QWZmZWN0ZWRTdHVmZihtb2R1bGVJZCk7XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHRyZXN1bHQgPSB7XG4gXHRcdFx0XHRcdFx0dHlwZTogXCJkaXNwb3NlZFwiLFxuIFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBpZFxuIFx0XHRcdFx0XHR9O1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0LyoqIEB0eXBlIHtFcnJvcnxmYWxzZX0gKi9cbiBcdFx0XHRcdHZhciBhYm9ydEVycm9yID0gZmFsc2U7XG4gXHRcdFx0XHR2YXIgZG9BcHBseSA9IGZhbHNlO1xuIFx0XHRcdFx0dmFyIGRvRGlzcG9zZSA9IGZhbHNlO1xuIFx0XHRcdFx0dmFyIGNoYWluSW5mbyA9IFwiXCI7XG4gXHRcdFx0XHRpZiAocmVzdWx0LmNoYWluKSB7XG4gXHRcdFx0XHRcdGNoYWluSW5mbyA9IFwiXFxuVXBkYXRlIHByb3BhZ2F0aW9uOiBcIiArIHJlc3VsdC5jaGFpbi5qb2luKFwiIC0+IFwiKTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdHN3aXRjaCAocmVzdWx0LnR5cGUpIHtcbiBcdFx0XHRcdFx0Y2FzZSBcInNlbGYtZGVjbGluZWRcIjpcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRlY2xpbmVkKSBvcHRpb25zLm9uRGVjbGluZWQocmVzdWx0KTtcbiBcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRGVjbGluZWQpXG4gXHRcdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuIFx0XHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBvZiBzZWxmIGRlY2xpbmU6IFwiICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHRicmVhaztcbiBcdFx0XHRcdFx0Y2FzZSBcImRlY2xpbmVkXCI6XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuIFx0XHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcbiBcdFx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2YgZGVjbGluZWQgZGVwZW5kZW5jeTogXCIgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5tb2R1bGVJZCArXG4gXHRcdFx0XHRcdFx0XHRcdFx0XCIgaW4gXCIgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5wYXJlbnRJZCArXG4gXHRcdFx0XHRcdFx0XHRcdFx0Y2hhaW5JbmZvXG4gXHRcdFx0XHRcdFx0XHQpO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRjYXNlIFwidW5hY2NlcHRlZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uVW5hY2NlcHRlZCkgb3B0aW9ucy5vblVuYWNjZXB0ZWQocmVzdWx0KTtcbiBcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlVW5hY2NlcHRlZClcbiBcdFx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG4gXHRcdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIFwiICsgbW9kdWxlSWQgKyBcIiBpcyBub3QgYWNjZXB0ZWRcIiArIGNoYWluSW5mb1xuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHRicmVhaztcbiBcdFx0XHRcdFx0Y2FzZSBcImFjY2VwdGVkXCI6XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25BY2NlcHRlZCkgb3B0aW9ucy5vbkFjY2VwdGVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0ZG9BcHBseSA9IHRydWU7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJkaXNwb3NlZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGlzcG9zZWQpIG9wdGlvbnMub25EaXNwb3NlZChyZXN1bHQpO1xuIFx0XHRcdFx0XHRcdGRvRGlzcG9zZSA9IHRydWU7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGRlZmF1bHQ6XG4gXHRcdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiVW5leGNlcHRpb24gdHlwZSBcIiArIHJlc3VsdC50eXBlKTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChhYm9ydEVycm9yKSB7XG4gXHRcdFx0XHRcdGhvdFNldFN0YXR1cyhcImFib3J0XCIpO1xuIFx0XHRcdFx0XHRyZXR1cm4gUHJvbWlzZS5yZWplY3QoYWJvcnRFcnJvcik7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAoZG9BcHBseSkge1xuIFx0XHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSA9IGhvdFVwZGF0ZVttb2R1bGVJZF07XG4gXHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgcmVzdWx0Lm91dGRhdGVkTW9kdWxlcyk7XG4gXHRcdFx0XHRcdGZvciAobW9kdWxlSWQgaW4gcmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG4gXHRcdFx0XHRcdFx0aWYgKFxuIFx0XHRcdFx0XHRcdFx0T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKFxuIFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXMsXG4gXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkXG4gXHRcdFx0XHRcdFx0XHQpXG4gXHRcdFx0XHRcdFx0KSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAoIW91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSlcbiBcdFx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdID0gW107XG4gXHRcdFx0XHRcdFx0XHRhZGRBbGxUb1NldChcbiBcdFx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdLFxuIFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdXG4gXHRcdFx0XHRcdFx0XHQpO1xuIFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdFx0aWYgKGRvRGlzcG9zZSkge1xuIFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIFtyZXN1bHQubW9kdWxlSWRdKTtcbiBcdFx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSB3YXJuVW5leHBlY3RlZFJlcXVpcmU7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gU3RvcmUgc2VsZiBhY2NlcHRlZCBvdXRkYXRlZCBtb2R1bGVzIHRvIHJlcXVpcmUgdGhlbSBsYXRlciBieSB0aGUgbW9kdWxlIHN5c3RlbVxuIFx0XHR2YXIgb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzID0gW107XG4gXHRcdGZvciAoaSA9IDA7IGkgPCBvdXRkYXRlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRtb2R1bGVJZCA9IG91dGRhdGVkTW9kdWxlc1tpXTtcbiBcdFx0XHRpZiAoXG4gXHRcdFx0XHRpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSAmJlxuIFx0XHRcdFx0aW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uaG90Ll9zZWxmQWNjZXB0ZWRcbiBcdFx0XHQpXG4gXHRcdFx0XHRvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMucHVzaCh7XG4gXHRcdFx0XHRcdG1vZHVsZTogbW9kdWxlSWQsXG4gXHRcdFx0XHRcdGVycm9ySGFuZGxlcjogaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uaG90Ll9zZWxmQWNjZXB0ZWRcbiBcdFx0XHRcdH0pO1xuIFx0XHR9XG5cbiBcdFx0Ly8gTm93IGluIFwiZGlzcG9zZVwiIHBoYXNlXG4gXHRcdGhvdFNldFN0YXR1cyhcImRpc3Bvc2VcIik7XG4gXHRcdE9iamVjdC5rZXlzKGhvdEF2YWlsYWJsZUZpbGVzTWFwKS5mb3JFYWNoKGZ1bmN0aW9uKGNodW5rSWQpIHtcbiBcdFx0XHRpZiAoaG90QXZhaWxhYmxlRmlsZXNNYXBbY2h1bmtJZF0gPT09IGZhbHNlKSB7XG4gXHRcdFx0XHRob3REaXNwb3NlQ2h1bmsoY2h1bmtJZCk7XG4gXHRcdFx0fVxuIFx0XHR9KTtcblxuIFx0XHR2YXIgaWR4O1xuIFx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMuc2xpY2UoKTtcbiBcdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcbiBcdFx0XHRtb2R1bGVJZCA9IHF1ZXVlLnBvcCgpO1xuIFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdGlmICghbW9kdWxlKSBjb250aW51ZTtcblxuIFx0XHRcdHZhciBkYXRhID0ge307XG5cbiBcdFx0XHQvLyBDYWxsIGRpc3Bvc2UgaGFuZGxlcnNcbiBcdFx0XHR2YXIgZGlzcG9zZUhhbmRsZXJzID0gbW9kdWxlLmhvdC5fZGlzcG9zZUhhbmRsZXJzO1xuIFx0XHRcdGZvciAoaiA9IDA7IGogPCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoOyBqKyspIHtcbiBcdFx0XHRcdGNiID0gZGlzcG9zZUhhbmRsZXJzW2pdO1xuIFx0XHRcdFx0Y2IoZGF0YSk7XG4gXHRcdFx0fVxuIFx0XHRcdGhvdEN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXSA9IGRhdGE7XG5cbiBcdFx0XHQvLyBkaXNhYmxlIG1vZHVsZSAodGhpcyBkaXNhYmxlcyByZXF1aXJlcyBmcm9tIHRoaXMgbW9kdWxlKVxuIFx0XHRcdG1vZHVsZS5ob3QuYWN0aXZlID0gZmFsc2U7XG5cbiBcdFx0XHQvLyByZW1vdmUgbW9kdWxlIGZyb20gY2FjaGVcbiBcdFx0XHRkZWxldGUgaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG5cbiBcdFx0XHQvLyB3aGVuIGRpc3Bvc2luZyB0aGVyZSBpcyBubyBuZWVkIHRvIGNhbGwgZGlzcG9zZSBoYW5kbGVyXG4gXHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcblxuIFx0XHRcdC8vIHJlbW92ZSBcInBhcmVudHNcIiByZWZlcmVuY2VzIGZyb20gYWxsIGNoaWxkcmVuXG4gXHRcdFx0Zm9yIChqID0gMDsgaiA8IG1vZHVsZS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGNoaWxkID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGUuY2hpbGRyZW5bal1dO1xuIFx0XHRcdFx0aWYgKCFjaGlsZCkgY29udGludWU7XG4gXHRcdFx0XHRpZHggPSBjaGlsZC5wYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpO1xuIFx0XHRcdFx0aWYgKGlkeCA+PSAwKSB7XG4gXHRcdFx0XHRcdGNoaWxkLnBhcmVudHMuc3BsaWNlKGlkeCwgMSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gcmVtb3ZlIG91dGRhdGVkIGRlcGVuZGVuY3kgZnJvbSBtb2R1bGUgY2hpbGRyZW5cbiBcdFx0dmFyIGRlcGVuZGVuY3k7XG4gXHRcdHZhciBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcztcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdGlmIChcbiBcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdGlmIChtb2R1bGUpIHtcbiBcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0XHRcdGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tqXTtcbiBcdFx0XHRcdFx0XHRpZHggPSBtb2R1bGUuY2hpbGRyZW4uaW5kZXhPZihkZXBlbmRlbmN5KTtcbiBcdFx0XHRcdFx0XHRpZiAoaWR4ID49IDApIG1vZHVsZS5jaGlsZHJlbi5zcGxpY2UoaWR4LCAxKTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIE5vdCBpbiBcImFwcGx5XCIgcGhhc2VcbiBcdFx0aG90U2V0U3RhdHVzKFwiYXBwbHlcIik7XG5cbiBcdFx0aG90Q3VycmVudEhhc2ggPSBob3RVcGRhdGVOZXdIYXNoO1xuXG4gXHRcdC8vIGluc2VydCBuZXcgY29kZVxuIFx0XHRmb3IgKG1vZHVsZUlkIGluIGFwcGxpZWRVcGRhdGUpIHtcbiBcdFx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFwcGxpZWRVcGRhdGUsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBhcHBsaWVkVXBkYXRlW21vZHVsZUlkXTtcbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHQvLyBjYWxsIGFjY2VwdCBoYW5kbGVyc1xuIFx0XHR2YXIgZXJyb3IgPSBudWxsO1xuIFx0XHRmb3IgKG1vZHVsZUlkIGluIG91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XG4gXHRcdFx0aWYgKFxuIFx0XHRcdFx0T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG91dGRhdGVkRGVwZW5kZW5jaWVzLCBtb2R1bGVJZClcbiBcdFx0XHQpIHtcbiBcdFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdFx0aWYgKG1vZHVsZSkge1xuIFx0XHRcdFx0XHRtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyA9IG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdFx0dmFyIGNhbGxiYWNrcyA9IFtdO1xuIFx0XHRcdFx0XHRmb3IgKGkgPSAwOyBpIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdFx0XHRkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbaV07XG4gXHRcdFx0XHRcdFx0Y2IgPSBtb2R1bGUuaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBlbmRlbmN5XTtcbiBcdFx0XHRcdFx0XHRpZiAoY2IpIHtcbiBcdFx0XHRcdFx0XHRcdGlmIChjYWxsYmFja3MuaW5kZXhPZihjYikgIT09IC0xKSBjb250aW51ZTtcbiBcdFx0XHRcdFx0XHRcdGNhbGxiYWNrcy5wdXNoKGNiKTtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdFx0XHRcdGNiID0gY2FsbGJhY2tzW2ldO1xuIFx0XHRcdFx0XHRcdHRyeSB7XG4gXHRcdFx0XHRcdFx0XHRjYihtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyk7XG4gXHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuIFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwiYWNjZXB0LWVycm9yZWRcIixcbiBcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG4gXHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tpXSxcbiBcdFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyXG4gXHRcdFx0XHRcdFx0XHRcdH0pO1xuIFx0XHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG4gXHRcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gTG9hZCBzZWxmIGFjY2VwdGVkIG1vZHVsZXNcbiBcdFx0Zm9yIChpID0gMDsgaSA8IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdHZhciBpdGVtID0gb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzW2ldO1xuIFx0XHRcdG1vZHVsZUlkID0gaXRlbS5tb2R1bGU7XG4gXHRcdFx0aG90Q3VycmVudFBhcmVudHMgPSBbbW9kdWxlSWRdO1xuIFx0XHRcdHRyeSB7XG4gXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKTtcbiBcdFx0XHR9IGNhdGNoIChlcnIpIHtcbiBcdFx0XHRcdGlmICh0eXBlb2YgaXRlbS5lcnJvckhhbmRsZXIgPT09IFwiZnVuY3Rpb25cIikge1xuIFx0XHRcdFx0XHR0cnkge1xuIFx0XHRcdFx0XHRcdGl0ZW0uZXJyb3JIYW5kbGVyKGVycik7XG4gXHRcdFx0XHRcdH0gY2F0Y2ggKGVycjIpIHtcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvci1oYW5kbGVyLWVycm9yZWRcIixcbiBcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyMixcbiBcdFx0XHRcdFx0XHRcdFx0b3JpZ2luYWxFcnJvcjogZXJyXG4gXHRcdFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyMjtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuIFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3JlZFwiLFxuIFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuIFx0XHRcdFx0XHRcdH0pO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHQvLyBoYW5kbGUgZXJyb3JzIGluIGFjY2VwdCBoYW5kbGVycyBhbmQgc2VsZiBhY2NlcHRlZCBtb2R1bGUgbG9hZFxuIFx0XHRpZiAoZXJyb3IpIHtcbiBcdFx0XHRob3RTZXRTdGF0dXMoXCJmYWlsXCIpO1xuIFx0XHRcdHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gXHRcdH1cblxuIFx0XHRob3RTZXRTdGF0dXMoXCJpZGxlXCIpO1xuIFx0XHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkge1xuIFx0XHRcdHJlc29sdmUob3V0ZGF0ZWRNb2R1bGVzKTtcbiBcdFx0fSk7XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGhvdDogaG90Q3JlYXRlTW9kdWxlKG1vZHVsZUlkKSxcbiBcdFx0XHRwYXJlbnRzOiAoaG90Q3VycmVudFBhcmVudHNUZW1wID0gaG90Q3VycmVudFBhcmVudHMsIGhvdEN1cnJlbnRQYXJlbnRzID0gW10sIGhvdEN1cnJlbnRQYXJlbnRzVGVtcCksXG4gXHRcdFx0Y2hpbGRyZW46IFtdXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIGhvdENyZWF0ZVJlcXVpcmUobW9kdWxlSWQpKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9idWlsZC9cIjtcblxuIFx0Ly8gX193ZWJwYWNrX2hhc2hfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5oID0gZnVuY3Rpb24oKSB7IHJldHVybiBob3RDdXJyZW50SGFzaDsgfTtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBob3RDcmVhdGVSZXF1aXJlKDApKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwibGV0IHNvbWUgPSB7XG4gIGNoYXJ0OiB7XG4gICAgY29udGFpbmVyOiBcIiNjb2xsYXBzYWJsZS1leGFtcGxlXCIsXG4gICAgYW5pbWF0ZU9uSW5pdDogdHJ1ZSxcbiAgICBjYWxsYmFjazoge1xuICAgICAgb25Ub2dnbGVDb2xsYXBzZUZpbmlzaGVkOiBmdW5jdGlvbiAoZSkge1xuLy8gICAgICAgIHNjYWxlT25Db2xsYXBzZShlLlgpO1xuICAgICAgfSxcbiAgICB9LFxuICAgIG5vZGU6IHtcbiAgICAgIGNvbGxhcHNhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBsZXZlbFNlcGFyYXRpb246IDMwLFxuICAgIHNpYmxpbmdTZXBhcmF0aW9uOiAxMCxcbiAgICBzdWJUZWVTZXBhcmF0aW9uOiAxNSxcbiAgICBub2RlQWxpZ246ICdMRUZUJyxcbiAgICBjb25uZWN0b3JzOiB7XG4gICAgICB0eXBlOiAnc3RlcCcsXG4gICAgICBzdHlsZToge1xuICAgICAgICAnc3Ryb2tlJzogJ2dyZXknLFxuICAgICAgICAnc3Ryb2tlLXdpZHRoJzogNCxcbiAgICAgIH1cbiAgICB9LFxuICAgIGFuaW1hdGlvbjoge1xuICAgICAgbm9kZUFuaW1hdGlvbjogXCJsaW5lYXIgXCIsXG4gICAgICBub2RlU3BlZWQ6IDUwMCxcbiAgICAgIGNvbm5lY3RvcnNBbmltYXRpb246IFwibGluZWFyXCIsXG4gICAgICBjb25uZWN0b3JzU3BlZWQ6IDEwMFxuICAgIH1cbiAgfSxcbiAgbm9kZVN0cnVjdHVyZToge1xuICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgSFRNTGNsYXNzOiAndGlsZScsXG4vLyAgICBIVE1MaWQ6ICdjZHNjJyxcbiAgICBhZGRpdGlvbmFsSW5mbzoge30sXG5cbiAgICB0ZXh0OiB7XG4gICAgICBuYW1lOiB7XG5cbiAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICB9LFxuICAgICAgbm9kZUFsaWduOiAnQk9UVE9NJyxcbiAgICB9LFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgdmFsOiBcIkl1bGlhIEl6b25pbmFcIixcbiAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuLy8gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4vLyAgICAgICAgY2hpbGRyZW5Ecm9wTGV2ZWw6IDIsXG4gICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiU29tZSBsb25nbmFtZWVlZWVlZVwiLFxuICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3RhY2tDaGlsZHJlbjogdHJ1ZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbe1xuICAgICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgIHZhbDogXCJJdWxpYSBJem9uaW5hXCIsXG4gICAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfSxcbi8vICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuLy8gICAgICAgIGNoaWxkcmVuRHJvcExldmVsOiAyLFxuICAgICAgICAgICAgICBjb2xsYXBzZWQ6IHRydWUsXG4gICAgICAgICAgICB9XVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW1hZ2U6IFwiLi9zcmMvYXNzZXRzL2ltYWdlL05hdGFsaXlhLmpwZWdcIixcbiAgICAgICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgdmFsOiBcIkl1bGlhIEl6b25pbmFcIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IFwiLi9zcmMvYXNzZXRzL2ltYWdlL05hdGFsaXlhLmpwZWdcIixcbiAgICAgICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgIHZhbDogXCJJdWxpYSBJem9uaW5hXCIsXG4gICAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IFwiLi9zcmMvYXNzZXRzL2ltYWdlL05hdGFsaXlhLmpwZWdcIixcbiAgICAgICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgIHZhbDogXCJJdWxpYSBJem9uaW5hXCIsXG4gICAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiSXVsaWEgSXpvbmluYVwiLFxuICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFt7XG4gICAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgICAgdmFsOiBcIkl1bGlhIEl6b25pbmFcIixcbiAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuLy8gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4vLyAgICAgICAgY2hpbGRyZW5Ecm9wTGV2ZWw6IDIsXG4gICAgICAgICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgICAgIH1dXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiSXVsaWEgSXpvbmluYVwiLFxuICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFt7XG4gICAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgICAgdmFsOiBcIkl1bGlhIEl6b25pbmFcIixcbiAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuLy8gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4vLyAgICAgICAgY2hpbGRyZW5Ecm9wTGV2ZWw6IDIsXG4gICAgICAgICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgICAgIH1dXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiSXVsaWEgSXpvbmluYVwiLFxuICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFt7XG4gICAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgICAgdmFsOiBcIkl1bGlhIEl6b25pbmFcIixcbiAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuLy8gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4vLyAgICAgICAgY2hpbGRyZW5Ecm9wTGV2ZWw6IDIsXG4gICAgICAgICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgICAgIH1dXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiSXVsaWEgSXpvbmluYVwiLFxuICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgICAgICB2YWw6IFwiSXVsaWEgSXpvbmluYVwiLFxuICAgICAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbi8vICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuLy8gICAgICAgIGNoaWxkcmVuRHJvcExldmVsOiAyLFxuICAgICAgICAgICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgICAgICB2YWw6IFwiSXVsaWEgSXpvbmluYVwiLFxuICAgICAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbi8vICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuLy8gICAgICAgIGNoaWxkcmVuRHJvcExldmVsOiAyLFxuICAgICAgICAgICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW1hZ2U6IFwiLi9zcmMvYXNzZXRzL2ltYWdlL05hdGFsaXlhLmpwZWdcIixcbiAgICAgICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgdmFsOiBcIkl1bGRjZHNjc2lhIEl6b25pbmFcIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgdGV4dDoge1xuICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgIHZhbDogXCJJZ29yIFJ1ZGtvXCIsXG4gICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgc3RhY2tDaGlsZHJlbjogdHJ1ZSxcbiAgICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIHZhbDogXCJMaWxpeWEgS29uZHJhdGlldmFcIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgICAgICBkcmF3TGluZVRocm91Z2g6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgdGV4dDoge1xuICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgIHZhbDogXCJWaWt0b3IgTWF0dXNvdlwiLFxuICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgIGRyYXdMaW5lVGhyb3VnaDogdHJ1ZSxcbiAgICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIHZhbDogXCJBbGV4YW5kZXIgTGFuaW5cIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgICAgICBkcmF3TGluZVRocm91Z2g6IHRydWUsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IFwiLi9zcmMvYXNzZXRzL2ltYWdlL05hdGFsaXlhLmpwZWdcIixcbiAgICAgICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgIHZhbDogXCJJdWxpYSBJem9uaW5hXCIsXG4gICAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuLy8gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4vLyAgICAgICAgY2hpbGRyZW5Ecm9wTGV2ZWw6IDIsXG4gICAgICAgICAgICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiVml0YWxpaSBMaXR2aW5cIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW1hZ2U6IFwiLi9zcmMvYXNzZXRzL2ltYWdlL05hdGFsaXlhLmpwZWdcIixcbiAgICAgICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgdmFsOiBcIlZpdGFsaWkgVGlsaW5za2lpXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgdGV4dDoge1xuICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgIHZhbDogXCJZZXZnZW5paSBLb2xvbWV0c2tpeVwiLFxuICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiTGlsaXlhIEtvbmRyYXRpZXZhXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuICAgICAgICAgICAgZHJhd0xpbmVUaHJvdWdoOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiTGlsaXlhIEtvbmRyYXRpZXZhXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuICAgICAgICAgICAgZHJhd0xpbmVUaHJvdWdoOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiTGlsaXlhIEtvbmRyYXRpZXZhXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuICAgICAgICAgICAgZHJhd0xpbmVUaHJvdWdoOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiTGlsaXlhIEtvbmRyYXRpZXZhXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuICAgICAgICAgICAgZHJhd0xpbmVUaHJvdWdoOiB0cnVlLFxuICAgICAgICAgICAgY2hpbGRyZW46IFt7XG4gICAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgICAgdmFsOiBcIkl1bGlhIEl6b25pbmFcIixcbiAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuLy8gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4vLyAgICAgICAgY2hpbGRyZW5Ecm9wTGV2ZWw6IDIsXG4gICAgICAgICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICB2YWw6IFwiSXVsaWEgSXpvbmluYVwiLFxuICAgICAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3BvcnRhbC5nbG9iYWxsb2dpYy5jb20vdXNlci9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYS9jNzhhNzA2ZTkxMzQvZ2VuZXJhbCcsXG4gICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB9LFxuLy8gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4vLyAgICAgICAgY2hpbGRyZW5Ecm9wTGV2ZWw6IDIsXG4gICAgICAgICAgICAgICAgICBjb2xsYXBzZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XVxuICAgICAgICAgIH0sXG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgdmFsOiBcIkRteXRybyBMZXZpdHNraXkgKFVTKVwiLFxuICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiTGlsaXlhIEtvbmRyYXRpZXZhXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuICAgICAgICAgICAgZHJhd0xpbmVUaHJvdWdoOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiTGlsaXlhIEtvbmRyYXRpZXZhXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuICAgICAgICAgICAgZHJhd0xpbmVUaHJvdWdoOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiTGlsaXlhIEtvbmRyYXRpZXZhXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuICAgICAgICAgICAgZHJhd0xpbmVUaHJvdWdoOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICB2YWw6IFwiTGlsaXlhIEtvbmRyYXRpZXZhXCIsXG4gICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFja0NoaWxkcmVuOiB0cnVlLFxuICAgICAgICAgICAgZHJhd0xpbmVUaHJvdWdoOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgdmFsOiBcIkRlbnlzIEJyYXRjaHVrXCIsXG4gICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgc3RhY2tDaGlsZHJlbjogdHJ1ZSxcbiAgICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIHZhbDogXCJMaWxpeWEgS29uZHJhdGlldmFcIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgICAgICBkcmF3TGluZVRocm91Z2g6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIHZhbDogXCJMaWxpeWEgS29uZHJhdGlldmFcIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgICAgICBkcmF3TGluZVRocm91Z2g6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIHZhbDogXCJMaWxpeWEgS29uZHJhdGlldmFcIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgICAgICBkcmF3TGluZVRocm91Z2g6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIHZhbDogXCJMaWxpeWEgS29uZHJhdGlldmFcIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gICAgICAgICAgICBkcmF3TGluZVRocm91Z2g6IHRydWUsXG4gICAgICAgICAgICBjaGlsZHJlbjogW3tcbiAgICAgICAgICAgICAgaW1hZ2U6IFwiLi9zcmMvYXNzZXRzL2ltYWdlL05hdGFsaXlhLmpwZWdcIixcbiAgICAgICAgICAgICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICB2YWw6IFwiSXVsaWEgSXpvbmluYVwiLFxuICAgICAgICAgICAgICAgICAgaHJlZjogJ2h0dHBzOi8vcG9ydGFsLmdsb2JhbGxvZ2ljLmNvbS91c2VyL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhL2M3OGE3MDZlOTEzNC9nZW5lcmFsJyxcbiAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH0sXG4vLyAgICAgICAgc3RhY2tDaGlsZHJlbjogdHJ1ZSxcbi8vICAgICAgICBjaGlsZHJlbkRyb3BMZXZlbDogMixcbiAgICAgICAgICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgICAgICAgfV1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgICAgICAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIHZhbDogXCJMaWxpeWEgS29uZHJhdGlldmFcIixcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9wb3J0YWwuZ2xvYmFsbG9naWMuY29tL3VzZXIvcHJvZmlsZS9uYXRhbGl5YS5zaXJvbWFraGEvYzc4YTcwNmU5MTM0L2dlbmVyYWwnLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4vLyAgICAgICAgICAgIGNoaWxkcmVuOiBbe1xuLy8gICAgICAgICAgICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuLy8gICAgICAgICAgICB9XVxuICAgICAgICAgIH0sXG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgXVxuICB9XG59O1xuXG5sZXQgY29uZmlnLCBwYXJlbnRfbiwgY2hfMSwgY2hfMiwgY2hfMywgY2hfNDtcblxubGV0IGNoYXJ0ID0gW1xuICBjb25maWcgPSB7XG4gICAgY29udGFpbmVyOiBcIiNjb2xsYXBzYWJsZS1leGFtcGxlXCIsXG4gICAgYW5pbWF0ZU9uSW5pdDogdHJ1ZSxcbiAgICBjYWxsYmFjazoge1xuICAgICAgb25Ub2dnbGVDb2xsYXBzZUZpbmlzaGVkOiBmdW5jdGlvbiAoZSkge1xuLy8gICAgICAgIHNjYWxlT25Db2xsYXBzZShlLlgpO1xuICAgICAgfSxcbiAgICB9LFxuICAgIG5vZGU6IHtcbiAgICAgIGNvbGxhcHNhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBsZXZlbFNlcGFyYXRpb246IDMwLFxuICAgIHNpYmxpbmdTZXBhcmF0aW9uOiAxMCxcbiAgICBzdWJUZWVTZXBhcmF0aW9uOiAxNSxcbiAgICBub2RlQWxpZ246ICdMRUZUJyxcbiAgICBjb25uZWN0b3JzOiB7XG4gICAgICB0eXBlOiAnc3RlcCcsXG4gICAgICBzdHlsZToge1xuICAgICAgICAnc3Ryb2tlJzogJ2dyZXknLFxuICAgICAgICAnc3Ryb2tlLXdpZHRoJzogNCxcbiAgICAgIH1cbiAgICB9LFxuICAgIGFuaW1hdGlvbjoge1xuICAgICAgbm9kZUFuaW1hdGlvbjogXCJsaW5lYXIgXCIsXG4gICAgICBub2RlU3BlZWQ6IDUwMCxcbiAgICAgIGNvbm5lY3RvcnNBbmltYXRpb246IFwibGluZWFyXCIsXG4gICAgICBjb25uZWN0b3JzU3BlZWQ6IDEwMFxuICAgIH1cbiAgfSxcbiAgcGFyZW50X24gPSB7XG4gICAgaW1hZ2U6IFwiLi9zcmMvYXNzZXRzL2ltYWdlL05hdGFsaXlhLmpwZWdcIixcbiAgICBIVE1MY2xhc3M6ICd0aWxlJyxcbiAgICBhZGRpdGlvbmFsSW5mbzoge1xuICAgICAgcG9zdDogJ0RpcmVjdG9yJyxcbiAgICAgIHByb2plY3RzOiBbXG4gICAgICAgIHtuYW1lOiAnSGlsdGknLCB1cmw6ICcjJ30sXG4gICAgICAgIHtuYW1lOiAnUmltYWdlJywgdXJsOiAnIyd9XG4gICAgICBdLFxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgbmFtZTogXCJOYXRhbGl5YSBTaXJvbWFraGFcIixcbiAgICAgIG5vZGVBbGlnbjogJ0JPVFRPTScsXG4gICAgfSxcbiAgfSxcbiAgY2hfMSA9IHtcbiAgICBwYXJlbnQ6IHBhcmVudF9uLFxuICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgYWRkaXRpb25hbEluZm86IHtcbiAgICAgIHBvc3Q6ICdNYW5hZ2VyJyxcbiAgICAgIHByb2plY3RzOiBbXG4gICAgICAgIHtuYW1lOiAnTWVkYXZhbnQnLCB1cmw6ICcjJ30sXG4gICAgICAgIHtuYW1lOiAnU29tZSBlbHNlJywgdXJsOiAnIyd9XG4gICAgICBdLFxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgbmFtZTogXCJJdWxpYSBJem9uaW5hXCIsXG4gICAgICBub2RlQWxpZ246ICdCT1RUT00nLFxuICAgIH0sXG4gIH0sXG4gIGNoXzIgPSB7XG4gICAgcGFyZW50OiBwYXJlbnRfbixcbiAgICBpbWFnZTogXCIuL3NyYy9hc3NldHMvaW1hZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgIGFkZGl0aW9uYWxJbmZvOiB7XG4gICAgICBwb3N0OiAnR29kJyxcbiAgICAgIHByb2plY3RzOiBbXG4gICAgICAgIHtuYW1lOiAnU29mb3MnLCB1cmw6ICcjJ30sXG4gICAgICAgIHtuYW1lOiAnUmltYWdlJywgdXJsOiAnIyd9XG4gICAgICBdLFxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgbmFtZTogXCJJZ29yIFJ1ZGtvXCIsXG4gICAgICBub2RlQWxpZ246ICdCT1RUT00nLFxuICAgIH0sXG4gICAgc3RhY2tDaGlsZHJlbjogdHJ1ZSxcbiAgfSxcbiAgY2hfMyA9IHtcbiAgICBwYXJlbnQ6IHBhcmVudF9uLFxuICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbWFnZS9OYXRhbGl5YS5qcGVnXCIsXG4gICAgSFRNTGNsYXNzOiAndGlsZScsXG4gICAgYWRkaXRpb25hbEluZm86IHtcbiAgICAgIHBvc3Q6ICdHb2QnLFxuICAgICAgcHJvamVjdHM6IFtcbiAgICAgICAge25hbWU6ICdTb2ZvcycsIHVybDogJyMnfSxcbiAgICAgICAge25hbWU6ICdSaW1hZ2UnLCB1cmw6ICcjJ31cbiAgICAgIF0sXG4gICAgfSxcbiAgICB0ZXh0OiB7XG4gICAgICBuYW1lOiBcIk5hdGFsaXlhIFNpcm9tYWtoYVwiLFxuICAgICAgbm9kZUFsaWduOiAnQk9UVE9NJyxcbiAgICB9LFxuICAgIHN0YWNrQ2hpbGRyZW46IHRydWUsXG4gIH0sXG4gIGNoXzQgPSB7XG4gICAgcGFyZW50OiBjaF8zLFxuICAgIGltYWdlOiBcIi4vc3JjL2Fzc2V0cy9pbSBhZ2UvTmF0YWxpeWEuanBlZ1wiLFxuICAgIEhUTUxjbGFzczogJ3RpbGUnLFxuICAgIGFkZGl0aW9uYWxJbmZvOiB7XG4gICAgICBwb3N0OiAnR29kJyxcbiAgICAgIHByb2plY3RzOiBbXSxcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIG5hbWU6IFwiTmF0YWxpeWEgU2lyb21ha2hhXCIsXG4gICAgICBub2RlQWxpZ246ICdCT1RUT00nLFxuICAgIH0sXG4gICAgc3RhY2tDaGlsZHJlbjogdHJ1ZSxcbiAgfSxcbl07XG5cbmxldCBjaGFydF9jb25maWcgPSBjaGFydDtcbmNoYXJ0X2NvbmZpZy5tYXAoKGVsLCBpbmQpID0+IGVsLkhUTUxpZCA9IGluZCk7XG5cbmNsYXNzIE9ic2VydmFibGUge1xuICBuZXh0KGRhdGEpIHtcbiAgICB0aGlzLnN0YXRlID0gZGF0YTtcbiAgfVxuXG4gIHN1YnNjcmliZShmbikge1xuICAgIHJldHVybiB0aGlzLnN0YXRlO1xuLy8gICAgbGV0IGIgPSBmbjtcbi8vICAgIHJldHVybiBiXG4gIH1cbn1cblxuY29uc3Qgb2JzZXJ2YWJsZSA9IG5ldyBPYnNlcnZhYmxlKCk7XG5cbm9ic2VydmFibGUuc3Vic2NyaWJlKChkYXRhKSA9PiB7XG4gIGNvbnNvbGUubG9nKGRhdGEpO1xufSk7XG5cbm9ic2VydmFibGUubmV4dCg1KTtcbm9ic2VydmFibGUubmV4dCgyMCk7XG5vYnNlcnZhYmxlLm5leHQoNDQpO1xuXG5leHBvcnQge2NoYXJ0X2NvbmZpZ307IiwiaW1wb3J0ICcuLi9hc3NldHMvc2Nzcy9pbmRleC5zY3NzJztcblxuY2xhc3MgUGFnZU5hdmlnYXRpb24ge1xuICBjb25zdHJ1Y3RvcihpbmZvKSB7XG4gICAgdGhpcy5hZGRFdmVudFRvTGluayhpbmZvLlRPUF9OQVZJR0FUSU9OKTtcbiAgICB0aGlzLmFkZEV2ZW50VG9TY3JvbGxCdXR0b24oaW5mby5TQ1JPTExfQlVUVE9OKTtcbiAgfVxuXG4gIGFkZEV2ZW50VG9MaW5rKGxpbmspIHtcbiAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoQXJyYXkuZnJvbShldmVudC50YXJnZXQuY2xhc3NMaXN0KS5pbmRleE9mKCduYXYtbGluaycpICE9PSAtMSkge1xuXG4gICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICBzY3JvbGxUb3A6ICQoJyMnICsgZXZlbnQudGFyZ2V0LmRhdGFzZXQuYXR0cikub2Zmc2V0KCkudG9wIC0gNDBcbiAgICAgICAgfSwgMjAwKTtcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgYWRkRXZlbnRUb1Njcm9sbEJ1dHRvbihsaW5rKSB7XG4gICAgbGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgc2Nyb2xsVG9wOiAkKCdib2R5Jykub2Zmc2V0KCkudG9wXG4gICAgICB9LCAyMDApO1xuICAgIH0pXG4gIH1cbn1cblxuLy9uZXcgUGFnZU5hdmlnYXRpb24oe1xuLy8gIFRPUF9OQVZJR0FUSU9OOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9wLW5hdmlnYXRpb24tbWVudScpLFxuLy8gIFNDUk9MTF9CVVRUT046IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zY3JvbGwtdG9wLWJ0bicpLFxuLy99KTtcblxuY29uc3QgcGVyc29ucyA9IFtcbiAge1xuICAgIFwibmFtZVwiOiBcIk5hdGFsaXlhIFNpcm9tYWtoYVwiLFxuICAgIFwicGFyXCI6ICdyb290JyxcbiAgICBcImNoaWxkcmVuXCI6IFtdLFxuICAgIFwiaW1hZ2VcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzU1NDk1L3Byb2ZpbGUvTlMuanBnPzE1MTQ4OTk1MTZcIixcbiAgICBcIkhUTUxjbGFzc1wiOiBcInRpbGUgdGlsZS0tc21hbGwgdGlsZS0tZnJhbWVkXCIsXG4gICAgY29sbGFwc2VkOiB0cnVlLFxuICAgIFwiYWRkaXRpb25hbEluZm9cIjoge1xuICAgICAgXCJwb3N0XCI6IFwiRGlyZWN0b3IsRW5naW5lZXJpbmdEaXJlY3RvcixFbmdpbmVlcmluZ0RpcmVjdG9yLEVuZ2luZWVyaW5nXCIsXG4gICAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvbmF0YWxpeWEuc2lyb21ha2hhXCIsXG4gICAgICBcInByb2plY3RzXCI6ICdNVEMgV0ZBIFRlc3RTT1AsIFNvcGhvcycsXG4gICAgfSxcbiAgICBcInRleHRcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiTmF0YWxpeWEgU2lyb21ha2hhXCIsXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiWWV2Z2VuaWkgS29sb21ldHNreWlcIixcbiAgICBcInBhclwiOiBcIk5hdGFsaXlhIFNpcm9tYWtoYVwiLFxuICAgIFwiY2hpbGRyZW5cIjogW10sXG4gICAgXCJpbWFnZVwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvMzU0OS9wcm9maWxlLzUxNzI1LmpwZz8xMzEyMzc4OTI1XCIsXG4gICAgXCJIVE1MY2xhc3NcIjogXCJ0aWxlIHRpbGUtLXNtYWxsIHRpbGUtLWZyYW1lZFwiLFxuICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICBcImFkZGl0aW9uYWxJbmZvXCI6IHtcbiAgICAgIFwicG9zdFwiOiBcIlNlbmlvciBNYW5hZ2VyLEVuZ2luZWVyaW5nXCIsXG4gICAgICBcInByb2plY3RzXCI6ICdMZUNyb3ksIFNvcGhvcycsXG4gICAgfSxcbiAgICBcInRleHRcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiWWV2Z2VuaWkgS29sb21ldHNreWlcIixcbiAgICAgIFwibm9kZUFsaWduXCI6IFwiQk9UVE9NXCJcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJJZ29yIFJ1ZGtvXCIsXG4gICAgXCJwYXJcIjogXCJOYXRhbGl5YSBTaXJvbWFraGFcIixcbiAgICBcImNoaWxkcmVuXCI6IFtdLFxuICAgIFwiaW1hZ2VcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzMxMzE3L3Byb2ZpbGUvSWdvcl9SdWRrb18oMSkuanBnPzE0NTAwOTQxNzFcIixcbiAgICBcIkhUTUxjbGFzc1wiOiBcInRpbGUgdGlsZS0tc21hbGwgdGlsZS0tZnJhbWVkXCIsXG4gICAgY29sbGFwc2VkOiB0cnVlLFxuICAgIFwiYWRkaXRpb25hbEluZm9cIjoge1xuICAgICAgXCJwb3N0XCI6IFwiRGlyZWN0b3IsRW5naW5lZXJpbmdcIixcbiAgICAgIFwicHJvamVjdHNcIjogJ0xlQ3JveSwgU29waG9zJyxcbiAgICB9LFxuICAgIFwidGV4dFwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJJZ29yIFJ1ZGtvXCIsXG4gICAgICBcIm5vZGVBbGlnblwiOiBcIkJPVFRPTVwiXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiRGVueXMgQnJhdGNodWtcIixcbiAgICBcInBhclwiOiBcIk5hdGFsaXlhIFNpcm9tYWtoYVwiLFxuICAgIFwiY2hpbGRyZW5cIjogW10sXG4gICAgXCJpbWFnZVwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvNzA2MTIvcHJvZmlsZS9kZW55cy1zbWlsZS5qcGc/MTU0MjgxNzc0NlwiLFxuICAgIFwiSFRNTGNsYXNzXCI6IFwidGlsZSB0aWxlLS1zbWFsbCB0aWxlLS1mcmFtZWRcIixcbiAgICBjb2xsYXBzZWQ6IHRydWUsXG4gICAgXCJhZGRpdGlvbmFsSW5mb1wiOiB7XG4gICAgICBcInBvc3RcIjogXCJEaXJlY3RvcixFbmdpbmVlcmluZ1wiLFxuICAgICAgXCJwcm9qZWN0c1wiOiAnQUJDLUV4cGVuc2UgcmVwb3J0IHNvbHV0aW9uJyxcbiAgICB9LFxuICAgIFwidGV4dFwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJEZW55cyBCcmF0Y2h1a1wiLFxuICAgICAgXCJub2RlQWxpZ25cIjogXCJCT1RUT01cIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlZpa3RvciBNYXR1c292XCIsXG4gICAgXCJwYXJcIjogXCJOYXRhbGl5YSBTaXJvbWFraGFcIixcbiAgICBcImNoaWxkcmVuXCI6IFtdLFxuICAgIFwiaW1hZ2VcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzIwNjc5L3Byb2ZpbGUvbWVfd2VkZGluZzAuanBnPzE0MTUxMTYzMTlcIixcbiAgICBcIkhUTUxjbGFzc1wiOiBcInRpbGUgdGlsZS0tc21hbGwgdGlsZS0tZnJhbWVkXCIsXG4gICAgY29sbGFwc2VkOiB0cnVlLFxuICAgIFwiYWRkaXRpb25hbEluZm9cIjoge1xuICAgICAgXCJwb3N0XCI6IFwiRGlyZWN0b3IsRW5naW5lZXJpbmdcIixcbiAgICAgIFwicHJvamVjdHNcIjogW11cbiAgICB9LFxuICAgIFwidGV4dFwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJWaWt0b3IgTWF0dXNvdlwiLFxuICAgICAgXCJub2RlQWxpZ25cIjogXCJCT1RUT01cIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlZpa3RvciBNYXR1c292IGNoaWxkXCIsXG4gICAgXCJwYXJcIjogXCJWaWt0b3IgTWF0dXNvdlwiLFxuICAgIFwiY2hpbGRyZW5cIjogW10sXG4gICAgXCJpbWFnZVwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvMjA2NzkvcHJvZmlsZS9tZV93ZWRkaW5nMC5qcGc/MTQxNTExNjMxOVwiLFxuICAgIFwiSFRNTGNsYXNzXCI6IFwidGlsZSB0aWxlLS1zbWFsbCB0aWxlLS1mcmFtZWRcIixcbiAgICBjb2xsYXBzZWQ6IHRydWUsXG4gICAgXCJhZGRpdGlvbmFsSW5mb1wiOiB7XG4gICAgICBcInBvc3RcIjogXCJEaXJlY3RvcixFbmdpbmVlcmluZ1wiLFxuICAgICAgXCJwcm9qZWN0c1wiOiBcIk1pY3Jvc29mdCAtIFNlcnZpY2UgRGVsaXZlcnlcIlxuICAgIH0sXG4gICAgXCJ0ZXh0XCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlZpa3RvciBNYXR1c292XCIsXG4gICAgICBcIm5vZGVBbGlnblwiOiBcIkJPVFRPTVwiXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiVmlrdG9yIE1hdHVzb3YgY2hpbGRcIixcbiAgICBcInBhclwiOiBcIlZpa3RvciBNYXR1c292XCIsXG4gICAgXCJjaGlsZHJlblwiOiBbXSxcbiAgICBcImltYWdlXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS8yMDY3OS9wcm9maWxlL21lX3dlZGRpbmcwLmpwZz8xNDE1MTE2MzE5XCIsXG4gICAgXCJIVE1MY2xhc3NcIjogXCJ0aWxlIHRpbGUtLXNtYWxsIHRpbGUtLWZyYW1lZFwiLFxuICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICBcImFkZGl0aW9uYWxJbmZvXCI6IHtcbiAgICAgIFwicG9zdFwiOiBcIkRpcmVjdG9yLEVuZ2luZWVyaW5nXCIsXG4gICAgICBcInByb2plY3RzXCI6IFwiTWljcm9zb2Z0IC0gU2VydmljZSBEZWxpdmVyeVwiXG4gICAgfSxcbiAgICBcInRleHRcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiVmlrdG9yIE1hdHVzb3ZcIixcbiAgICAgIFwibm9kZUFsaWduXCI6IFwiQk9UVE9NXCJcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJWaWt0b3IgTWF0dXNvdiBjaGlsZFwiLFxuICAgIFwicGFyXCI6IFwiVmlrdG9yIE1hdHVzb3ZcIixcbiAgICBcImNoaWxkcmVuXCI6IFtdLFxuICAgIFwiaW1hZ2VcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzIwNjc5L3Byb2ZpbGUvbWVfd2VkZGluZzAuanBnPzE0MTUxMTYzMTlcIixcbiAgICBcIkhUTUxjbGFzc1wiOiBcInRpbGUgdGlsZS0tc21hbGwgdGlsZS0tZnJhbWVkXCIsXG4gICAgY29sbGFwc2VkOiB0cnVlLFxuICAgIFwiYWRkaXRpb25hbEluZm9cIjoge1xuICAgICAgXCJwb3N0XCI6IFwiRGlyZWN0b3IsRW5naW5lZXJpbmdcIixcbiAgICAgIFwicHJvamVjdHNcIjogXCJNaWNyb3NvZnQgLSBTZXJ2aWNlIERlbGl2ZXJ5XCJcbiAgICB9LFxuICAgIFwidGV4dFwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJWaWt0b3IgTWF0dXNvdlwiLFxuICAgICAgXCJub2RlQWxpZ25cIjogXCJCT1RUT01cIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIlZpa3RvciBNYXR1c292IGNoaWxkXCIsXG4gICAgXCJwYXJcIjogXCJWaWt0b3IgTWF0dXNvdlwiLFxuICAgIFwiY2hpbGRyZW5cIjogW10sXG4gICAgXCJpbWFnZVwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvMjA2NzkvcHJvZmlsZS9tZV93ZWRkaW5nMC5qcGc/MTQxNTExNjMxOVwiLFxuICAgIFwiSFRNTGNsYXNzXCI6IFwidGlsZSB0aWxlLS1zbWFsbCB0aWxlLS1mcmFtZWRcIixcbiAgICBjb2xsYXBzZWQ6IHRydWUsXG4gICAgXCJhZGRpdGlvbmFsSW5mb1wiOiB7XG4gICAgICBcInBvc3RcIjogXCJEaXJlY3RvcixFbmdpbmVlcmluZ1wiLFxuICAgICAgXCJwcm9qZWN0c1wiOiBcIk1pY3Jvc29mdCAtIFNlcnZpY2UgRGVsaXZlcnlcIlxuICAgIH0sXG4gICAgXCJ0ZXh0XCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIlZpa3RvciBNYXR1c292IGNoaWxkXCIsXG4gICAgICBcIm5vZGVBbGlnblwiOiBcIkJPVFRPTVwiXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSXVsaWlhIEl6b25pbmFcIixcbiAgICBcInBhclwiOiBcIk5hdGFsaXlhIFNpcm9tYWtoYVwiLFxuICAgIFwiY2hpbGRyZW5cIjogW10sXG4gICAgXCJpbWFnZVwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvMTIwODEvcHJvZmlsZS9JTUdfMDY0OS5qcGc/MTM2MDkzNjcyN1wiLFxuICAgIFwiSFRNTGNsYXNzXCI6IFwidGlsZSB0aWxlLS1zbWFsbCB0aWxlLS1mcmFtZWRcIixcbiAgICBjb2xsYXBzZWQ6IHRydWUsXG4gICAgXCJhZGRpdGlvbmFsSW5mb1wiOiB7XG4gICAgICBcInBvc3RcIjogXCJEaXJlY3RvcixFbmdpbmVlcmluZ1wiLFxuICAgICAgXCJwcm9qZWN0c1wiOiBcIk1pY3Jvc29mdCAtIFNlcnZpY2UgRGVsaXZlcnlcIlxuICAgIH0sXG4gICAgXCJ0ZXh0XCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkl1bGlpYSBJem9uaW5hXCIsXG4gICAgICBcIm5vZGVBbGlnblwiOiBcIkJPVFRPTVwiXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSXVsaWlhIEl6b25pbmEgY2hpbGRcIixcbiAgICBcInBhclwiOiBcIkl1bGlpYSBJem9uaW5hXCIsXG4gICAgXCJjaGlsZHJlblwiOiBbXSxcbiAgICBcImltYWdlXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS8xMjA4MS9wcm9maWxlL0lNR18wNjQ5LmpwZz8xMzYwOTM2NzI3XCIsXG4gICAgXCJIVE1MY2xhc3NcIjogXCJ0aWxlIHRpbGUtLXNtYWxsIHRpbGUtLWZyYW1lZFwiLFxuICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICBcImFkZGl0aW9uYWxJbmZvXCI6IHtcbiAgICAgIFwicG9zdFwiOiBcIkRpcmVjdG9yLEVuZ2luZWVyaW5nXCIsXG4gICAgICBcInByb2plY3RzXCI6IFwiTWljcm9zb2Z0IC0gU2VydmljZSBEZWxpdmVyeVwiXG4gICAgfSxcbiAgICBcInRleHRcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiSXVsaWlhIEl6b25pbmEgY2hpbGRcIixcbiAgICAgIFwibm9kZUFsaWduXCI6IFwiQk9UVE9NXCJcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJJdWxpaWEgSXpvbmluYSBjaGlsZFwiLFxuICAgIFwicGFyXCI6IFwiSXVsaWlhIEl6b25pbmFcIixcbiAgICBcImNoaWxkcmVuXCI6IFtdLFxuICAgIFwiaW1hZ2VcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzEyMDgxL3Byb2ZpbGUvSU1HXzA2NDkuanBnPzEzNjA5MzY3MjdcIixcbiAgICBcIkhUTUxjbGFzc1wiOiBcInRpbGUgdGlsZS0tc21hbGwgdGlsZS0tZnJhbWVkXCIsXG4gICAgY29sbGFwc2VkOiB0cnVlLFxuICAgIFwiYWRkaXRpb25hbEluZm9cIjoge1xuICAgICAgXCJwb3N0XCI6IFwiRGlyZWN0b3IsRW5naW5lZXJpbmdcIixcbiAgICAgIFwicHJvamVjdHNcIjogXCJNaWNyb3NvZnQgLSBTZXJ2aWNlIERlbGl2ZXJ5XCJcbiAgICB9LFxuICAgIFwidGV4dFwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJJdWxpaWEgSXpvbmluYSBjaGlsZFwiLFxuICAgICAgXCJub2RlQWxpZ25cIjogXCJCT1RUT01cIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwibmFtZVwiOiBcIkl1bGlpYSBJem9uaW5hIGNoaWxkXCIsXG4gICAgXCJwYXJcIjogXCJJdWxpaWEgSXpvbmluYVwiLFxuICAgIFwiY2hpbGRyZW5cIjogW10sXG4gICAgXCJpbWFnZVwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvMTIwODEvcHJvZmlsZS9JTUdfMDY0OS5qcGc/MTM2MDkzNjcyN1wiLFxuICAgIFwiSFRNTGNsYXNzXCI6IFwidGlsZSB0aWxlLS1zbWFsbCB0aWxlLS1mcmFtZWRcIixcbiAgICBjb2xsYXBzZWQ6IHRydWUsXG4gICAgXCJhZGRpdGlvbmFsSW5mb1wiOiB7XG4gICAgICBcInBvc3RcIjogXCJEaXJlY3RvcixFbmdpbmVlcmluZ1wiLFxuICAgICAgXCJwcm9qZWN0c1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCJBZXJvIERldmVsb3BtZW50XCIsXG4gICAgICAgICAgXCJ1cmxcIjogXCIjXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcIiBSaW1hZ2VcIixcbiAgICAgICAgICBcInVybFwiOiBcIiNcIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBcInRleHRcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiSXVsaWlhIEl6b25pbmEgY2hpbGRcIixcbiAgICAgIFwibm9kZUFsaWduXCI6IFwiQk9UVE9NXCJcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJJdWxpaWEgSXpvbmluYSBjaGlsZFwiLFxuICAgIFwicGFyXCI6IFwiSXVsaWlhIEl6b25pbmFcIixcbiAgICBcImNoaWxkcmVuXCI6IFtdLFxuICAgIFwiaW1hZ2VcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzEyMDgxL3Byb2ZpbGUvSU1HXzA2NDkuanBnPzEzNjA5MzY3MjdcIixcbiAgICBcIkhUTUxjbGFzc1wiOiBcInRpbGUgdGlsZS0tc21hbGwgdGlsZS0tZnJhbWVkXCIsXG4gICAgY29sbGFwc2VkOiB0cnVlLFxuICAgIFwiYWRkaXRpb25hbEluZm9cIjoge1xuICAgICAgXCJwb3N0XCI6IFwiRGlyZWN0b3IsRW5naW5lZXJpbmdcIixcbiAgICAgIFwicHJvamVjdHNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiQWVybyBEZXZlbG9wbWVudFwiLFxuICAgICAgICAgIFwidXJsXCI6IFwiI1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcIm5hbWVcIjogXCIgUmltYWdlXCIsXG4gICAgICAgICAgXCJ1cmxcIjogXCIjXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgXCJ0ZXh0XCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIkl1bGlpYSBJem9uaW5hIGNoaWxkXCIsXG4gICAgICBcIm5vZGVBbGlnblwiOiBcIkJPVFRPTVwiXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJuYW1lXCI6IFwiSXVsaWlhIEl6b25pbmEgY2hpbGRcIixcbiAgICBcInBhclwiOiBcIkl1bGlpYSBJem9uaW5hXCIsXG4gICAgXCJjaGlsZHJlblwiOiBbXSxcbiAgICBcImltYWdlXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS8xMjA4MS9wcm9maWxlL0lNR18wNjQ5LmpwZz8xMzYwOTM2NzI3XCIsXG4gICAgXCJIVE1MY2xhc3NcIjogXCJ0aWxlIHRpbGUtLXNtYWxsIHRpbGUtLWZyYW1lZFwiLFxuICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICBcImFkZGl0aW9uYWxJbmZvXCI6IHtcbiAgICAgIFwicG9zdFwiOiBcIkRpcmVjdG9yLEVuZ2luZWVyaW5nXCIsXG4gICAgICBcInByb2plY3RzXCI6IFwiTWljcm9zb2Z0IC0gU2VydmljZSBEZWxpdmVyeVwiXG4gICAgfSxcbiAgICBcInRleHRcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiSXVsaWlhIEl6b25pbmEgY2hpbGRcIixcbiAgICAgIFwibm9kZUFsaWduXCI6IFwiQk9UVE9NXCJcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcIm5hbWVcIjogXCJJdWxpaWEgSXpvbmluYSBjaGlsZFwiLFxuICAgIFwicGFyXCI6IFwiSXVsaWlhIEl6b25pbmFcIixcbiAgICBcImNoaWxkcmVuXCI6IFtdLFxuICAgIFwiaW1hZ2VcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzEyMDgxL3Byb2ZpbGUvSU1HXzA2NDkuanBnPzEzNjA5MzY3MjdcIixcbiAgICBcIkhUTUxjbGFzc1wiOiBcInRpbGUgdGlsZS0tc21hbGwgdGlsZS0tZnJhbWVkXCIsXG4gICAgY29sbGFwc2VkOiB0cnVlLFxuICAgIFwiYWRkaXRpb25hbEluZm9cIjoge1xuICAgICAgXCJwb3N0XCI6IFwiRGlyZWN0b3IsRW5naW5lZXJpbmdcIixcbiAgICAgIFwicHJvamVjdHNcIjogXCJBZXJvIERldmVsb3BtZW50XCJcbiAgICB9LFxuICAgIFwidGV4dFwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJJdWxpaWEgSXpvbmluYSBjaGlsZFwiLFxuICAgICAgXCJub2RlQWxpZ25cIjogXCJCT1RUT01cIlxuICAgIH1cbiAgfSxcbl07XG5cbmNvbnN0IHN2ZzEgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc3ZnJyk7XG5jb25zdCB3cmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbGxhcHNhYmxlLWV4YW1wbGUnKTtcbmNvbnN0IGNsb3NlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNsb3NlLWJ0bicpO1xuY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhaW5lcicpO1xuY29uc3QgbW9kYWxPdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLW92ZXJsYXknKTtcbmxldCB0cmVlO1xuXG5mdW5jdGlvbiBzZXRQZXJzb25JZCgpIHtcbiAgcGVyc29ucy5tYXAoKGVsLCBpbmQpID0+IGVsLkhUTUxpZCA9IGluZCArIDEpO1xufVxuXG5mdW5jdGlvbiBjb21iaW5lTmVzdGVkTm9kZXMoKSB7XG4gIHNldFBlcnNvbklkKCk7XG4gIGxldCBzb3J0ZWROb2RlcyA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcGVyc29ucy5sZW5ndGg7IGkrKykge1xuICAgIGxldCBlbGVtZW50ID0gcGVyc29uc1tpXTtcblxuICAgIGZvciAobGV0IGogPSBpOyBqIDwgcGVyc29ucy5sZW5ndGg7IGorKykge1xuICAgICAgbGV0IGVsZW1lbnQyID0gcGVyc29uc1tqXTtcblxuICAgICAgaWYgKGVsZW1lbnQubmFtZSA9PT0gZWxlbWVudDIucGFyKSB7XG4gICAgICAgIGVsZW1lbnQuY2hpbGRyZW4ucHVzaChlbGVtZW50Mik7XG4gICAgICAgIHNob3dIaWRlQ29sbGFwc2VkKGVsZW1lbnQyKTtcbiAgICAgIH1cbiAgICB9XG4gICAgc29ydGVkTm9kZXMucHVzaChlbGVtZW50KTtcbiAgfVxuXG4gIHNvcnRlZE5vZGVzLm1hcCgoaXRlbSkgPT4ge1xuICAgIGlmICghaXRlbS5jaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgIGl0ZW0uY29sbGFwc2VkID0gZmFsc2U7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gc29ydGVkTm9kZXNbMF07XG59XG5cbmxldCBjaGFydF9jb25maWcgPSB7XG4gIGNoYXJ0OiB7XG4gICAgY29udGFpbmVyOiBcIiNjb2xsYXBzYWJsZS1leGFtcGxlXCIsXG4gICAgYW5pbWF0ZU9uSW5pdDogdHJ1ZSxcbiAgICBjYWxsYmFjazoge1xuICAgICAgb25Ub2dnbGVDb2xsYXBzZUZpbmlzaGVkOiBmdW5jdGlvbiAoZSkge1xuLy8gICAgICAgIHNjYWxlT25Db2xsYXBzZShlLlgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgbm9kZToge1xuICAgICAgY29sbGFwc2FibGU6IHRydWVcbiAgICB9LFxuICAgIGxldmVsU2VwYXJhdGlvbjogMzAsXG4gICAgc2libGluZ1NlcGFyYXRpb246IDMwLFxuICAgIHN1YlRlZVNlcGFyYXRpb246IDMwLFxuICAgIG5vZGVBbGlnbjogJ1RPUCcsXG4gICAgY29ubmVjdG9yczoge1xuICAgICAgdHlwZTogJ3N0ZXAnLFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgJ3N0cm9rZSc6ICcjNzI4NDlhJyxcbiAgICAgICAgJ3N0cm9rZS13aWR0aCc6IDIsXG4gICAgICB9XG4gICAgfSxcbiAgICBhbmltYXRpb246IHtcbiAgICAgIG5vZGVBbmltYXRpb246IFwibGluZWFyIFwiLFxuICAgICAgbm9kZVNwZWVkOiA1MDAsXG4gICAgICBjb25uZWN0b3JzQW5pbWF0aW9uOiBcImxpbmVhclwiLFxuICAgICAgY29ubmVjdG9yc1NwZWVkOiAxMDBcbiAgICB9XG4gIH0sXG4gIG5vZGVTdHJ1Y3R1cmU6IGNvbWJpbmVOZXN0ZWROb2RlcygpXG59O1xuXG5mdW5jdGlvbiBzaG93SGlkZUNvbGxhcHNlZChlbGVtZW50KSB7XG4vLyAgY29uc29sZS5sb2coZWxlbWVudCk7XG4gIGlmICghZWxlbWVudC5jaGlsZHJlbi5sZW5ndGgpIHtcbi8vICAgIGVsZW1lbnQuY29sbGFwc2VkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0U2NhbGVTdGVwKCkge1xuICBsZXQgc2NhbGUgPSAwO1xuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgc2NhbGUgPSBzY2FsZSArICgxIC8gMTApO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfVxufVxuXG5sZXQgY291bnRlciA9IGdldFNjYWxlU3RlcCgpO1xubGV0IGN1cnJlbnRab29tID0gMTtcbmxldCB6b29tU3RlcCA9IGNvdW50ZXIoKTtcblxuY2xhc3MgTW9kYWwge1xuICBjb25zdHJ1Y3Rvcihtb2RhbEluZm8pIHtcbiAgICB0aGlzLm1vZGFsSW5mbyA9IG1vZGFsSW5mbztcbiAgICB0aGlzLmFkZENhbmNlbEJ0bkV2ZW50TGlzdGVuZXIoKTtcblxuICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coc2NyZWVuKTtcbiAgICAgIGNvbnNvbGUubG9nKHdpbmRvdy5zY3JvbGwoKSk7XG4gICAgICBjb25zb2xlLmxvZyh3aW5kb3cuc2Nyb2xsKTtcbiAgICAgIGNvbnNvbGUubG9nKHdpbmRvdy5vdXRlckhlaWdodCk7XG4gICAgICBjb25zb2xlLmxvZyh3aW5kb3cucGFnZVlPZmZzZXQpO1xuICAgICAgY29uc29sZS5sb2coZXZlbnQub2Zmc2V0WSk7XG4gICAgICBjb25zb2xlLmxvZyhldmVudCk7XG4gICAgICBjb25zb2xlLmxvZyh3aW5kb3cpO1xuICAgIH0pXG4gIH1cblxuICBhZGRDYW5jZWxCdG5FdmVudExpc3RlbmVyKCkge1xuICAgIHRoaXMubW9kYWxJbmZvLk1PREFMX0NBTkNFTF9CVE4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB0aGlzLmNsb3NlTW9kYWwoKTtcbiAgICB9KVxuICB9XG5cbiAgb25QZXJzb25UaWxlQ2xpY2soc2VsZWN0ZWRFbGVtZW50LCBldmVudCkge1xuICAgIHRoaXMub3Blbk1vZGFsKGV2ZW50KTtcbiAgICB0aGlzLnVwZGF0ZU1vZGFsQ29udGVudChzZWxlY3RlZEVsZW1lbnQpO1xuICAgIHRoaXMuc2V0UHJvZmlsZUxpbmtUb01vZGFsQnRuKHNlbGVjdGVkRWxlbWVudCk7XG4gIH1cblxuICBzZXRNb2RhbFBvc2l0aW9uKGV2ZW50KSB7XG4gICAgdGhpcy5tb2RhbEluZm8uTU9EQUxfSFRNTFswXS5zdHlsZS50b3AgPSAoKHdpbmRvdy5pbm5lckhlaWdodCAtIDM1MCkgLyAyKSArIFwicHhcIjtcbi8vICAgIHJldHVybiBldmVudC5vZmZzZXRZICsgMzUwO1xuICB9XG5cbiAgb3Blbk1vZGFsKGV2ZW50KSB7XG4gICAgdGhpcy5zZXRNb2RhbFBvc2l0aW9uKGV2ZW50KTtcbiAgICB0aGlzLm1vZGFsSW5mby5NT0RBTF9IVE1MWzBdLmNsYXNzTGlzdC5hZGQoJ2FkZGl0aW9uYWwtaW5mby1tb2RhbC0tb3BlbicpO1xuLy8gICAgdGhpcy5tb2RhbEluZm8uTU9EQUxfSFRNTFswXS5zdHlsZS50b3AgPSBgJHt0aGlzLnNldE1vZGFsUG9zaXRpb24oZXZlbnQpfXB4IGA7XG4gICAgdGhpcy5tb2RhbEluZm8uTU9EQUxfT1ZFUkxBWVswXS5jbGFzc0xpc3QuYWRkKCdtb2RhbC1vdmVybGF5LS1vcGVuJyk7XG4vLyAgICB0aGlzLm1vZGFsSW5mby5NT0RBTF9IVE1MWzBdLnN0eWxlLnRvcCA9IGAke2V2ZW50LnBhZ2VZIC0gMzQ4fXB4IGA7XG4vLyAgICBjb25zb2xlLmxvZyhldmVudCk7XG4gIH1cblxuICB1cGRhdGVNb2RhbENvbnRlbnQoc2VsZWN0ZWRFbGVtZW50KSB7XG4gICAgLy8gQ2xlYXIgY29udGFpbmVyIHdpdGggcHJvamVjdHNcbi8vICAgIHRoaXMubW9kYWxJbmZvLk1PREFMX0lORk9fUFJPSkVDVFNbMF0uaW5uZXJIVE1MID0gJyc7XG5cbiAgICAvLyBTZXQgdmFsdWVzIGZvciB0aXRsZSBhbmQgcG9zdFxuICAgIHRoaXMubW9kYWxJbmZvLk1PREFMX0lORk9fQVZBVEFSWzBdLmlubmVySFRNTCA9IGA8aW1nIHNyYz0ke3NlbGVjdGVkRWxlbWVudC5pbWFnZX0gYWx0PSR7c2VsZWN0ZWRFbGVtZW50LnRleHQubmFtZX0+YDtcbiAgICB0aGlzLm1vZGFsSW5mby5NT0RBTF9JTkZPX05BTUVbMF0uaW5uZXJIVE1MID0gc2VsZWN0ZWRFbGVtZW50LnRleHQubmFtZTtcbiAgICB0aGlzLm1vZGFsSW5mby5NT0RBTF9JTkZPX1BPU1RbMF0uaW5uZXJIVE1MID0gc2VsZWN0ZWRFbGVtZW50LmFkZGl0aW9uYWxJbmZvLnBvc3Q7XG4gICAgdGhpcy5tb2RhbEluZm8uTU9EQUxfSU5GT19QUk9KRUNUU1swXS5pbm5lckhUTUwgPSBzZWxlY3RlZEVsZW1lbnQuYWRkaXRpb25hbEluZm8ucHJvamVjdHM7XG5cbiAgICAvLyBDcmVhdGUgcHJvamVjdCBsaW5rc1xuLy8gICAgaWYgKHNlbGVjdGVkRWxlbWVudC5hZGRpdGlvbmFsSW5mby5wcm9qZWN0cykge1xuLy8gICAgICBzZWxlY3RlZEVsZW1lbnQuYWRkaXRpb25hbEluZm8ucHJvamVjdHMuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuLy8gICAgICAgIGNvbnN0IHByb2plY3RMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuLy9cbi8vICAgICAgICBwcm9qZWN0TGluay5jbGFzc05hbWUgPSAncHJvamVjdC1saW5rJztcbi8vICAgICAgICBwcm9qZWN0TGluay5pbm5lckhUTUwgPSBgPGEgaHJlZj1cIiR7cHJvamVjdC51cmx9XCI+JHtwcm9qZWN0Lm5hbWV9PC9hPmA7XG4vL1xuLy8gICAgICAgIGlmICh0aGlzLm1vZGFsSW5mby5NT0RBTF9JTkZPX1BST0pFQ1RTKSB7XG4vLyAgICAgICAgICB0aGlzLm1vZGFsSW5mby5NT0RBTF9JTkZPX1BST0pFQ1RTWzBdLmFwcGVuZENoaWxkKHByb2plY3RMaW5rKTtcbi8vICAgICAgICB9IGVsc2Uge1xuLy8gICAgICAgICAgY29uc29sZS5sb2coJ1Byb2plY3RzIGxpbmsgY29udGFpbmVyIGlzIGFic2VudCEhISEnKTtcbi8vICAgICAgICB9XG4vLyAgICAgIH0pXG4vLyAgICB9XG4gIH1cblxuICBjbG9zZU1vZGFsKCkge1xuICAgIHRoaXMubW9kYWxJbmZvLk1PREFMX0hUTUxbMF0uY2xhc3NMaXN0LnJlbW92ZSgnYWRkaXRpb25hbC1pbmZvLW1vZGFsLS1vcGVuJyk7XG4gICAgdGhpcy5tb2RhbEluZm8uTU9EQUxfT1ZFUkxBWVswXS5jbGFzc0xpc3QucmVtb3ZlKCdtb2RhbC1vdmVybGF5LS1vcGVuJyk7XG5cbiAgICB0aGlzLm1vZGFsSW5mby5NT0RBTF9IVE1MWzBdLnJlbW92ZUF0dHJpYnV0ZShcInN0eWxlXCIpO1xuICAgIHRoaXMubW9kYWxJbmZvLk1PREFMX0hUTUxbMF0ucmVtb3ZlQXR0cmlidXRlKFwic3R5bGVcIik7XG5cbiAgfVxuXG4gIHNldFByb2ZpbGVMaW5rVG9Nb2RhbEJ0bihzZWxlY3RlZEVsZW1lbnQpIHtcbiAgICB0aGlzLm1vZGFsSW5mby5NT0RBTF9WSUVXX1BST0ZJTEVbMF0uaHJlZiA9IHNlbGVjdGVkRWxlbWVudC5hZGRpdGlvbmFsSW5mby5wcm9maWxlTGluaztcbiAgfVxufVxuXG5jb25zdCBtb2RhbCA9IG5ldyBNb2RhbCh7XG4gIE1PREFMX0hUTUw6IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2FkZGl0aW9uYWwtaW5mby1tb2RhbCcpLFxuICBNT0RBTF9JTkZPX0FWQVRBUjogZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnaW1hZ2UtaG9sZGVyJyksXG4gIE1PREFMX0lORk9fTkFNRTogZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncGVyc29uLW5hbWUnKSxcbiAgTU9EQUxfSU5GT19QT1NUOiBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdwZXJzb24tcG9zdCcpLFxuICBNT0RBTF9JTkZPX1BST0pFQ1RTOiBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdwZXJzb24tcHJvamVjdHMnKSxcbiAgTU9EQUxfT1ZFUkxBWTogZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbW9kYWwtb3ZlcmxheScpLFxuICBNT0RBTF9DQU5DRUxfQlROOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtY2FuY2VsLWJ0bicpLFxuICBNT0RBTF9WSUVXX1BST0ZJTEU6IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ21vZGFsLWxpbmstYnRuJyksXG59KTtcblxuY2xhc3MgWm9vbSB7XG4gIGNvbnN0cnVjdG9yKGNvbnRyb2xzKSB7XG4gICAgdGhpcy5jb250cm9scyA9IGNvbnRyb2xzO1xuXG4gICAgdGhpcy5hZGRDb250cm9sRXZlbnRMaXN0ZW5lcigpO1xuICAgIHRoaXMuZnVsbFNjcmVlbk1vZGUgPSBmYWxzZTtcblxuICAgIHRoaXMuYWRkRG9jdW1lbnRFdmVudExpc3RlbmVyKCk7XG4gIH1cblxuICBhZGRDb250cm9sRXZlbnRMaXN0ZW5lcigpIHtcbiAgICB0aGlzLmNvbnRyb2xzLlpPT01fQ09OVFJPTFMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgIHRoaXMub25Db250cm9sQ2xpY2soZXZlbnQudGFyZ2V0KVxuICAgIH0pXG4gIH1cblxuICBhZGREb2N1bWVudEV2ZW50TGlzdGVuZXIoKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZnVsbHNjcmVlbmNoYW5nZScsIHRoaXMub25Ub2dnbGVTY3JlZW5Nb2RlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd3ZWJraXRmdWxsc2NyZWVuY2hhbmdlJywgdGhpcy5vblRvZ2dsZVNjcmVlbk1vZGUpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vemZ1bGxzY3JlZW5jaGFuZ2UnLCB0aGlzLm9uVG9nZ2xlU2NyZWVuTW9kZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignTVNGdWxsc2NyZWVuQ2hhbmdlJywgdGhpcy5vblRvZ2dsZVNjcmVlbk1vZGUpO1xuICB9XG5cbiAgb25Db250cm9sQ2xpY2soY29udHJvbEluZm8pIHtcbiAgICBpZiAoQXJyYXkuZnJvbShjb250cm9sSW5mby5jbGFzc0xpc3QpLmluZGV4T2YoJ2RlY3JlYXNlLXpvb20nKSAhPT0gLTEgJiYgdGhpcy5jb250cm9scy5aT09NX1ZBTFVFID4gNSkge1xuICAgICAgdGhpcy5kZWNyZWFzZVpvb20oKTtcblxuICAgICAgaWYgKHRoaXMuY29udHJvbHMuWk9PTV9WQUxVRSA8PSA1KSB7XG4gICAgICAgIHRoaXMuZGlzYWJsZUNvbnRyb2woJ2RlY3JlYXNlLXpvb20nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZW5hYmxlQ29udHJvbCgnaW5jcmVhc2Utem9vbScpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChBcnJheS5mcm9tKGNvbnRyb2xJbmZvLmNsYXNzTGlzdCkuaW5kZXhPZignaW5jcmVhc2Utem9vbScpICE9PSAtMSAmJiB0aGlzLmNvbnRyb2xzLlpPT01fVkFMVUUgPD0gMTUpIHtcbiAgICAgIHRoaXMuaW5jcmVhc2Vab29tKCk7XG5cbiAgICAgIGlmICh0aGlzLmNvbnRyb2xzLlpPT01fVkFMVUUgPj0gMTUpIHtcbiAgICAgICAgdGhpcy5kaXNhYmxlQ29udHJvbCgnaW5jcmVhc2Utem9vbScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5lbmFibGVDb250cm9sKCdkZWNyZWFzZS16b29tJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKEFycmF5LmZyb20oY29udHJvbEluZm8uY2xhc3NMaXN0KS5pbmRleE9mKCdmdWxsc2NyZWVuLW1vZGUnKSAhPT0gLTEpIHtcbiAgICAgIHRoaXMub3BlbkZ1bGxTY3JlZW4oKTtcbiAgICB9XG4gIH1cblxuICBpbmNyZWFzZVpvb20oKSB7XG4gICAgd3JhcHBlci5zdHlsZS50cmFuc2Zvcm0gPSBgc2NhbGUoJHsrK3RoaXMuY29udHJvbHMuWk9PTV9WQUxVRSAvIDEwfSlgO1xuICB9XG5cbiAgZGVjcmVhc2Vab29tKCkge1xuICAgIHdyYXBwZXIuc3R5bGUudHJhbnNmb3JtID0gYHNjYWxlKCR7LS10aGlzLmNvbnRyb2xzLlpPT01fVkFMVUUgLyAxMH0pYDtcbiAgfVxuXG4gIGRpc2FibGVDb250cm9sKGRpc2FibGVkQnRuKSB7XG4gICAgc3dpdGNoIChkaXNhYmxlZEJ0bikge1xuICAgICAgY2FzZSAnZGVjcmVhc2Utem9vbSc6XG4gICAgICAgIHRoaXMuY29udHJvbHMuREVDUkVBU0VfQ09OVFJPTC5jbGFzc0xpc3QuYWRkKCd6b29tLWNvbnRyb2wtLWRpc2FibGVkJyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdpbmNyZWFzZS16b29tJzpcbiAgICAgICAgdGhpcy5jb250cm9scy5JTkNSRUFTRV9DT05UUk9MLmNsYXNzTGlzdC5hZGQoJ3pvb20tY29udHJvbC0tZGlzYWJsZWQnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgZW5hYmxlQ29udHJvbChlbmFibGVkQnRuKSB7XG4gICAgc3dpdGNoIChlbmFibGVkQnRuKSB7XG4gICAgICBjYXNlICdkZWNyZWFzZS16b29tJzpcbiAgICAgICAgdGhpcy5jb250cm9scy5ERUNSRUFTRV9DT05UUk9MLmNsYXNzTGlzdC5yZW1vdmUoJ3pvb20tY29udHJvbC0tZGlzYWJsZWQnKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2luY3JlYXNlLXpvb20nOlxuICAgICAgICB0aGlzLmNvbnRyb2xzLklOQ1JFQVNFX0NPTlRST0wuY2xhc3NMaXN0LnJlbW92ZSgnem9vbS1jb250cm9sLS1kaXNhYmxlZCcpO1xuICAgIH1cbiAgfVxuXG4gIG9wZW5GdWxsU2NyZWVuKCkge1xuICAgIGxldCBlbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb250YWluZXJcIik7XG5cbiAgICBpZiAoZWxlbS5yZXF1ZXN0RnVsbHNjcmVlbikge1xuICAgICAgZWxlbS5yZXF1ZXN0RnVsbHNjcmVlbigpO1xuICAgIH0gZWxzZSBpZiAoZWxlbS5tb3pSZXF1ZXN0RnVsbFNjcmVlbikge1xuICAgICAgZWxlbS5tb3pSZXF1ZXN0RnVsbFNjcmVlbigpO1xuICAgIH0gZWxzZSBpZiAoZWxlbS53ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbikge1xuICAgICAgZWxlbS53ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbigpO1xuICAgICAgY29uc29sZS5sb2coZWxlbS53ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbik7XG4gICAgfSBlbHNlIGlmIChlbGVtLm1zUmVxdWVzdEZ1bGxzY3JlZW4pIHtcbiAgICAgIGVsZW0ubXNSZXF1ZXN0RnVsbHNjcmVlbigpO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5mdWxsU2NyZWVuTW9kZSkge1xuICAgICAgaWYgKGRvY3VtZW50LmV4aXRGdWxsc2NyZWVuKSB7XG4gICAgICAgIGRvY3VtZW50LmV4aXRGdWxsc2NyZWVuKCk7XG4gICAgICB9IGVsc2UgaWYgKGRvY3VtZW50LndlYmtpdEV4aXRGdWxsc2NyZWVuKSB7XG4gICAgICAgIGRvY3VtZW50LndlYmtpdEV4aXRGdWxsc2NyZWVuKCk7XG4gICAgICB9IGVsc2UgaWYgKGRvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW4pIHtcbiAgICAgICAgZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlbigpO1xuICAgICAgfSBlbHNlIGlmIChkb2N1bWVudC5tc0V4aXRGdWxsc2NyZWVuKSB7XG4gICAgICAgIGRvY3VtZW50Lm1zRXhpdEZ1bGxzY3JlZW4oKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBvblRvZ2dsZVNjcmVlbk1vZGUoKSB7XG4gICAgdGhpcy5mdWxsU2NyZWVuTW9kZSA9ICF0aGlzLmZ1bGxTY3JlZW5Nb2RlO1xuICB9XG59XG5cbmNvbnN0IHpvb20gPSBuZXcgWm9vbSh7XG4gIFpPT01fQ09OVFJPTFM6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy56b29tLWNvbnRyb2xzJyksXG4gIERFQ1JFQVNFX0NPTlRST0w6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kZWNyZWFzZS16b29tJyksXG4gIElOQ1JFQVNFX0NPTlRST0w6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbmNyZWFzZS16b29tJyksXG4gIFpPT01fVkFMVUU6IDEwLFxufSk7XG5cbndyYXBwZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKGV2ZW50KSA9PiB7XG4gIGlmIChBcnJheS5mcm9tKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QpLmluZGV4T2YoJ25vZGUnKSAhPT0gLTEpIHtcbiAgICBnZXRBZGRpdGlvbmFsSW5mbyhldmVudCk7XG4gIH1cbn0pKTtcblxuY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKGV2ZW50KSA9PiB7XG4gIG1vZGFsLmNsb3NlTW9kYWwoZXZlbnQpO1xufSkpO1xuXG5mdW5jdGlvbiBnZXRBZGRpdGlvbmFsSW5mbyhldmVudCkge1xuICBjb25zdCBzZWxlY3RlZEVsZW1lbnQgPSBwZXJzb25zLmZpbmQoKGl0ZW0pID0+IHtcbiAgICByZXR1cm4gaXRlbS5IVE1MaWQgPT0gZXZlbnQudGFyZ2V0LmlkO1xuICB9KTtcblxuICBtb2RhbC5vblBlcnNvblRpbGVDbGljayhzZWxlY3RlZEVsZW1lbnQsIGV2ZW50KTtcbn1cblxubW9kYWxPdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKChldmVudCkgPT4ge1xuICBtb2RhbC5jbG9zZU1vZGFsKGV2ZW50KTtcbn0pKTtcblxudHJlZSA9IG5ldyBUcmVhbnQoY2hhcnRfY29uZmlnKTtcblxuY29uc3QgaGVhZHNPZkRpdmlzaW9ucyA9IFtcbiAge1xuICAgIFwidGl0bGVcIjogXCJJbm5hIER1a2hvdGFcIixcbiAgICBcImF2YXRhclwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvMjM4MjIvcHJvZmlsZS80MDI4ODguanBnPzE0MjM3ODU2NDRcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiVGFsZW50IEFxdWlzaXRpb24gR3JvdXAgXCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL2lubmEuZHVraG90YVwiXG4gIH0sIHtcbiAgICBcInRpdGxlXCI6IFwiQW5uYSBWZXNlbG92YVwiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS82NTgxNS9wcm9maWxlL0lNR183MTI5LkpQRz8xNTM0NzY2NDE2XCIsXG4gICAgXCJzdWJ0aXRsZVwiOiBcIlJlc291cmNpbmcgXCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL2FubmEudmVzZWxvdmFcIlxuICB9LCB7XG4gICAgXCJ0aXRsZVwiOiBcIkVsbGluYSBNZWR5bnNrYSBcIixcbiAgICBcImF2YXRhclwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvNDg3NDUvcHJvZmlsZS9JTUdfOTM1MC5qcGc/MTQ5ODIwMTY2NFwiLFxuICAgIFwic3VidGl0bGVcIjogXCJQUiAmIE1hcmtldGluZ1wiLFxuICAgIFwicHJvZmlsZUxpbmtcIjogXCJodHRwczovL2dsby5nbG9iYWxsb2dpYy5jb20vdXNlcnMvcHJvZmlsZS9lbGxpbmEubWVkeW5za2FcIlxuICB9LCB7XG4gICAgXCJ0aXRsZVwiOiBcIlNlcmdpaSBTaG1hdGtvXCIsXG4gICAgXCJhdmF0YXJcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzYwOTU2L3Byb2ZpbGUvU2VyaGlpX1NobWF0a28uanBnPzE1MjY5OTk1MjlcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiSVQgSW5mcmFzdHJ1Y3R1cmVcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvc2VyaGlpLnNobWF0a29cIlxuICB9LCB7XG4gICAgXCJ0aXRsZVwiOiBcIlZsYWR5c2xhdiBEb21pblwiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS81MTQ0OS9wcm9maWxlL1ZsYWR5c2xhdl9Eb21pbi5qcGc/MTUwNDY5NzY4N1wiLFxuICAgIFwic3VidGl0bGVcIjogXCJFbXBsb3llZSBTZXJ2aWNlcyBcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvdmxhZHlzbGF2LmRvbWluXCJcbiAgfSwge1xuICAgIFwidGl0bGVcIjogXCJOYXRhbGl5YSBPc2lwZW5rb1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS80MTI5Mi9wcm9maWxlL0lNR185NTU2LmpwZz8xNDc4Njk1NTQxXCIsXG4gICAgXCJzdWJ0aXRsZVwiOiBcIlByb2Nlc3MgTWFuYWdlbWVudCAoUE1HKVwiLFxuICAgIFwicHJvZmlsZUxpbmtcIjogXCJodHRwczovL2dsby5nbG9iYWxsb2dpYy5jb20vdXNlcnMvcHJvZmlsZS9uYXRhbGlpYS5vc3lwZW5rb1wiXG4gIH0sIHtcInRpdGxlXCI6IFwiVEJEXCIsIFwiYXZhdGFyXCI6IFwiXCIsIFwic3VidGl0bGVcIjogXCJCdXNpbmVzcyBQYXJ0bmVyIFwiLCBcInByb2ZpbGVMaW5rXCI6IFwiXCJ9XG5dO1xuY29uc3QgZm9jdXNBcmVhc1BlcnNvbnMgPSBbXG4gIHtcbiAgICBcInRpdGxlXCI6IFwiSXVsaWlhIEl6b25pbmFcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiRGlyZWN0b3IsIEVuZ2luZWVyaW5nXCIsXG4gICAgXCJhdmF0YXJcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzEyMDgxL3Byb2ZpbGUvSU1HXzA2NDkuanBnPzEzNjA5MzY3MjdcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvaXVsaWlhLml6b25pbmFcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiQ2VudGVyIFNjYWxhYmlsaXR5IFwiXG4gIH0sXG4gIHtcbiAgICBcInRpdGxlXCI6IFwiT2xla3NhbmRyIExhbmluXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlNlbmlvciBNYW5hZ2VyLCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS83MDk5MS9wcm9maWxlL2FsZXhsYWluLWdsLTIwMTguanBnPzE1NDM1OTA2MzZcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvb2xla3NhbmRyLmxhbmluXCIsXG4gICAgXCJzdWJ0aXRsZVwiOiBcIkJ1c2luZXNzIERldmVsb3BtZW50IFwiXG4gIH0sXG4gIHtcbiAgICBcInRpdGxlXCI6IFwiTmF0YWxpeWEgU2lyb21ha2hhXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIktoYXJraXYgTG9jYXRpb24gSGVhZFwiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS81NTQ5NS9wcm9maWxlL05TLmpwZz8xNTE0ODk5NTE2XCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL25hdGFsaXlhLnNpcm9tYWtoYVwiLFxuICAgIFwic3VidGl0bGVcIjogXCJQcmFjdGljZXMgRGV2ZWxvcG1lbnQgXCJcbiAgfSxcbiAge1xuICAgIFwidGl0bGVcIjogXCJFbGxpbmEgTWVkeW5za2EgXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlNlbmlvciBTcGVjaWFsaXN0LCBNYXJrZXRpbmdcIixcbiAgICBcImF2YXRhclwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvNDg3NDUvcHJvZmlsZS9JTUdfOTM1MC5qcGc/MTQ5ODIwMTY2NFwiLFxuICAgIFwicHJvZmlsZUxpbmtcIjogXCJodHRwczovL2dsby5nbG9iYWxsb2dpYy5jb20vdXNlcnMvcHJvZmlsZS9lbGxpbmEubWVkeW5za2FcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiUFIgJiBNYXJrZXRpbmdcIlxuICB9LFxuICB7XG4gICAgXCJ0aXRsZVwiOiBcIklubmEgRHVraG90YVwiLFxuICAgIFwicG9zaXRpb25cIjogXCJTZW5pb3IgTWFuYWdlciwgUGVvcGxlIERldmVsb3BtZW50IFwiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS8yMzgyMi9wcm9maWxlLzQwMjg4OC5qcGc/MTQyMzc4NTY0NFwiLFxuICAgIFwicHJvZmlsZUxpbmtcIjogXCJodHRwczovL2dsby5nbG9iYWxsb2dpYy5jb20vdXNlcnMvcHJvZmlsZS9pbm5hLmR1a2hvdGFcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiVEFHIEVmZmljaWVuY3lcIlxuICB9LFxuICB7XG4gICAgXCJ0aXRsZVwiOiBcImF4Y2Fjc1wiLFxuICAgIFwicG9zaXRpb25cIjogXCJTZW5pb3IgTWFuYWdlciwgUGVvcGxlIERldmVsb3BtZW50IFwiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS8yMzgyMi9wcm9maWxlLzQwMjg4OC5qcGc/MTQyMzc4NTY0NFwiLFxuICAgIFwicHJvZmlsZUxpbmtcIjogXCJodHRwczovL2dsby5nbG9iYWxsb2dpYy5jb20vdXNlcnMvcHJvZmlsZS9pbm5hLmR1a2hvdGFcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiVEFHIEVmZmljaWVuY3lcIlxuICB9XG5dO1xuY29uc3QgdGVjaG5vbG9neUxlYWRzID0gW1xuICB7XG4gICAgXCJ0aXRsZVwiOiBcIk9sZWtzYW5kciBMYW5pblwiLFxuICAgIFwicG9zaXRpb25cIjogXCJTZW5pb3IgTWFuYWdlciwgRW5naW5lZXJpbmdcIixcbiAgICBcImF2YXRhclwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvNzA5OTEvcHJvZmlsZS9hbGV4bGFpbi1nbC0yMDE4LmpwZz8xNTQzNTkwNjM2XCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL29sZWtzYW5kci5sYW5pblwiLFxuICAgIFwic3VidGl0bGVcIjogXCIuTkVUIFwiXG4gIH0sXG4gIHtcbiAgICBcInRpdGxlXCI6IFwiT2xlbmEgWWVsaXNoZXZhXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlByb2plY3QgTWFuYWdlciwgRW5naW5lZXJpbmdcIixcbiAgICBcImF2YXRhclwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvMTI3NjUvcHJvZmlsZS9JTUdfMDY4NF8yMS5qcGc/MTM2NDI5NTAyOFwiLFxuICAgIFwicHJvZmlsZUxpbmtcIjogXCJodHRwczovL2dsby5nbG9iYWxsb2dpYy5jb20vdXNlcnMvcHJvZmlsZS9vbGVuYS5pZWx5c2hldmFcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiUUEgQXV0b21hdGlvbiBcIlxuICB9LFxuICB7XG4gICAgXCJ0aXRsZVwiOiBcIk9sZWtzYW5kciBSeWJ0c292XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlNlbmlvciBNYW5hZ2VyLCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS83MDE2OC9wcm9maWxlL1BpY3R1cmUucG5nPzE1NDIxMTMwMTRcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvb2xla3NhbmRyLnJ5YnRzb3ZcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiSmF2YSBcIlxuICB9LFxuICB7XG4gICAgXCJ0aXRsZVwiOiBcIkRlbnlzIEJyYXRjaHVrXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIkRpcmVjdG9yLCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS83MDYxMi9wcm9maWxlL2RlbnlzLXNtaWxlLmpwZz8xNTQyODE3NzQ2XCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL2RlbnlzLmJyYXRjaHVrXCIsXG4gICAgXCJzdWJ0aXRsZVwiOiBcIkphdmFTY3JpcHQgXCJcbiAgfSxcbiAge1xuICAgIFwidGl0bGVcIjogXCJPbGVrc2FuZHIgU3ZpZGVuaXVrXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlNlbmlvciBNYW5hZ2VyLCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS81NTU1Ni9wcm9maWxlL2F2YV8yMDE3LmpwZz8xNTE0OTcxOTg2XCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL29sZWtzYW5kci5zdmlkZW5pdWtcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiQysrXCJcbiAgfVxuXTtcbmNvbnN0IHByYWN0aWNlc0xlYWRzID0gW1xuICB7XG4gICAgXCJ0aXRsZVwiOiBcIkFuZHJpaSBHbmVubnlpXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlByaW5jaXBhbCwgRW5naW5lZXJpbmdcIixcbiAgICBcImF2YXRhclwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvNDA2MjAvcHJvZmlsZS9BR05fU3F1YXJlLmpwZz8xNDc3MDU3NjIwXCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL2FuZHJpeS5nbmVubnl5XCIsXG4gICAgXCJzdWJ0aXRsZVwiOiBcIkNsb3VkXCJcbiAgfSxcbiAge1xuICAgIFwidGl0bGVcIjogXCJBbmRyaWkgQW50aWxpa2F0b3JvdlwiLFxuICAgIFwicG9zaXRpb25cIjogXCJDb25zdWx0YW50LCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS8xNjcxNC9wcm9maWxlL0FudGlsaWthdG9yb3YucG5nPzEzOTIxMDk2MjVcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvQW5kcmlpLkFudGlsaWthdG9yb3ZcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiTWFjaGluZSBMZWFybmluZy9BSVwiXG4gIH0sXG4gIHtcbiAgICBcInRpdGxlXCI6IFwiSWdvciBNYW56aG9zXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlNlbmlvciBDb25zdWx0YW50LCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS82NzYxMC9wcm9maWxlL3ZpYmVyX2ltYWdlLmpwZz8xNTM3NjE1NTc1XCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL2lnb3IubWFuemhvc1wiLFxuICAgIFwic3VidGl0bGVcIjogXCJNYWNoaW5lIExlYXJuaW5nL0FJXCJcbiAgfSxcbiAge1xuICAgIFwidGl0bGVcIjogXCJZZXZoZW4gTmFwcmlhZ2xvXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlNlbmlvciBTb2x1dGlvbiBBcmNoaXRlY3QsIFRlY2hub2xvZ3lcIixcbiAgICBcImF2YXRhclwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvNTY4NDQvcHJvZmlsZS8xLnBuZz8xNTE3OTk2OTU1XCIsXG4gICAgXCJwcm9maWxlTGlua1wiOiBcImh0dHBzOi8vZ2xvLmdsb2JhbGxvZ2ljLmNvbS91c2Vycy9wcm9maWxlL3lldmhlbi5uYXByaWFobG9cIixcbiAgICBcInN1YnRpdGxlXCI6IFwiQXJjaGl0ZWN0dXJlL0RpZ2l0YWwgVHJhbnNmb3JtYXRpb25cIlxuICB9LFxuICB7XG4gICAgXCJ0aXRsZVwiOiBcIllldmdlbmlpIEtvbG9tZXRza3lpXCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIlNlbmlvciBNYW5hZ2VyLCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS8zNTQ5L3Byb2ZpbGUvNTE3MjUuanBnPzEzMTIzNzg5MjVcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUveS5rb2xvbWV0c2t5aVwiLFxuICAgIFwic3VidGl0bGVcIjogXCJBdXRvbW90aXZlL0VtYmVkZGVkXCJcbiAgfSxcbiAge1xuICAgIFwidGl0bGVcIjogXCJPbGVrc2FuZHIgQWRhbW92XCIsXG4gICAgXCJwb3NpdGlvblwiOiBcIkNvbnN1bHRhbnQsIEVuZ2luZWVyaW5nXCIsXG4gICAgXCJhdmF0YXJcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzU3MDEzL3Byb2ZpbGUvbWVfbm9fcmFuc29td2FyZS5qcGc/MTUxODUwNjU5OVwiLFxuICAgIFwicHJvZmlsZUxpbmtcIjogXCJodHRwczovL2dsby5nbG9iYWxsb2dpYy5jb20vdXNlcnMvcHJvZmlsZS9vbGVrc2FuZHIuYWRhbW92XCIsXG4gICAgXCJzdWJ0aXRsZVwiOiBcIlNlY3VyaXR5IFwiXG4gIH0sXG4gIHtcbiAgICBcInRpdGxlXCI6IFwiVml0YWxpeSBUaWxpbnNraXlcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUHJvamVjdCBNYW5hZ2VyLCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS81NDU3NC9wcm9maWxlL1ZpdGFsaXkuanBnPzE1MTI1MTExMjFcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvdml0YWxpeS50aWxpbnNraXlcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiRGV2T3BzXCJcbiAgfSxcbiAge1xuICAgIFwidGl0bGVcIjogXCJPbGVrc2FuZHJhIFNreWJpbmFcIixcbiAgICBcInBvc2l0aW9uXCI6IFwiQXNzb2NpYXRlIE1hbmFnZXIsIEVuZ2luZWVyaW5nXCIsXG4gICAgXCJhdmF0YXJcIjogXCJodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzM2MjYvcHJvZmlsZS81MjEwMS5qcGc/MTMxMjM3ODk4MFwiLFxuICAgIFwicHJvZmlsZUxpbmtcIjogXCJodHRwczovL2dsby5nbG9iYWxsb2dpYy5jb20vdXNlcnMvcHJvZmlsZS9PbGVrc2FuZHJhLlNreWJpbmFcIixcbiAgICBcInN1YnRpdGxlXCI6IFwiQWdpbGVcIlxuICB9LFxuICB7XG4gICAgXCJ0aXRsZVwiOiBcIkRteXRybyBEdm9ybmljaGVua29cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiU2VuaW9yIERlc2lnbmVyLCBVc2FiaWxpdHkgJiBEZXNpZ25cIixcbiAgICBcImF2YXRhclwiOiBcImh0dHBzOi8vZ2xvLWFzc2V0cy5nbG9iYWxsb2dpYy5jb20vc3lzdGVtL2RhdGEvNjAyOTgvcHJvZmlsZS8zNzk3ODhfMjY5OTc2MTAwOTQ2MV8xMzc4OTM1MjEwX24uanBnPzE1MjU5NDgzOTNcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvZG15dHJvLmR2b3JuaWNoZW5rb1wiLFxuICAgIFwic3VidGl0bGVcIjogXCJVWC9VSVwiXG4gIH0sXG4gIHtcbiAgICBcInRpdGxlXCI6IFwiT2xla3NhbmRyIEZ1cmR5bG9cIixcbiAgICBcInBvc2l0aW9uXCI6IFwiUHJvamVjdCBNYW5hZ2VyLCBFbmdpbmVlcmluZ1wiLFxuICAgIFwiYXZhdGFyXCI6IFwiaHR0cHM6Ly9nbG8tYXNzZXRzLmdsb2JhbGxvZ2ljLmNvbS9zeXN0ZW0vZGF0YS8zNDAxL3Byb2ZpbGUvNTE3ODIuanBnPzEzMTIzNzg4MTdcIixcbiAgICBcInByb2ZpbGVMaW5rXCI6IFwiaHR0cHM6Ly9nbG8uZ2xvYmFsbG9naWMuY29tL3VzZXJzL3Byb2ZpbGUvb2xla3NhbmRyLmZ1cmR5bG9cIixcbiAgICBcInN1YnRpdGxlXCI6IFwiTW9iaWxpdHkgXCJcbiAgfVxuXTtcblxuY2xhc3MgRnVuY3Rpb25hbERpdmlzaW9uc0hlYWRzIHtcbiAgY29uc3RydWN0b3IoZGl2aXNpb25zSW5mbykge1xuICAgIHRoaXMuZGl2aXNpb25zSW5mbyA9IGRpdmlzaW9uc0luZm87XG4gICAgdGhpcy5zZXREYXRhVGlsZSgpO1xuICB9XG5cbiAgc2V0RGF0YVRpbGUoKSB7XG4gICAgaGVhZHNPZkRpdmlzaW9ucy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICBjb25zdCB0aWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICAgIHRpbGUuY2xhc3NOYW1lID0gJ2RpdmlzaW9uc19oZWFkcyB0aWxlLXdyYXBwZXInO1xuICAgICAgdGlsZS5pbm5lckhUTUwgPSBgXG4gICAgICAgICA8YSBocmVmPVwiJHtpdGVtLnByb2ZpbGVMaW5rfVwiIHRhcmdldD1cIl9ibGFua1wiIGNsYXNzPVwidGlsZSB0aWxlLS1zbWFsbCB0aWxlLS1mcmFtZWQgZGl2aXNpb24taGVhZC10aWxlXCI+XG4gICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aWxlLWltYWdlLWhvbGRlciBkaXZpc2lvbi1oZWFkX19pbWFnZS1ob2xkZXJcIj5cbiAgICAgICAgICAgICAgICAke3RoaXMub25DaGVja0ltYWdlKGl0ZW0pfVxuICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aWxlLW5hbWVcIj4ke2l0ZW0udGl0bGV9PC9wPlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aWxlLWRlc2NcIj4ke2l0ZW0uc3VidGl0bGV9PC9wPlxuICAgICAgICAgPC9hPmA7XG5cbiAgICAgIHRoaXMuZGl2aXNpb25zSW5mby5TRUNUSU9OX0NPTlRBSU5FUlswXS5hcHBlbmRDaGlsZCh0aWxlKTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uQ2hlY2tJbWFnZShpdGVtKSB7XG4gICAgaWYgKGl0ZW0uYXZhdGFyKSB7XG4gICAgICByZXR1cm4gYDxpbWcgc3JjPSR7aXRlbS5hdmF0YXJ9IGFsdD0ke2l0ZW0ubmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYDxpbWcgc3JjPSdodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzE1NTUvb3JhbmdlX3RoZW1lL3Byb2ZpbGUvYXZhdGFyLmpwZz8xMzEyMzc2MjcwJyBhbHQ9JHtpdGVtLm5hbWV9PmBcbiAgICB9XG5cbiAgfVxufVxuXG5uZXcgRnVuY3Rpb25hbERpdmlzaW9uc0hlYWRzKHtcbiAgU0VDVElPTl9DT05UQUlORVI6IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2RpdmlzaW9uLWhlYWRzJyksXG59KTtcblxuY2xhc3MgQ29tbW9uQ2xhc3Mge1xuICBjb25zdHJ1Y3RvcihpbmZvKSB7XG4gICAgdGhpcy5pbmZvID0gaW5mbztcbiAgICB0aGlzLnNldERhdGFUaWxlKCk7XG4gIH1cblxuICBzZXREYXRhVGlsZSgpIHtcbiAgICB0aGlzLmluZm8uZGF0YS5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICBjb25zdCB0aWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICAgIHRpbGUuY2xhc3NOYW1lID0gdGhpcy5pbmZvLmNsYXNzRWw7XG4gICAgICB0aWxlLmlubmVySFRNTCA9IGBcbiAgICAgICAgPGEgaHJlZj1cIiR7aXRlbS5wcm9maWxlTGlua31cIiB0YXJnZXQ9XCJfYmxhbmtcIiBjbGFzcz1cInRpbGUgdGlsZS0tYmlnXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRpbGUtaW1hZ2UtaG9sZGVyIHVuaXRlZC10aWxlcy1zZWN0aW9uX19pbWFnZS1ob2xkZXJcIj5cbiAgICAgICAgICAgICAke0NvbW1vbkNsYXNzLm9uQ2hlY2tJbWFnZShpdGVtKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8cCBjbGFzcz1cInRpbGUtZGVzY1wiPiR7aXRlbS5zdWJ0aXRsZX08L3A+XG4gICAgICAgICAgPHAgY2xhc3M9XCJ0aWxlLW5hbWVcIj4ke2l0ZW0udGl0bGV9PC9wPlxuICAgICAgICA8L2E+YDtcblxuICAgICAgdGhpcy5pbmZvLlNFQ1RJT05fQ09OVEFJTkVSWzBdLmFwcGVuZENoaWxkKHRpbGUpO1xuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIG9uQ2hlY2tJbWFnZShpdGVtKSB7XG4gICAgaWYgKGl0ZW0uYXZhdGFyKSB7XG4gICAgICByZXR1cm4gYDxpbWcgc3JjPSR7aXRlbS5hdmF0YXJ9IGFsdD0ke2l0ZW0ubmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYDxpbWcgc3JjPSdodHRwczovL2dsby1hc3NldHMuZ2xvYmFsbG9naWMuY29tL3N5c3RlbS9kYXRhLzE1NTUvb3JhbmdlX3RoZW1lL3Byb2ZpbGUvYXZhdGFyLmpwZz8xMzEyMzc2MjcwJyBhbHQ9JHtpdGVtLm5hbWV9PmBcbiAgICB9XG4gIH1cbn1cblxubmV3IENvbW1vbkNsYXNzKHtcbiAgU0VDVElPTl9DT05UQUlORVI6IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3N0cmF0ZWdpYy1mb2N1cy1hcmVhX190aWxlcy1ob2xkZXInKSxcbiAgY2xhc3NFbDogJ3RpbGUtd3JhcHBlcicsXG4gIGRhdGE6IGZvY3VzQXJlYXNQZXJzb25zXG59KTtcblxubmV3IENvbW1vbkNsYXNzKHtcbiAgU0VDVElPTl9DT05UQUlORVI6IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RlY2hub2xvZ3ktbGVhZHNfX3RpbGVzLWhvbGRlcicpLFxuICBjbGFzc0VsOiAndGlsZS13cmFwcGVyJyxcbiAgZGF0YTogdGVjaG5vbG9neUxlYWRzXG59KTtcblxubmV3IENvbW1vbkNsYXNzKHtcbiAgU0VDVElPTl9DT05UQUlORVI6IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3ByYWN0aWNlcy1sZWFkc19fdGlsZXMtaG9sZGVyJyksXG4gIGNsYXNzRWw6ICd0aWxlLXdyYXBwZXInLFxuICBkYXRhOiBwcmFjdGljZXNMZWFkc1xufSk7XG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==