!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,o){!function(e,t){if(!k[e]||!b[e])return;for(var o in b[e]=!1,t)Object.prototype.hasOwnProperty.call(t,o)&&(m[o]=t[o]);0==--h&&0===y&&E()}(e,o),t&&t(e,o)};var o,i=!0,n="b30cb2663f4070e652cd",a=1e4,l={},s=[],r=[];function c(e){var t=T[e];if(!t)return _;var i=function(i){return t.hot.active?(T[i]?-1===T[i].parents.indexOf(e)&&T[i].parents.push(e):(s=[e],o=i),-1===t.children.indexOf(i)&&t.children.push(i)):(console.warn("[HMR] unexpected require("+i+") from disposed module "+e),s=[]),_(i)},n=function(e){return{configurable:!0,enumerable:!0,get:function(){return _[e]},set:function(t){_[e]=t}}};for(var a in _)Object.prototype.hasOwnProperty.call(_,a)&&"e"!==a&&"t"!==a&&Object.defineProperty(i,a,n(a));return i.e=function(e){return"ready"===p&&g("prepare"),y++,_.e(e).then(t,function(e){throw t(),e});function t(){y--,"prepare"===p&&(v[e]||I(e),0===y&&0===h&&E())}},i.t=function(e,t){return 1&t&&(e=i(e)),_.t(e,-2&t)},i}var d=[],p="idle";function g(e){p=e;for(var t=0;t<d.length;t++)d[t].call(null,e)}var u,m,f,h=0,y=0,v={},b={},k={};function O(e){return+e+""===e?+e:e}function M(e){if("idle"!==p)throw new Error("check() is only allowed in idle status");return i=e,g("check"),(t=a,t=t||1e4,new Promise(function(e,o){if("undefined"==typeof XMLHttpRequest)return o(new Error("No browser support"));try{var i=new XMLHttpRequest,a=_.p+""+n+".hot-update.json";i.open("GET",a,!0),i.timeout=t,i.send(null)}catch(e){return o(e)}i.onreadystatechange=function(){if(4===i.readyState)if(0===i.status)o(new Error("Manifest request to "+a+" timed out."));else if(404===i.status)e();else if(200!==i.status&&304!==i.status)o(new Error("Manifest request to "+a+" failed."));else{try{var t=JSON.parse(i.responseText)}catch(e){return void o(e)}e(t)}}})).then(function(e){if(!e)return g("idle"),null;b={},v={},k=e.c,f=e.h,g("prepare");var t=new Promise(function(e,t){u={resolve:e,reject:t}});m={};return I(0),"prepare"===p&&0===y&&0===h&&E(),t});var t}function I(e){k[e]?(b[e]=!0,h++,function(e){var t=document.getElementsByTagName("head")[0],o=document.createElement("script");o.charset="utf-8",o.src=_.p+""+e+"."+n+".hot-update.js",t.appendChild(o)}(e)):v[e]=!0}function E(){g("ready");var e=u;if(u=null,e)if(i)Promise.resolve().then(function(){return L(i)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var o in m)Object.prototype.hasOwnProperty.call(m,o)&&t.push(O(o));e.resolve(t)}}function L(t){if("ready"!==p)throw new Error("apply() is only allowed in ready status");var o,i,a,r,c;function d(e){for(var t=[e],o={},i=t.slice().map(function(e){return{chain:[e],id:e}});i.length>0;){var n=i.pop(),a=n.id,l=n.chain;if((r=T[a])&&!r.hot._selfAccepted){if(r.hot._selfDeclined)return{type:"self-declined",chain:l,moduleId:a};if(r.hot._main)return{type:"unaccepted",chain:l,moduleId:a};for(var s=0;s<r.parents.length;s++){var c=r.parents[s],d=T[c];if(d){if(d.hot._declinedDependencies[a])return{type:"declined",chain:l.concat([c]),moduleId:a,parentId:c};-1===t.indexOf(c)&&(d.hot._acceptedDependencies[a]?(o[c]||(o[c]=[]),u(o[c],[a])):(delete o[c],t.push(c),i.push({chain:l.concat([c]),id:c})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:o}}function u(e,t){for(var o=0;o<t.length;o++){var i=t[o];-1===e.indexOf(i)&&e.push(i)}}t=t||{};var h={},y=[],v={},b=function(){console.warn("[HMR] unexpected require("+I.moduleId+") to disposed module")};for(var M in m)if(Object.prototype.hasOwnProperty.call(m,M)){var I;c=O(M);var E=!1,L=!1,S=!1,A="";switch((I=m[M]?d(c):{type:"disposed",moduleId:M}).chain&&(A="\nUpdate propagation: "+I.chain.join(" -> ")),I.type){case"self-declined":t.onDeclined&&t.onDeclined(I),t.ignoreDeclined||(E=new Error("Aborted because of self decline: "+I.moduleId+A));break;case"declined":t.onDeclined&&t.onDeclined(I),t.ignoreDeclined||(E=new Error("Aborted because of declined dependency: "+I.moduleId+" in "+I.parentId+A));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(I),t.ignoreUnaccepted||(E=new Error("Aborted because "+c+" is not accepted"+A));break;case"accepted":t.onAccepted&&t.onAccepted(I),L=!0;break;case"disposed":t.onDisposed&&t.onDisposed(I),S=!0;break;default:throw new Error("Unexception type "+I.type)}if(E)return g("abort"),Promise.reject(E);if(L)for(c in v[c]=m[c],u(y,I.outdatedModules),I.outdatedDependencies)Object.prototype.hasOwnProperty.call(I.outdatedDependencies,c)&&(h[c]||(h[c]=[]),u(h[c],I.outdatedDependencies[c]));S&&(u(y,[I.moduleId]),v[c]=b)}var D,j=[];for(i=0;i<y.length;i++)c=y[i],T[c]&&T[c].hot._selfAccepted&&j.push({module:c,errorHandler:T[c].hot._selfAccepted});g("dispose"),Object.keys(k).forEach(function(e){!1===k[e]&&function(e){delete installedChunks[e]}(e)});for(var C,N,w=y.slice();w.length>0;)if(c=w.pop(),r=T[c]){var x={},H=r.hot._disposeHandlers;for(a=0;a<H.length;a++)(o=H[a])(x);for(l[c]=x,r.hot.active=!1,delete T[c],delete h[c],a=0;a<r.children.length;a++){var R=T[r.children[a]];R&&((D=R.parents.indexOf(c))>=0&&R.parents.splice(D,1))}}for(c in h)if(Object.prototype.hasOwnProperty.call(h,c)&&(r=T[c]))for(N=h[c],a=0;a<N.length;a++)C=N[a],(D=r.children.indexOf(C))>=0&&r.children.splice(D,1);for(c in g("apply"),n=f,v)Object.prototype.hasOwnProperty.call(v,c)&&(e[c]=v[c]);var z=null;for(c in h)if(Object.prototype.hasOwnProperty.call(h,c)&&(r=T[c])){N=h[c];var P=[];for(i=0;i<N.length;i++)if(C=N[i],o=r.hot._acceptedDependencies[C]){if(-1!==P.indexOf(o))continue;P.push(o)}for(i=0;i<P.length;i++){o=P[i];try{o(N)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:c,dependencyId:N[i],error:e}),t.ignoreErrored||z||(z=e)}}}for(i=0;i<j.length;i++){var B=j[i];c=B.module,s=[c];try{_(c)}catch(e){if("function"==typeof B.errorHandler)try{B.errorHandler(e)}catch(o){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:c,error:o,originalError:e}),t.ignoreErrored||z||(z=o),z||(z=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:c,error:e}),t.ignoreErrored||z||(z=e)}}return z?(g("fail"),Promise.reject(z)):(g("idle"),new Promise(function(e){e(y)}))}var T={};function _(t){if(T[t])return T[t].exports;var i=T[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:o!==e,active:!0,accept:function(e,o){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var i=0;i<e.length;i++)t._acceptedDependencies[e[i]]=o||function(){};else t._acceptedDependencies[e]=o||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var o=0;o<e.length;o++)t._declinedDependencies[e[o]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var o=t._disposeHandlers.indexOf(e);o>=0&&t._disposeHandlers.splice(o,1)},check:M,apply:L,status:function(e){if(!e)return p;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var t=d.indexOf(e);t>=0&&d.splice(t,1)},data:l[e]};return o=void 0,t}(t),parents:(r=s,s=[],r),children:[]};return e[t].call(i.exports,i,i.exports,c(t)),i.l=!0,i.exports}_.m=e,_.c=T,_.d=function(e,t,o){_.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},_.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},_.t=function(e,t){if(1&t&&(e=_(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(_.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)_.d(o,i,function(t){return e[t]}.bind(null,i));return o},_.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return _.d(t,"a",t),t},_.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},_.p="/build/",_.h=function(){return n},c(0)(_.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t,o){"use strict";o.r(t),o.d(t,"chart_config",function(){return a});var i,n,a=[{container:"#collapsable-example",animateOnInit:!0,callback:{onToggleCollapseFinished:function(e){}},node:{collapsable:!0},levelSeparation:30,siblingSeparation:10,subTeeSeparation:15,nodeAlign:"LEFT",connectors:{type:"step",style:{stroke:"grey","stroke-width":4}},animation:{nodeAnimation:"linear ",nodeSpeed:500,connectorsAnimation:"linear",connectorsSpeed:100}},i={image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"Director",projects:[{name:"Hilti",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"}},{parent:i,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"Manager",projects:[{name:"Medavant",url:"#"},{name:"Some else",url:"#"}]},text:{name:"Iulia Izonina",nodeAlign:"BOTTOM"}},{parent:i,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[{name:"Sofos",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Igor Rudko",nodeAlign:"BOTTOM"},stackChildren:!0},n={parent:i,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[{name:"Sofos",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"},stackChildren:!0},{parent:n,image:"./src/assets/im age/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"},stackChildren:!0}];a.map(function(e,t){return e.HTMLid=t})},function(e,t,o){"use strict";o.r(t);o(3);function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){for(var o=0;o<t.length;o++){var i=t[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function a(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}var l=[{name:"Nataliya Siromakha",par:"root",children:[],image:"https://glo-assets.globallogic.com/system/data/55495/profile/NS.jpg?1514899516",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,EngineeringDirector,EngineeringDirector,Engineering",profileLink:"https://glo.globallogic.com/users/profile/nataliya.siromakha",projects:"MTC WFA TestSOP, Sophos"},text:{name:"Nataliya Siromakha"}},{name:"Yevgenii Kolometskyi",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/3549/profile/51725.jpg?1312378925",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Senior Manager,Engineering",projects:"LeCroy, Sophos"},text:{name:"Yevgenii Kolometskyi",nodeAlign:"BOTTOM"}},{name:"Igor Rudko",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/31317/profile/Igor_Rudko_(1).jpg?1450094171",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"LeCroy, Sophos"},text:{name:"Igor Rudko",nodeAlign:"BOTTOM"}},{name:"Denys Bratchuk",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/70612/profile/denys-smile.jpg?1542817746",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"ABC-Expense report solution"},text:{name:"Denys Bratchuk",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[]},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[{name:"Aero Development",url:"#"},{name:" Rimage",url:"#"}]},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[{name:"Aero Development",url:"#"},{name:" Rimage",url:"#"}]},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Aero Development"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}}],s=(document.getElementsByTagName("svg"),document.querySelector("#collapsable-example")),r=document.querySelector(".close-btn"),c=(document.querySelector(".container"),document.querySelector(".modal-overlay"));var d={chart:{container:"#collapsable-example",animateOnInit:!0,callback:{onToggleCollapseFinished:function(e){}},node:{collapsable:!0},levelSeparation:30,siblingSeparation:30,subTeeSeparation:30,nodeAlign:"TOP",connectors:{type:"step",style:{stroke:"#72849a","stroke-width":2}},animation:{nodeAnimation:"linear ",nodeSpeed:500,connectorsAnimation:"linear",connectorsSpeed:100}},nodeStructure:function(){l.map(function(e,t){return e.HTMLid=t+1});for(var e=[],t=0;t<l.length;t++){for(var o=l[t],i=t;i<l.length;i++){var n=l[i];o.name===n.par&&(o.children.push(n),p(n))}e.push(o)}return e.map(function(e){e.children.length||(e.collapsed=!1)}),e[0]}()};function p(e){e.children.length}(g=0,function(){return g+=.1})();var g,u=new(function(){function e(t){i(this,e),this.modalInfo=t,this.addCancelBtnEventListener()}return a(e,[{key:"addCancelBtnEventListener",value:function(){var e=this;this.modalInfo.MODAL_CANCEL_BTN.addEventListener("click",function(){e.closeModal()})}},{key:"onPersonTileClick",value:function(e,t){this.openModal(),this.updateModalContent(e),this.setProfileLinkToModalBtn(e)}},{key:"openModal",value:function(){console.log(JSON.parse(localStorage.some)),this.modalInfo.MODAL_HTML[0].classList.add("additional-info-modal--open"),this.modalInfo.MODAL_OVERLAY[0].classList.add("modal-overlay--open")}},{key:"updateModalContent",value:function(e){this.modalInfo.MODAL_INFO_AVATAR[0].innerHTML="<img src=".concat(e.image," alt=").concat(e.text.name,">"),this.modalInfo.MODAL_INFO_NAME[0].innerHTML=e.text.name,this.modalInfo.MODAL_INFO_POST[0].innerHTML=e.additionalInfo.post,this.modalInfo.MODAL_INFO_PROJECTS[0].innerHTML=e.additionalInfo.projects}},{key:"closeModal",value:function(){this.modalInfo.MODAL_HTML[0].classList.remove("additional-info-modal--open"),this.modalInfo.MODAL_OVERLAY[0].classList.remove("modal-overlay--open")}},{key:"setProfileLinkToModalBtn",value:function(e){this.modalInfo.MODAL_VIEW_PROFILE[0].href=e.additionalInfo.profileLink}}]),e}())({MODAL_HTML:document.getElementsByClassName("additional-info-modal"),MODAL_INFO_AVATAR:document.getElementsByClassName("image-holder"),MODAL_INFO_NAME:document.getElementsByClassName("person-name"),MODAL_INFO_POST:document.getElementsByClassName("person-post"),MODAL_INFO_PROJECTS:document.getElementsByClassName("person-projects"),MODAL_OVERLAY:document.getElementsByClassName("modal-overlay"),MODAL_CANCEL_BTN:document.querySelector(".modal-cancel-btn"),MODAL_VIEW_PROFILE:document.getElementsByClassName("modal-link-btn")});new(function(){function e(t){i(this,e),this.controls=t,this.addControlEventListener(),this.fullScreenMode=!1,this.addDocumentEventListener()}return a(e,[{key:"addControlEventListener",value:function(){var e=this;this.controls.ZOOM_CONTROLS.addEventListener("click",function(t){e.onControlClick(t.target)})}},{key:"addDocumentEventListener",value:function(){document.addEventListener("fullscreenchange",this.onToggleScreenMode),document.addEventListener("webkitfullscreenchange",this.onToggleScreenMode),document.addEventListener("mozfullscreenchange",this.onToggleScreenMode),document.addEventListener("MSFullscreenChange",this.onToggleScreenMode)}},{key:"onControlClick",value:function(e){-1!==Array.from(e.classList).indexOf("decrease-zoom")&&this.controls.ZOOM_VALUE>5&&(this.decreaseZoom(),this.controls.ZOOM_VALUE<=5?this.disableControl("decrease-zoom"):this.enableControl("increase-zoom")),-1!==Array.from(e.classList).indexOf("increase-zoom")&&this.controls.ZOOM_VALUE<=15&&(this.increaseZoom(),this.controls.ZOOM_VALUE>=15?this.disableControl("increase-zoom"):this.enableControl("decrease-zoom")),-1!==Array.from(e.classList).indexOf("fullscreen-mode")&&this.openFullScreen()}},{key:"increaseZoom",value:function(){s.style.transform="scale(".concat(++this.controls.ZOOM_VALUE/10,")")}},{key:"decreaseZoom",value:function(){s.style.transform="scale(".concat(--this.controls.ZOOM_VALUE/10,")")}},{key:"disableControl",value:function(e){switch(e){case"decrease-zoom":this.controls.DECREASE_CONTROL.classList.add("zoom-control--disabled");break;case"increase-zoom":this.controls.INCREASE_CONTROL.classList.add("zoom-control--disabled")}}},{key:"enableControl",value:function(e){switch(e){case"decrease-zoom":this.controls.DECREASE_CONTROL.classList.remove("zoom-control--disabled");break;case"increase-zoom":this.controls.INCREASE_CONTROL.classList.remove("zoom-control--disabled")}}},{key:"openFullScreen",value:function(){var e=document.querySelector(".container");e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullScreen?(e.webkitRequestFullScreen(),console.log(e.webkitRequestFullScreen)):e.msRequestFullscreen&&e.msRequestFullscreen(),this.fullScreenMode||(document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.msExitFullscreen&&document.msExitFullscreen())}},{key:"onToggleScreenMode",value:function(){this.fullScreenMode=!this.fullScreenMode}}]),e}())({ZOOM_CONTROLS:document.querySelector(".zoom-controls"),DECREASE_CONTROL:document.querySelector(".decrease-zoom"),INCREASE_CONTROL:document.querySelector(".increase-zoom"),ZOOM_VALUE:10});s.addEventListener("click",function(e){-1!==Array.from(e.target.classList).indexOf("node")&&function(e){var t=l.find(function(t){return t.HTMLid==e.target.id});u.onPersonTileClick(t,e)}(e)}),r.addEventListener("click",function(e){u.closeModal(e)}),c.addEventListener("click",function(e){u.closeModal(e)}),new Treant(d);var m=[{title:"Inna Dukhota",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",subtitle:"Talent Aquisition Group ",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota"},{title:"Anna Veselova",avatar:"https://glo-assets.globallogic.com/system/data/65815/profile/IMG_7129.JPG?1534766416",subtitle:"Resourcing ",profileLink:"https://glo.globallogic.com/users/profile/anna.veselova"},{title:"Ellina Medynska ",avatar:"https://glo-assets.globallogic.com/system/data/48745/profile/IMG_9350.jpg?1498201664",subtitle:"PR & Marketing",profileLink:"https://glo.globallogic.com/users/profile/ellina.medynska"},{title:"Sergii Shmatko",avatar:"https://glo-assets.globallogic.com/system/data/60956/profile/Serhii_Shmatko.jpg?1526999529",subtitle:"IT Infrastructure",profileLink:"https://glo.globallogic.com/users/profile/serhii.shmatko"},{title:"Vladyslav Domin",avatar:"https://glo-assets.globallogic.com/system/data/51449/profile/Vladyslav_Domin.jpg?1504697687",subtitle:"Employee Services ",profileLink:"https://glo.globallogic.com/users/profile/vladyslav.domin"},{title:"Nataliya Osipenko",avatar:"https://glo-assets.globallogic.com/system/data/41292/profile/IMG_9556.jpg?1478695541",subtitle:"Process Management (PMG)",profileLink:"https://glo.globallogic.com/users/profile/nataliia.osypenko"},{title:"TBD",avatar:"",subtitle:"Business Partner ",profileLink:""}];new(function(){function e(t){i(this,e),this.divisionsInfo=t,this.setDataTile()}return a(e,[{key:"setDataTile",value:function(){var e=this;m.forEach(function(t){var o=document.createElement("div");o.className="divisions_heads tile-wrapper",o.innerHTML='\n         <a href="'.concat(t.profileLink,'" target="_blank" class="tile tile--small tile--framed division-head-tile">\n           <div class="tile-image-holder division-head__image-holder">\n                ').concat(e.onCheckImage(t),'\n             </div>\n            <p class="tile-name">').concat(t.title,'</p>\n            <p class="tile-desc">').concat(t.subtitle,"</p>\n         </a>"),e.divisionsInfo.SECTION_CONTAINER[0].appendChild(o)})}},{key:"onCheckImage",value:function(e){return e.avatar?"<img src=".concat(e.avatar," alt=").concat(e.name,">"):"<img src='https://glo-assets.globallogic.com/system/data/1555/orange_theme/profile/avatar.jpg?1312376270' alt=".concat(e.name,">")}}]),e}())({SECTION_CONTAINER:document.getElementsByClassName("division-heads")});var f=function(){function e(t){i(this,e),this.info=t,this.setDataTile()}return a(e,[{key:"setDataTile",value:function(){var t=this;this.info.data.forEach(function(o){var i=document.createElement("div");i.className=t.info.classEl,i.innerHTML='\n        <a href="'.concat(o.profileLink,'" target="_blank" class="tile tile--big">\n          <div class="tile-image-holder united-tiles-section__image-holder">\n             ').concat(e.onCheckImage(o),'\n          </div>\n          <p class="tile-desc">').concat(o.subtitle,'</p>\n          <p class="tile-name">').concat(o.title,"</p>\n        </a>"),t.info.SECTION_CONTAINER[0].appendChild(i)})}}],[{key:"onCheckImage",value:function(e){return e.avatar?"<img src=".concat(e.avatar," alt=").concat(e.name,">"):"<img src='https://glo-assets.globallogic.com/system/data/1555/orange_theme/profile/avatar.jpg?1312376270' alt=".concat(e.name,">")}}]),e}();new f({SECTION_CONTAINER:document.getElementsByClassName("strategic-focus-area__tiles-holder"),classEl:"tile-wrapper",data:[{title:"Iuliia Izonina",position:"Director, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",profileLink:"https://glo.globallogic.com/users/profile/iuliia.izonina",subtitle:"Center Scalability "},{title:"Oleksandr Lanin",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70991/profile/alexlain-gl-2018.jpg?1543590636",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.lanin",subtitle:"Business Development "},{title:"Nataliya Siromakha",position:"Kharkiv Location Head",avatar:"https://glo-assets.globallogic.com/system/data/55495/profile/NS.jpg?1514899516",profileLink:"https://glo.globallogic.com/users/profile/nataliya.siromakha",subtitle:"Practices Development "},{title:"Ellina Medynska ",position:"Senior Specialist, Marketing",avatar:"https://glo-assets.globallogic.com/system/data/48745/profile/IMG_9350.jpg?1498201664",profileLink:"https://glo.globallogic.com/users/profile/ellina.medynska",subtitle:"PR & Marketing"},{title:"Inna Dukhota",position:"Senior Manager, People Development ",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota",subtitle:"TAG Efficiency"},{title:"axcacs",position:"Senior Manager, People Development ",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota",subtitle:"TAG Efficiency"}]}),new f({SECTION_CONTAINER:document.getElementsByClassName("technology-leads__tiles-holder"),classEl:"tile-wrapper",data:[{title:"Oleksandr Lanin",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70991/profile/alexlain-gl-2018.jpg?1543590636",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.lanin",subtitle:".NET "},{title:"Olena Yelisheva",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/12765/profile/IMG_0684_21.jpg?1364295028",profileLink:"https://glo.globallogic.com/users/profile/olena.ielysheva",subtitle:"QA Automation "},{title:"Oleksandr Rybtsov",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70168/profile/Picture.png?1542113014",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.rybtsov",subtitle:"Java "},{title:"Denys Bratchuk",position:"Director, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70612/profile/denys-smile.jpg?1542817746",profileLink:"https://glo.globallogic.com/users/profile/denys.bratchuk",subtitle:"JavaScript "},{title:"Oleksandr Svideniuk",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/55556/profile/ava_2017.jpg?1514971986",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.svideniuk",subtitle:"C++"}]}),new f({SECTION_CONTAINER:document.getElementsByClassName("practices-leads__tiles-holder"),classEl:"tile-wrapper",data:[{title:"Andrii Gnennyi",position:"Principal, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/40620/profile/AGN_Square.jpg?1477057620",profileLink:"https://glo.globallogic.com/users/profile/andriy.gnennyy",subtitle:"Cloud"},{title:"Andrii Antilikatorov",position:"Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/16714/profile/Antilikatorov.png?1392109625",profileLink:"https://glo.globallogic.com/users/profile/Andrii.Antilikatorov",subtitle:"Machine Learning/AI"},{title:"Igor Manzhos",position:"Senior Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/67610/profile/viber_image.jpg?1537615575",profileLink:"https://glo.globallogic.com/users/profile/igor.manzhos",subtitle:"Machine Learning/AI"},{title:"Yevhen Napriaglo",position:"Senior Solution Architect, Technology",avatar:"https://glo-assets.globallogic.com/system/data/56844/profile/1.png?1517996955",profileLink:"https://glo.globallogic.com/users/profile/yevhen.napriahlo",subtitle:"Architecture/Digital Transformation"},{title:"Yevgenii Kolometskyi",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3549/profile/51725.jpg?1312378925",profileLink:"https://glo.globallogic.com/users/profile/y.kolometskyi",subtitle:"Automotive/Embedded"},{title:"Oleksandr Adamov",position:"Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/57013/profile/me_no_ransomware.jpg?1518506599",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.adamov",subtitle:"Security "},{title:"Vitaliy Tilinskiy",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/54574/profile/Vitaliy.jpg?1512511121",profileLink:"https://glo.globallogic.com/users/profile/vitaliy.tilinskiy",subtitle:"DevOps"},{title:"Oleksandra Skybina",position:"Associate Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3626/profile/52101.jpg?1312378980",profileLink:"https://glo.globallogic.com/users/profile/Oleksandra.Skybina",subtitle:"Agile"},{title:"Dmytro Dvornichenko",position:"Senior Designer, Usability & Design",avatar:"https://glo-assets.globallogic.com/system/data/60298/profile/379788_2699761009461_1378935210_n.jpg?1525948393",profileLink:"https://glo.globallogic.com/users/profile/dmytro.dvornichenko",subtitle:"UX/UI"},{title:"Oleksandr Furdylo",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3401/profile/51782.jpg?1312378817",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.furdylo",subtitle:"Mobility "}]})},function(e,t,o){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,