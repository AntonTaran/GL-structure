!function(e){var o=window.webpackHotUpdate;window.webpackHotUpdate=function(e,t){!function(e,o){if(!O[e]||!k[e])return;for(var t in k[e]=!1,o)Object.prototype.hasOwnProperty.call(o,t)&&(u[t]=o[t]);0==--h&&0===v&&E()}(e,t),o&&o(e,t)};var t,n=!0,a="f59b156eb7b54230b06e",i=1e4,l={},r=[],s=[];function c(e){var o=T[e];if(!o)return _;var n=function(n){return o.hot.active?(T[n]?-1===T[n].parents.indexOf(e)&&T[n].parents.push(e):(r=[e],t=n),-1===o.children.indexOf(n)&&o.children.push(n)):(console.warn("[HMR] unexpected require("+n+") from disposed module "+e),r=[]),_(n)},a=function(e){return{configurable:!0,enumerable:!0,get:function(){return _[e]},set:function(o){_[e]=o}}};for(var i in _)Object.prototype.hasOwnProperty.call(_,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(n,i,a(i));return n.e=function(e){return"ready"===p&&g("prepare"),v++,_.e(e).then(o,function(e){throw o(),e});function o(){v--,"prepare"===p&&(y[e]||I(e),0===v&&0===h&&E())}},n.t=function(e,o){return 1&o&&(e=n(e)),_.t(e,-2&o)},n}var d=[],p="idle";function g(e){p=e;for(var o=0;o<d.length;o++)d[o].call(null,e)}var m,u,f,h=0,v=0,y={},k={},O={};function M(e){return+e+""===e?+e:e}function b(e){if("idle"!==p)throw new Error("check() is only allowed in idle status");return n=e,g("check"),(o=i,o=o||1e4,new Promise(function(e,t){if("undefined"==typeof XMLHttpRequest)return t(new Error("No browser support"));try{var n=new XMLHttpRequest,i=_.p+""+a+".hot-update.json";n.open("GET",i,!0),n.timeout=o,n.send(null)}catch(e){return t(e)}n.onreadystatechange=function(){if(4===n.readyState)if(0===n.status)t(new Error("Manifest request to "+i+" timed out."));else if(404===n.status)e();else if(200!==n.status&&304!==n.status)t(new Error("Manifest request to "+i+" failed."));else{try{var o=JSON.parse(n.responseText)}catch(e){return void t(e)}e(o)}}})).then(function(e){if(!e)return g("idle"),null;k={},y={},O=e.c,f=e.h,g("prepare");var o=new Promise(function(e,o){m={resolve:e,reject:o}});u={};return I(0),"prepare"===p&&0===v&&0===h&&E(),o});var o}function I(e){O[e]?(k[e]=!0,h++,function(e){var o=document.getElementsByTagName("head")[0],t=document.createElement("script");t.charset="utf-8",t.src=_.p+""+e+"."+a+".hot-update.js",o.appendChild(t)}(e)):y[e]=!0}function E(){g("ready");var e=m;if(m=null,e)if(n)Promise.resolve().then(function(){return L(n)}).then(function(o){e.resolve(o)},function(o){e.reject(o)});else{var o=[];for(var t in u)Object.prototype.hasOwnProperty.call(u,t)&&o.push(M(t));e.resolve(o)}}function L(o){if("ready"!==p)throw new Error("apply() is only allowed in ready status");var t,n,i,s,c;function d(e){for(var o=[e],t={},n=o.slice().map(function(e){return{chain:[e],id:e}});n.length>0;){var a=n.pop(),i=a.id,l=a.chain;if((s=T[i])&&!s.hot._selfAccepted){if(s.hot._selfDeclined)return{type:"self-declined",chain:l,moduleId:i};if(s.hot._main)return{type:"unaccepted",chain:l,moduleId:i};for(var r=0;r<s.parents.length;r++){var c=s.parents[r],d=T[c];if(d){if(d.hot._declinedDependencies[i])return{type:"declined",chain:l.concat([c]),moduleId:i,parentId:c};-1===o.indexOf(c)&&(d.hot._acceptedDependencies[i]?(t[c]||(t[c]=[]),m(t[c],[i])):(delete t[c],o.push(c),n.push({chain:l.concat([c]),id:c})))}}}}return{type:"accepted",moduleId:e,outdatedModules:o,outdatedDependencies:t}}function m(e,o){for(var t=0;t<o.length;t++){var n=o[t];-1===e.indexOf(n)&&e.push(n)}}o=o||{};var h={},v=[],y={},k=function(){console.warn("[HMR] unexpected require("+I.moduleId+") to disposed module")};for(var b in u)if(Object.prototype.hasOwnProperty.call(u,b)){var I;c=M(b);var E=!1,L=!1,A=!1,S="";switch((I=u[b]?d(c):{type:"disposed",moduleId:b}).chain&&(S="\nUpdate propagation: "+I.chain.join(" -> ")),I.type){case"self-declined":o.onDeclined&&o.onDeclined(I),o.ignoreDeclined||(E=new Error("Aborted because of self decline: "+I.moduleId+S));break;case"declined":o.onDeclined&&o.onDeclined(I),o.ignoreDeclined||(E=new Error("Aborted because of declined dependency: "+I.moduleId+" in "+I.parentId+S));break;case"unaccepted":o.onUnaccepted&&o.onUnaccepted(I),o.ignoreUnaccepted||(E=new Error("Aborted because "+c+" is not accepted"+S));break;case"accepted":o.onAccepted&&o.onAccepted(I),L=!0;break;case"disposed":o.onDisposed&&o.onDisposed(I),A=!0;break;default:throw new Error("Unexception type "+I.type)}if(E)return g("abort"),Promise.reject(E);if(L)for(c in y[c]=u[c],m(v,I.outdatedModules),I.outdatedDependencies)Object.prototype.hasOwnProperty.call(I.outdatedDependencies,c)&&(h[c]||(h[c]=[]),m(h[c],I.outdatedDependencies[c]));A&&(m(v,[I.moduleId]),y[c]=k)}var D,j=[];for(n=0;n<v.length;n++)c=v[n],T[c]&&T[c].hot._selfAccepted&&j.push({module:c,errorHandler:T[c].hot._selfAccepted});g("dispose"),Object.keys(O).forEach(function(e){!1===O[e]&&function(e){delete installedChunks[e]}(e)});for(var C,N,w=v.slice();w.length>0;)if(c=w.pop(),s=T[c]){var x={},H=s.hot._disposeHandlers;for(i=0;i<H.length;i++)(t=H[i])(x);for(l[c]=x,s.hot.active=!1,delete T[c],delete h[c],i=0;i<s.children.length;i++){var R=T[s.children[i]];R&&((D=R.parents.indexOf(c))>=0&&R.parents.splice(D,1))}}for(c in h)if(Object.prototype.hasOwnProperty.call(h,c)&&(s=T[c]))for(N=h[c],i=0;i<N.length;i++)C=N[i],(D=s.children.indexOf(C))>=0&&s.children.splice(D,1);for(c in g("apply"),a=f,y)Object.prototype.hasOwnProperty.call(y,c)&&(e[c]=y[c]);var z=null;for(c in h)if(Object.prototype.hasOwnProperty.call(h,c)&&(s=T[c])){N=h[c];var B=[];for(n=0;n<N.length;n++)if(C=N[n],t=s.hot._acceptedDependencies[C]){if(-1!==B.indexOf(t))continue;B.push(t)}for(n=0;n<B.length;n++){t=B[n];try{t(N)}catch(e){o.onErrored&&o.onErrored({type:"accept-errored",moduleId:c,dependencyId:N[n],error:e}),o.ignoreErrored||z||(z=e)}}}for(n=0;n<j.length;n++){var P=j[n];c=P.module,r=[c];try{_(c)}catch(e){if("function"==typeof P.errorHandler)try{P.errorHandler(e)}catch(t){o.onErrored&&o.onErrored({type:"self-accept-error-handler-errored",moduleId:c,error:t,originalError:e}),o.ignoreErrored||z||(z=t),z||(z=e)}else o.onErrored&&o.onErrored({type:"self-accept-errored",moduleId:c,error:e}),o.ignoreErrored||z||(z=e)}}return z?(g("fail"),Promise.reject(z)):(g("idle"),new Promise(function(e){e(v)}))}var T={};function _(o){if(T[o])return T[o].exports;var n=T[o]={i:o,l:!1,exports:{},hot:function(e){var o={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:t!==e,active:!0,accept:function(e,t){if(void 0===e)o._selfAccepted=!0;else if("function"==typeof e)o._selfAccepted=e;else if("object"==typeof e)for(var n=0;n<e.length;n++)o._acceptedDependencies[e[n]]=t||function(){};else o._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)o._selfDeclined=!0;else if("object"==typeof e)for(var t=0;t<e.length;t++)o._declinedDependencies[e[t]]=!0;else o._declinedDependencies[e]=!0},dispose:function(e){o._disposeHandlers.push(e)},addDisposeHandler:function(e){o._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=o._disposeHandlers.indexOf(e);t>=0&&o._disposeHandlers.splice(t,1)},check:b,apply:L,status:function(e){if(!e)return p;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var o=d.indexOf(e);o>=0&&d.splice(o,1)},data:l[e]};return t=void 0,o}(o),parents:(s=r,r=[],s),children:[]};return e[o].call(n.exports,n,n.exports,c(o)),n.l=!0,n.exports}_.m=e,_.c=T,_.d=function(e,o,t){_.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},_.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},_.t=function(e,o){if(1&o&&(e=_(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(_.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var n in e)_.d(t,n,function(o){return e[o]}.bind(null,n));return t},_.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return _.d(o,"a",o),o},_.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},_.p="/build/",_.h=function(){return a},c(0)(_.s=0)}([function(e,o,t){t(1),e.exports=t(2)},function(e,o,t){"use strict";t.r(o),t.d(o,"chart_config",function(){return i});var n,a,i=[{container:"#collapsable-example",animateOnInit:!0,callback:{onToggleCollapseFinished:function(e){}},node:{collapsable:!0},levelSeparation:30,siblingSeparation:10,subTeeSeparation:15,nodeAlign:"LEFT",connectors:{type:"step",style:{stroke:"grey","stroke-width":4}},animation:{nodeAnimation:"linear ",nodeSpeed:500,connectorsAnimation:"linear",connectorsSpeed:100}},n={image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"Director",projects:[{name:"Hilti",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"}},{parent:n,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"Manager",projects:[{name:"Medavant",url:"#"},{name:"Some else",url:"#"}]},text:{name:"Iulia Izonina",nodeAlign:"BOTTOM"}},{parent:n,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[{name:"Sofos",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Igor Rudko",nodeAlign:"BOTTOM"},stackChildren:!0},a={parent:n,image:"./src/assets/image/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[{name:"Sofos",url:"#"},{name:"Rimage",url:"#"}]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"},stackChildren:!0},{parent:a,image:"./src/assets/im age/Nataliya.jpeg",HTMLclass:"tile",additionalInfo:{post:"God",projects:[]},text:{name:"Nataliya Siromakha",nodeAlign:"BOTTOM"},stackChildren:!0}];i.map(function(e,o){return e.HTMLid=o})},function(e,o,t){"use strict";t.r(o);t(3);function n(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function a(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function i(e,o,t){return o&&a(e.prototype,o),t&&a(e,t),e}var l=[{name:"Nataliya Siromakha",par:"root",children:[],image:"https://glo-assets.globallogic.com/system/data/55495/profile/NS.jpg?1514899516",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,EngineeringDirector,EngineeringDirector,Engineering",profileLink:"https://glo.globallogic.com/users/profile/nataliya.siromakha",projects:"MTC WFA TestSOP, Sophos"},text:{name:"Nataliya Siromakha"}},{name:"Yevgenii Kolometskyi",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/3549/profile/51725.jpg?1312378925",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Senior Manager,Engineering",projects:"LeCroy, Sophos"},text:{name:"Yevgenii Kolometskyi",nodeAlign:"BOTTOM"}},{name:"Igor Rudko",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/31317/profile/Igor_Rudko_(1).jpg?1450094171",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"LeCroy, Sophos"},text:{name:"Igor Rudko",nodeAlign:"BOTTOM"}},{name:"Denys Bratchuk",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/70612/profile/denys-smile.jpg?1542817746",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"ABC-Expense report solution"},text:{name:"Denys Bratchuk",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[]},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov",nodeAlign:"BOTTOM"}},{name:"Viktor Matusov child",par:"Viktor Matusov",children:[],image:"https://glo-assets.globallogic.com/system/data/20679/profile/me_wedding0.jpg?1415116319",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Viktor Matusov child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina",par:"Nataliya Siromakha",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[{name:"Aero Development",url:"#"},{name:" Rimage",url:"#"}]},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:[{name:"Aero Development",url:"#"},{name:" Rimage",url:"#"}]},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Microsoft - Service Delivery"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}},{name:"Iuliia Izonina child",par:"Iuliia Izonina",children:[],image:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",HTMLclass:"tile tile--small tile--framed",collapsed:!0,additionalInfo:{post:"Director,Engineering",projects:"Aero Development"},text:{name:"Iuliia Izonina child",nodeAlign:"BOTTOM"}}],r=(document.getElementsByTagName("svg"),document.querySelector("#collapsable-example")),s=document.querySelector(".close-btn"),c=(document.querySelector(".container"),document.querySelector(".modal-overlay"));var d={chart:{container:"#collapsable-example",animateOnInit:!0,callback:{onToggleCollapseFinished:function(e){}},node:{collapsable:!0},levelSeparation:120,siblingSeparation:50,subTeeSeparation:50,nodeAlign:"CENTER",connectors:{type:"step",style:{stroke:"#72849a","stroke-width":2}},animation:{nodeAnimation:"linear ",nodeSpeed:500,connectorsAnimation:"linear",connectorsSpeed:100}},nodeStructure:function(){l.map(function(e,o){return e.HTMLid=o+1});for(var e=[],o=0;o<l.length;o++){for(var t=l[o],n=o;n<l.length;n++){var a=l[n];t.name===a.par&&(t.children.push(a),p(a))}e.push(t)}return e.map(function(e){e.children.length||(e.collapsed=!1)}),e[0]}()};function p(e){e.children.length}(g=0,function(){return g+=.1})();var g,m=new(function(){function e(o){n(this,e),this.modalInfo=o,this.addCancelBtnEventListener()}return i(e,[{key:"addCancelBtnEventListener",value:function(){var e=this;this.modalInfo.MODAL_CANCEL_BTN.addEventListener("click",function(){e.closeModal()})}},{key:"onPersonTileClick",value:function(e,o){this.openModal(),this.updateModalContent(e),this.setProfileLinkToModalBtn(e)}},{key:"openModal",value:function(){this.modalInfo.MODAL_HTML[0].classList.add("additional-info-modal--open"),this.modalInfo.MODAL_OVERLAY[0].classList.add("modal-overlay--open")}},{key:"updateModalContent",value:function(e){this.modalInfo.MODAL_INFO_AVATAR[0].innerHTML="<img src=".concat(e.image," alt=").concat(e.text.name,">"),this.modalInfo.MODAL_INFO_NAME[0].innerHTML=e.text.name,this.modalInfo.MODAL_INFO_POST[0].innerHTML=e.additionalInfo.post,this.modalInfo.MODAL_INFO_PROJECTS[0].innerHTML=e.additionalInfo.projects}},{key:"closeModal",value:function(){this.modalInfo.MODAL_HTML[0].classList.remove("additional-info-modal--open"),this.modalInfo.MODAL_OVERLAY[0].classList.remove("modal-overlay--open")}},{key:"setProfileLinkToModalBtn",value:function(e){this.modalInfo.MODAL_VIEW_PROFILE[0].href=e.additionalInfo.profileLink}}]),e}())({MODAL_HTML:document.getElementsByClassName("additional-info-modal"),MODAL_INFO_AVATAR:document.getElementsByClassName("image-holder"),MODAL_INFO_NAME:document.getElementsByClassName("person-name"),MODAL_INFO_POST:document.getElementsByClassName("person-post"),MODAL_INFO_PROJECTS:document.getElementsByClassName("person-projects"),MODAL_OVERLAY:document.getElementsByClassName("modal-overlay"),MODAL_CANCEL_BTN:document.querySelector(".modal-cancel-btn"),MODAL_VIEW_PROFILE:document.getElementsByClassName("modal-link-btn")});new(function(){function e(o){n(this,e),this.controls=o,this.addControlEventListener(),this.fullScreenMode=!1,this.addDocumentEventListener()}return i(e,[{key:"addControlEventListener",value:function(){var e=this;this.controls.ZOOM_CONTROLS.addEventListener("click",function(o){e.onControlClick(o.target)})}},{key:"addDocumentEventListener",value:function(){document.addEventListener("fullscreenchange",this.onToggleScreenMode),document.addEventListener("webkitfullscreenchange",this.onToggleScreenMode),document.addEventListener("mozfullscreenchange",this.onToggleScreenMode),document.addEventListener("MSFullscreenChange",this.onToggleScreenMode)}},{key:"onControlClick",value:function(e){-1!==Array.from(e.classList).indexOf("decrease-zoom")&&this.controls.ZOOM_VALUE>5&&(this.decreaseZoom(),this.controls.ZOOM_VALUE<=5?this.disableControl("decrease-zoom"):this.enableControl("increase-zoom")),-1!==Array.from(e.classList).indexOf("increase-zoom")&&this.controls.ZOOM_VALUE<=15&&(this.increaseZoom(),this.controls.ZOOM_VALUE>=15?this.disableControl("increase-zoom"):this.enableControl("decrease-zoom")),-1!==Array.from(e.classList).indexOf("fullscreen-mode")&&this.openFullScreen()}},{key:"increaseZoom",value:function(){r.style.transform="scale(".concat(++this.controls.ZOOM_VALUE/10,")")}},{key:"decreaseZoom",value:function(){r.style.transform="scale(".concat(--this.controls.ZOOM_VALUE/10,")")}},{key:"disableControl",value:function(e){switch(e){case"decrease-zoom":this.controls.DECREASE_CONTROL.classList.add("zoom-control--disabled");break;case"increase-zoom":this.controls.INCREASE_CONTROL.classList.add("zoom-control--disabled")}}},{key:"enableControl",value:function(e){switch(e){case"decrease-zoom":this.controls.DECREASE_CONTROL.classList.remove("zoom-control--disabled");break;case"increase-zoom":this.controls.INCREASE_CONTROL.classList.remove("zoom-control--disabled")}}},{key:"openFullScreen",value:function(){var e=document.querySelector(".container");e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullScreen?(e.webkitRequestFullScreen(),console.log(e.webkitRequestFullScreen)):e.msRequestFullscreen&&e.msRequestFullscreen(),this.fullScreenMode||(document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.msExitFullscreen&&document.msExitFullscreen())}},{key:"onToggleScreenMode",value:function(){this.fullScreenMode=!this.fullScreenMode}}]),e}())({ZOOM_CONTROLS:document.querySelector(".zoom-controls"),DECREASE_CONTROL:document.querySelector(".decrease-zoom"),INCREASE_CONTROL:document.querySelector(".increase-zoom"),ZOOM_VALUE:10});r.addEventListener("click",function(e){-1!==Array.from(e.target.classList).indexOf("node")&&function(e){var o=l.find(function(o){return o.HTMLid==e.target.id});m.onPersonTileClick(o,e)}(e)}),s.addEventListener("click",function(e){m.closeModal(e)}),c.addEventListener("click",function(e){m.closeModal(e)}),new Treant(d);var u=[{name:"Inna Dukhota",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",divisionName:"Talent Aquisition Group ",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota"},{name:"Anna Veselova",avatar:"https://glo-assets.globallogic.com/system/data/65815/profile/IMG_7129.JPG?1534766416",divisionName:"Resourcing ",profileLink:"https://glo.globallogic.com/users/profile/anna.veselova"},{name:"Ellina Medynska ",avatar:"https://glo-assets.globallogic.com/system/data/48745/profile/IMG_9350.jpg?1498201664",divisionName:"PR & Marketing",profileLink:"https://glo.globallogic.com/users/profile/ellina.medynska"},{name:"Sergii Shmatko",avatar:"https://glo-assets.globallogic.com/system/data/60956/profile/Serhii_Shmatko.jpg?1526999529",divisionName:"IT Infrastructure",profileLink:"https://glo.globallogic.com/users/profile/serhii.shmatko"},{name:"Vladyslav Domin",avatar:"https://glo-assets.globallogic.com/system/data/51449/profile/Vladyslav_Domin.jpg?1504697687",divisionName:"Employee Services ",profileLink:"https://glo.globallogic.com/users/profile/vladyslav.domin"},{name:"Nataliya Osipenko",avatar:"https://glo-assets.globallogic.com/system/data/41292/profile/IMG_9556.jpg?1478695541",divisionName:"Process Management (PMG)",profileLink:"https://glo.globallogic.com/users/profile/nataliia.osypenko"},{name:"TBD",avatar:"",divisionName:"Business Partner ",profileLink:""}];new(function(){function e(o){n(this,e),this.divisionsInfo=o,console.log(this.divisionsInfo),this.setDataTile()}return i(e,[{key:"setDataTile",value:function(){var e=this;u.forEach(function(o){var t=document.createElement("div");t.className="divisions_heads tile-wrapper",t.innerHTML='\n         <a href="'.concat(o.profileLink,'" target="_blank" class="tile tile--small tile--framed division-head-tile">\n           <div class="tile-image-holder division-head__image-holder">\n                ').concat(e.onCheckImage(o),'\n             </div>\n            <p class="tile-name">').concat(o.name,'</p>\n            <p class="tile-desc">').concat(o.divisionName,"</p>\n         </a>"),e.divisionsInfo.SECTION_CONTAINER[0].appendChild(t)})}},{key:"onCheckImage",value:function(e){return e.avatar?"<img src=".concat(e.avatar," alt=").concat(e.name,">"):"<img src='https://glo-assets.globallogic.com/system/data/1555/orange_theme/profile/avatar.jpg?1312376270' alt=".concat(e.name,">")}}]),e}())({SECTION_CONTAINER:document.getElementsByClassName("division-heads")});var f=[{name:"Iuliia Izonina",position:"Director, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/12081/profile/IMG_0649.jpg?1360936727",profileLink:"https://glo.globallogic.com/users/profile/iuliia.izonina",functionalArea:"Center Scalability "},{name:"Oleksandr Lanin",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70991/profile/alexlain-gl-2018.jpg?1543590636",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.lanin",functionalArea:"Business Development "},{name:"Nataliya Siromakha",position:"Kharkiv Location Head",avatar:"https://glo-assets.globallogic.com/system/data/55495/profile/NS.jpg?1514899516",profileLink:"https://glo.globallogic.com/users/profile/nataliya.siromakha",functionalArea:"Practices Development "},{name:"Ellina Medynska ",position:"Senior Specialist, Marketing",avatar:"https://glo-assets.globallogic.com/system/data/48745/profile/IMG_9350.jpg?1498201664",profileLink:"https://glo.globallogic.com/users/profile/ellina.medynska",functionalArea:"PR & Marketing"},{name:"Inna Dukhota",position:"Senior Manager, People Development ",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota",functionalArea:"TAG Efficiency"},{name:"axcacs",position:"Senior Manager, People Development ",avatar:"https://glo-assets.globallogic.com/system/data/23822/profile/402888.jpg?1423785644",profileLink:"https://glo.globallogic.com/users/profile/inna.dukhota",functionalArea:"TAG Efficiency"}];new(function(){function e(o){n(this,e),this.StrategicFocusAreaInfo=o,this.setDataTile()}return i(e,[{key:"setDataTile",value:function(){var e=this;f.forEach(function(o){var t=document.createElement("div");t.className="tile-wrapper",t.innerHTML='\n        <a href="'.concat(o.profileLink,'" target="_blank" class="tile tile--big">\n          <div class="tile-image-holder united-tiles-section__image-holder">\n             ').concat(e.onCheckImage(o),'\n          </div>\n          <p class="tile-desc">').concat(o.functionalArea,'</p>\n          <p class="tile-name">').concat(o.name,"</p>\n        </a>"),e.StrategicFocusAreaInfo.SECTION_CONTAINER[0].appendChild(t)})}},{key:"onCheckImage",value:function(e){return e.avatar?"<img src=".concat(e.avatar," alt=").concat(e.name,">"):"<img src='https://glo-assets.globallogic.com/system/data/1555/orange_theme/profile/avatar.jpg?1312376270' alt=".concat(e.name,">")}}]),e}())({SECTION_CONTAINER:document.getElementsByClassName("strategic-focus-area__tiles-holder")});var h=[{name:"Oleksandr Lanin",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70991/profile/alexlain-gl-2018.jpg?1543590636",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.lanin",technology:".NET "},{name:"Olena Yelisheva",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/12765/profile/IMG_0684_21.jpg?1364295028",profileLink:"https://glo.globallogic.com/users/profile/olena.ielysheva",technology:"QA Automation "},{name:"Oleksandr Rybtsov",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70168/profile/Picture.png?1542113014",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.rybtsov",technology:"Java "},{name:"Denys Bratchuk",position:"Director, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/70612/profile/denys-smile.jpg?1542817746",profileLink:"https://glo.globallogic.com/users/profile/denys.bratchuk",technology:"JavaScript "},{name:"Oleksandr Svideniuk",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/55556/profile/ava_2017.jpg?1514971986",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.svideniuk",technology:"C++"}];new(function(){function e(o){n(this,e),this.technologyLeadsInfo=o,this.setDataTile()}return i(e,[{key:"setDataTile",value:function(){var e=this;h.forEach(function(o){var t=document.createElement("div");t.className="tile-wrapper",t.innerHTML='\n        <a href="'.concat(o.profileLink,'" target="_blank" class="tile tile--big">\n          <div class="tile-image-holder united-tiles-section__image-holder">\n             ').concat(e.onCheckImage(o),'\n          </div>\n          <p class="tile-desc">').concat(o.technology,'</p>\n          <p class="tile-name">').concat(o.name,"</p>\n        </a>"),e.technologyLeadsInfo.SECTION_CONTAINER[0].appendChild(t)})}},{key:"onCheckImage",value:function(e){return e.avatar?"<img src=".concat(e.avatar," alt=").concat(e.name,">"):"<img src='https://glo-assets.globallogic.com/system/data/1555/orange_theme/profile/avatar.jpg?1312376270' alt=".concat(e.name,">")}}]),e}())({SECTION_CONTAINER:document.getElementsByClassName("technology-leads__tiles-holder")});var v=[{name:"Andrii Gnennyi",position:"Principal, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/40620/profile/AGN_Square.jpg?1477057620",profileLink:"https://glo.globallogic.com/users/profile/andriy.gnennyy",technology:"Cloud"},{name:"Andrii Antilikatorov",position:"Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/16714/profile/Antilikatorov.png?1392109625",profileLink:"https://glo.globallogic.com/users/profile/Andrii.Antilikatorov",technology:"Machine Learning/AI"},{name:"Igor Manzhos",position:"Senior Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/67610/profile/viber_image.jpg?1537615575",profileLink:"https://glo.globallogic.com/users/profile/igor.manzhos",technology:"Machine Learning/AI"},{name:"Yevhen Napriaglo",position:"Senior Solution Architect, Technology",avatar:"https://glo-assets.globallogic.com/system/data/56844/profile/1.png?1517996955",profileLink:"https://glo.globallogic.com/users/profile/yevhen.napriahlo",technology:"Architecture/Digital Transformation"},{name:"Yevgenii Kolometskyi",position:"Senior Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3549/profile/51725.jpg?1312378925",profileLink:"https://glo.globallogic.com/users/profile/y.kolometskyi",technology:"Automotive/Embedded"},{name:"Oleksandr Adamov",position:"Consultant, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/57013/profile/me_no_ransomware.jpg?1518506599",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.adamov",technology:"Security "},{name:"Vitaliy Tilinskiy",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/54574/profile/Vitaliy.jpg?1512511121",profileLink:"https://glo.globallogic.com/users/profile/vitaliy.tilinskiy",technology:"DevOps"},{name:"Oleksandra Skybina",position:"Associate Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3626/profile/52101.jpg?1312378980",profileLink:"https://glo.globallogic.com/users/profile/Oleksandra.Skybina",technology:"Agile"},{name:"Dmytro Dvornichenko",position:"Senior Designer, Usability & Design",avatar:"https://glo-assets.globallogic.com/system/data/60298/profile/379788_2699761009461_1378935210_n.jpg?1525948393",profileLink:"https://glo.globallogic.com/users/profile/dmytro.dvornichenko",technology:"UX/UI"},{name:"Oleksandr Furdylo",position:"Project Manager, Engineering",avatar:"https://glo-assets.globallogic.com/system/data/3401/profile/51782.jpg?1312378817",profileLink:"https://glo.globallogic.com/users/profile/oleksandr.furdylo",technology:"Mobility "}];new(function(){function e(o){n(this,e),this.practicesLeads=o,this.setDataTile()}return i(e,[{key:"setDataTile",value:function(){var e=this;v.forEach(function(o){var t=document.createElement("div");t.className="tile-wrapper",t.innerHTML='\n        <a href="'.concat(o.profileLink,'" target="_blank" class="tile tile--big">\n          <div class="tile-image-holder united-tiles-section__image-holder">\n             ').concat(e.onCheckImage(o),'\n          </div>\n          <p class="tile-desc">').concat(o.technology,'</p>\n          <p class="tile-name">').concat(o.name,"</p>\n        </a>"),e.practicesLeads.SECTION_CONTAINER[0].appendChild(t)})}},{key:"onCheckImage",value:function(e){return e.avatar?"<img src=".concat(e.avatar," alt=").concat(e.name,">"):"<img src='https://glo-assets.globallogic.com/system/data/1555/orange_theme/profile/avatar.jpg?1312376270' alt=".concat(e.name,">")}}]),e}())({SECTION_CONTAINER:document.getElementsByClassName("practices-leads__tiles-holder")})},function(e,o,t){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,